scale_color_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))+
scale_fill_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))
#ggsave("slowburnheatstress.pdf", width = 10, height = 6)
# need to figure out troublesome time points for each tank
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
filter(!(Time > "2022-06-25 00:00:00" & Temp < 28 & Tank != "T7")) %>%
filter(Time <= as.Date("2022-07-15")) %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress")) %>%
group_by(Time, Treatment) %>%
summarise(mean_temp = mean(Temp), se = std.error(Temp)) %>%
ggplot(data = .,
aes(x = Time, y = mean_temp, color = Treatment)) +
geom_point() +
theme_classic() +
labs(title = "Tank Temperatures",
y = "Temperature (°C)",
x = "Date") +
theme(text = element_text(size = 15)) +
geom_point() +
geom_errorbar(aes(fill=Treatment, group = Treatment, ymin = mean_temp - se, ymax = mean_temp + se), alpha = 0.2) +
scale_color_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))+
scale_fill_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))
# need to figure out troublesome time points for each tank
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
#filter(!(Time > "2022-06-25 00:00:00" & Temp < 28 & Tank != "T7")) %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress")) %>%
group_by(Time, Treatment) %>%
summarise(mean_temp = mean(Temp), se = std.error(Temp)) %>%
ggplot(data = .,
aes(x = Time, y = mean_temp, color = Treatment)) +
geom_point() +
theme_classic() +
labs(title = "Tank Temperatures",
y = "Temperature (°C)",
x = "Date") +
theme(text = element_text(size = 15)) +
geom_point() +
geom_errorbar(aes(fill=Treatment, group = Treatment, ymin = mean_temp - se, ymax = mean_temp + se), alpha = 0.2) +
scale_color_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))+
scale_fill_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))
heatstressassay$Time <- lubridate::round_date(heatstressassay$Time, unit = "60 min")
# need to figure out troublesome time points for each tank
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
#filter(!(Time > "2022-06-25 00:00:00" & Temp < 28 & Tank != "T7")) %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress")) %>%
group_by(Time, Treatment) %>%
summarise(mean_temp = mean(Temp), se = std.error(Temp)) %>%
ggplot(data = .,
aes(x = Time, y = mean_temp, color = Treatment)) +
geom_point() +
theme_classic() +
labs(title = "Tank Temperatures",
y = "Temperature (°C)",
x = "Date") +
theme(text = element_text(size = 15)) +
geom_point() +
geom_errorbar(aes(fill=Treatment, group = Treatment, ymin = mean_temp - se, ymax = mean_temp + se), alpha = 0.2) +
scale_color_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))+
scale_fill_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress"))
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress")) %>%
filter(Tank == "T3")
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress")) %>%
filter(Tank == "T3") %>%
filter(Temp > 31)
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress")) %>%
filter(Tank == "T3") %>%
filter(Temp > 31) %>%
arrange(desc(Time))
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress")) %>%
filter(Tank == "T4") %>%
filter(Temp > 31) %>%
arrange(desc(Time))
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress")) %>%
filter(Tank == "T8") %>%
filter(Temp > 31) %>%
arrange(desc(Time))
# need to figure out troublesome time points for each tank
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
filter(!(Time >= "2022-07-14 00:00:00" & Tank == "T8")) %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress")) %>%
group_by(Time, Treatment) %>%
summarise(mean_temp = mean(Temp), se = std.error(Temp)) %>%
ggplot(data = .,
aes(x = Time, y = mean_temp, color = Treatment)) +
geom_point() +
theme_classic() +
labs(title = "Tank Temperatures",
y = "Temperature (°C)",
x = "Date") +
theme(text = element_text(size = 15)) +
geom_point() +
geom_errorbar(aes(fill=Treatment, group = Treatment, ymin = mean_temp - se, ymax = mean_temp + se), alpha = 0.2) +
scale_color_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))+
scale_fill_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))
# need to figure out troublesome time points for each tank
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
filter(!(Time >= "2022-07-13 20:00:00" & Tank == "T8")) %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress")) %>%
group_by(Time, Treatment) %>%
summarise(mean_temp = mean(Temp), se = std.error(Temp)) %>%
ggplot(data = .,
aes(x = Time, y = mean_temp, color = Treatment)) +
geom_point() +
theme_classic() +
labs(title = "Tank Temperatures",
y = "Temperature (°C)",
x = "Date") +
theme(text = element_text(size = 15)) +
geom_point() +
geom_errorbar(aes(fill=Treatment, group = Treatment, ymin = mean_temp - se, ymax = mean_temp + se), alpha = 0.2) +
scale_color_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))+
scale_fill_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))
# need to figure out troublesome time points for each tank
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
filter(!(Time >= "2022-07-13 00:00:00" & Tank == "T8")) %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress")) %>%
group_by(Time, Treatment) %>%
summarise(mean_temp = mean(Temp), se = std.error(Temp)) %>%
ggplot(data = .,
aes(x = Time, y = mean_temp, color = Treatment)) +
geom_point() +
theme_classic() +
labs(title = "Tank Temperatures",
y = "Temperature (°C)",
x = "Date") +
theme(text = element_text(size = 15)) +
geom_point() +
geom_errorbar(aes(fill=Treatment, group = Treatment, ymin = mean_temp - se, ymax = mean_temp + se), alpha = 0.2) +
scale_color_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))+
scale_fill_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))
# need to figure out troublesome time points for each tank
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
filter(!(Time >= "2022-07-14 00:00:00" & Tank == "T8")) %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress")) %>%
group_by(Time, Treatment) %>%
summarise(mean_temp = mean(Temp), se = std.error(Temp)) %>%
ggplot(data = .,
aes(x = Time, y = mean_temp, color = Treatment)) +
geom_point() +
theme_classic() +
labs(title = "Tank Temperatures",
y = "Temperature (°C)",
x = "Date") +
theme(text = element_text(size = 15)) +
geom_point() +
geom_errorbar(aes(fill=Treatment, group = Treatment, ymin = mean_temp - se, ymax = mean_temp + se), alpha = 0.2) +
scale_color_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))+
scale_fill_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))
# need to figure out troublesome time points for each tank
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
filter(!(Time >= "2022-07-14 00:00:00" & Tank == "T8")) %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress")) %>%
group_by(Time, Treatment) %>%
summarise(mean_temp = mean(Temp), se = std.error(Temp)) %>%
ggplot(data = .,
aes(x = Time, y = mean_temp, color = Treatment)) +
geom_point() +
theme_classic() +
labs(title = "Tank Temperatures",
y = "Temperature (°C)",
x = "Date") +
theme(text = element_text(size = 15)) +
geom_ribbon(aes(fill=Treatment, group = Treatment, ymin = mean_temp - se, ymax = mean_temp + se), alpha = 0.2) +
scale_color_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))+
scale_fill_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))
# need to figure out troublesome time points for each tank
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
filter(!(Time >= "2022-07-14 00:00:00" & Tank == "T8")) %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress")) %>%
group_by(Time, Treatment) %>%
summarise(mean_temp = mean(Temp), se = std.error(Temp)) %>%
ggplot(data = .,
aes(x = Time, y = mean_temp, color = Treatment)) +
geom_point() +
theme_classic() +
labs(title = "Tank Temperatures",
y = "Temperature (°C)",
x = "Date") +
theme(text = element_text(size = 15)) +
geom_point() +
geom_errorbar(aes(fill=Treatment, group = Treatment, ymin = mean_temp - se, ymax = mean_temp + se), alpha = 0.2) +
scale_color_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))+
scale_fill_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))
# need to figure out troublesome time points for each tank
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
filter(!(Time >= "2022-07-14 00:00:00" & Tank == "T8")) %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress")) %>%
group_by(Time, Treatment) %>%
summarise(mean_temp = mean(Temp), se = std.error(Temp)) %>%
ggplot(data = .,
aes(x = Time, y = mean_temp, color = Treatment)) +
geom_point() +
theme_classic() +
labs(y = "Temperature (°C)",
x = "Date") +
theme(text = element_text(size = 15)) +
geom_point() +
geom_errorbar(aes(fill=Treatment, group = Treatment, ymin = mean_temp - se, ymax = mean_temp + se), alpha = 0.2) +
scale_color_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))+
scale_fill_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
filter(!(Time >= "2022-07-14 00:00:00" & Tank == "T8")) %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress")) %>%
group_by(Time, Treatment) %>%
summarise(mean_temp = mean(Temp), se = std.error(Temp)) %>%
ggplot(data = .,
aes(x = Time, y = mean_temp, color = Treatment)) +
geom_point() +
theme_classic() +
labs(y = "Temperature (°C)",
x = "Date") +
theme(text = element_text(size = 15)) +
geom_point() +
geom_errorbar(aes(fill=Treatment, group = Treatment, ymin = mean_temp - se, ymax = mean_temp + se), alpha = 0.2) +
scale_color_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))+
scale_fill_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))
ggsave("slowburnheatstress.pdf", width = 9, height = 6)
#tanks 1-4 had Pclivosa in them since Feb 4, so they were maintained at 24 C. Tanks 5-8 didn't get Acer until Feb 24, so that's why their temps fluctuate before then.
#need to remove tank temps for tanks 5-8 for dates before feb 24 and before feb 17 for tanks 1-4
#ended up doing this manually in Excel
acclimation %>%
filter(Time >= as.Date("2022-02-17")) %>%
dplyr::select(Time:T8) %>%
pivot_longer(T1:T8, names_to="Tank", values_to ="Temp") %>%
ggplot(data = .,
aes(x = Time, y = Temp, color = Tank)) +
geom_line() +
theme_classic() +
labs(title = "Tank Temperatures",
y = "Temperature (°C)",
x = "Date") +
scale_y_continuous(limits = c(22, 26)) +
theme(text = element_text(size = 16)) #all font sizes
#need to clean up this graph,summarize all the tanks together
acclimation$Time <- lubridate::round_date(acclimation$Time, unit = "15 min")
acclimation %>%
filter(Time >= as.Date("2022-02-17")) %>%
dplyr::select(Time:T8) %>%
pivot_longer(T1:T8, names_to="Tank", values_to ="Temp") %>%
drop_na(Temp) %>%
dplyr::group_by(Time) %>%
dplyr::summarise(avg_temp = mean(Temp), se = std.error(Temp)) %>%
ggplot(., aes(x=Time, y=avg_temp)) +
geom_point() +
geom_smooth() +
theme_classic() +
geom_line() +
labs(title = "Tank Temperatures",
y = "Temperature (°C)",
x = "Date") +
scale_y_continuous(limits = c(22, 26)) +
theme(text = element_text(size = 16)) #all font sizes
library(tidyverse)
library(plotrix) #for standard error function
library(cowplot)
feb4<- readxl::read_xlsx("Data from LabVIEW/20220204_TemperatureData edited.xlsx", col_types = c("date", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
feb23 <- readxl::read_xlsx("Data from LabVIEW/20220223_TemperatureData edited.xlsx")
march7 <- readxl::read_xlsx("Data from LabVIEW/20220307_TemperatureData - Copy.xlsx")
march29 <- readxl::read_xlsx("Data from LabVIEW/20220329_TemperatureData.xlsx")
april15 <- readxl::read_xlsx("Data from LabVIEW/20220415_TemperatureData.xlsx")
april25 <- readxl::read_xlsx("Data from LabVIEW/20220425_TemperatureData (1).xlsx") #had to convert to csv because dates weren't reading in correctly
CBASS <- readxl::read_xlsx("Data from LabVIEW/CBASS_labview.xlsx")
may11 <- readxl::read_xlsx("Data from LabVIEW/20220511_TemperatureData.xlsx")
may20 <- readxl::read_xlsx("Data from LabVIEW/20220520_TemperatureData.xlsx")
june10 <- readxl::read_xlsx("Data from LabVIEW/20220610_TemperatureData - Copy.xlsx")
june24 <- readxl::read_xlsx("Data from LabVIEW/20220624_TemperatureData (1).xlsx")
july6 <- readxl::read_xlsx("Data from LabVIEW/20220706_TemperatureData.xlsx",
col_types = c("date", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
july8 <- readxl::read_xlsx("Data from LabVIEW/20220708_TemperatureData edited.xlsx")
july20 <- read_csv("Data from LabVIEW/20220720_TemperatureData.csv") #had to convert to csv because dates weren't reading in correctly
july20$Time <- lubridate::mdy_hms(july20$Time)
acclimation <- bind_rows(feb4, feb23)
temptreatment<- bind_rows(march7, march29, april15) #treatment started march 24 and ended april 20
temptreatment %>% filter(Time >= as.Date("2022-03-24") & Time <= as.Date("2022-04-22")) -> temptreatment
#filter out one anomalous data point
temptreatment %>%
filter(T1<23)
# Set the specific data point to NA
temptreatment[temptreatment$T1 < 22.5, "T1"]= NA
temptreatment %>%
filter(T1<23) #its gone now
CBASS #april 22
recovery <- bind_rows(april15, april25, may11, may20, june10) #recovery started april 23 and ended june 21
recovery %>% filter(Time >= as.Date("2022-04-23") & Time <= as.Date("2022-06-22")) -> recovery
heatstressassay <- bind_rows(june10, june24, july6, july8, july20) #ramp up started june 21
#summary figure of average tank temp during 24-hr period over the 28 days
temptreatment$Time <- lubridate::round_date(temptreatment$Time, unit = "15 min")
temptreatment %>% drop_na() -> temptreatment
temptreatment %>%
filter(Time >= "2022-03-24 09:00:00") %>%
filter(Time <= "2022-04-20 09:00:00") %>%
#remove tissue sampling time points because during those times, you modified the tank temps to all hold at  28 C
filter(!Time >= "2022-03-30 09:00:00" | !Time <= "2022-03-31 09:00:00") %>%
dplyr::select(Time:T8) %>%
pivot_longer(T1:T8, names_to="Tank", values_to ="Temp") %>%
tidyr::separate(Time, c("Date", "Time"), sep = "\\ ") %>%
mutate(treatment = case_when(Tank == "T1" ~ "control",
Tank == "T2" ~ "variable",
Tank == "T3" ~ "variable",
Tank == "T4" ~ "control",
Tank == "T5" ~ "variable",
Tank == "T6" ~ "control",
Tank == "T7" ~ "control",
Tank == "T8" ~ "variable")) %>%
dplyr::group_by(Time, treatment) %>%
dplyr::summarise(avg_temp = mean(Temp), sd = sd(Temp)) %>%
ggplot(., aes(x=Time, y=avg_temp, color = treatment)) +
theme_classic() +
geom_ribbon(aes(fill=treatment, group = treatment, ymin = avg_temp - sd, ymax = avg_temp + sd), alpha = 0.2) +
geom_line(aes(group = treatment)) +
scale_x_discrete(breaks = c("03:00:00", "09:00:00", "15:00:00", "21:00:00")) +
labs(y="Temperature (ºC)") +
scale_color_manual(labels=c("Untreated", "Treated"), values = c( "#60DBDB", "#F54A34"))+
scale_fill_manual(labels=c("Untreated", "Treated"), values = c( "#60DBDB", "#F54A34")) +
theme(text = element_text(size = 15))
#ggsave("summarytemptreatment_stdeviation.pdf", width = 10, height = 6)
temptreatment %>%
filter(Time >= "2022-03-24 09:00:00") %>%
filter(Time <= "2022-04-20 09:00:00") %>%
#remove tissue sampling time points because during those times, you modified the tank temps to all hold at  28 C
filter(!Time >= "2022-03-30 09:00:00" | !Time <= "2022-03-31 09:00:00") %>%
dplyr::select(Time:T8) %>%
pivot_longer(T1:T8, names_to="Tank", values_to ="Temp") %>%
tidyr::separate(Time, c("Date", "Time"), sep = "\\ ") %>%
mutate(treatment = case_when(Tank == "T1" ~ "control",
Tank == "T2" ~ "variable",
Tank == "T3" ~ "variable",
Tank == "T4" ~ "control",
Tank == "T5" ~ "variable",
Tank == "T6" ~ "control",
Tank == "T7" ~ "control",
Tank == "T8" ~ "variable")) %>%
dplyr::group_by(Time, treatment) %>%
dplyr::summarise(avg_temp = mean(Temp), sd = sd(Temp)) %>%
ggplot(., aes(x=Time, y=avg_temp, color = treatment)) +
theme_classic() +
geom_ribbon(aes(fill=treatment, group = treatment, ymin = avg_temp - sd, ymax = avg_temp + sd), alpha = 0.2) +
geom_line(aes(group = treatment)) +
scale_x_discrete(breaks = c("03:00:00", "09:00:00", "15:00:00", "21:00:00")) +
labs(y="Temperature (ºC)") +
#scale_color_manual(labels=c("Untreated", "Treated"), values = c( "#60DBDB", "#F54A34"))+
#scale_fill_manual(labels=c("Untreated", "Treated"), values = c( "#60DBDB", "#F54A34")) +
theme(text = element_text(size = 15))
temptreatment %>%
filter(Time >= "2022-03-24 09:00:00") %>%
filter(Time <= "2022-04-20 09:00:00") %>%
#remove tissue sampling time points because during those times, you modified the tank temps to all hold at  28 C
filter(!Time >= "2022-03-30 09:00:00" | !Time <= "2022-03-31 09:00:00") %>%
dplyr::select(Time:T8) %>%
pivot_longer(T1:T8, names_to="Tank", values_to ="Temp") %>%
tidyr::separate(Time, c("Date", "Time"), sep = "\\ ") %>%
mutate(treatment = case_when(Tank == "T1" ~ "control",
Tank == "T2" ~ "variable",
Tank == "T3" ~ "variable",
Tank == "T4" ~ "control",
Tank == "T5" ~ "variable",
Tank == "T6" ~ "control",
Tank == "T7" ~ "control",
Tank == "T8" ~ "variable")) %>%
dplyr::group_by(Time, treatment) %>%
dplyr::summarise(avg_temp = mean(Temp), sd = sd(Temp)) %>%
ggplot(., aes(x=Time, y=avg_temp, color = treatment)) +
theme_classic() +
geom_ribbon(aes(fill=treatment, group = treatment, ymin = avg_temp - sd, ymax = avg_temp + sd), alpha = 0.2) +
geom_line(aes(group = treatment)) +
scale_x_discrete(breaks = c("03:00:00", "09:00:00", "15:00:00", "21:00:00")) +
labs(y="Temperature (ºC)") +
scale_color_manual(labels=c("Untreated", "Treated"), values = c( "#60DBDB", "#F54A34"))+
scale_fill_manual(labels=c("Untreated", "Treated"), values = c( "#60DBDB", "#F54A34")) +
theme(text = element_text(size = 15))
temptreatment %>%
filter(Time >= "2022-03-24 09:00:00") %>%
filter(Time <= "2022-04-20 09:00:00") %>%
#remove tissue sampling time points because during those times, you modified the tank temps to all hold at  28 C
filter(!Time >= "2022-03-30 09:00:00" | !Time <= "2022-03-31 09:00:00") %>%
dplyr::select(Time:T8) %>%
pivot_longer(T1:T8, names_to="Tank", values_to ="Temp") %>%
tidyr::separate(Time, c("Date", "Time"), sep = "\\ ") %>%
mutate(Treatment = case_when(Tank == "T1" ~ "Untreated",
Tank == "T2" ~ "Treated",
Tank == "T3" ~ "Treated",
Tank == "T4" ~ "Untreated",
Tank == "T5" ~ "Treated",
Tank == "T6" ~ "Untreated",
Tank == "T7" ~ "Untreated",
Tank == "T8" ~ "Treated")) %>%
mutate(Species = case_when(Tank == "T1" ~ "Pclivosa",
Tank == "T2" ~ "Pclivosa",
Tank == "T3" ~ "Pclivosa",
Tank == "T4" ~ "Pclivosa",
Tank == "T5" ~ "Acervicornis",
Tank == "T6" ~ "Acervicornis",
Tank == "T7" ~ "Acervicornis",
Tank == "T8" ~ "Acervicornis")) %>%
group_by(Tank, Date, Treatment, Species) %>%
summarise(daily_max = max(Temp), daily_min = min(Temp), daily_range = (max(Temp)-min(Temp))) %>%
ungroup() %>%
group_by(Tank, Treatment, Species) %>%
summarise(mean_daily_max=mean(daily_max),sd_daily_max=sd(daily_max), mean_daily_min=mean(daily_min),sd_daily_min=sd(daily_min),mean_daily_range=mean(daily_max - daily_min), sd_daily_range=sd(daily_max - daily_min)) -> meanmaxminrange_summarytable
meanmaxminrange_summarytable %>%
group_by(Treatment) %>% summarise(mean_max=mean(mean_daily_max),sd_max=sd(mean_daily_max), mean_min=mean(mean_daily_min),sd_min=sd(mean_daily_min),mean_range=mean(mean_daily_max - mean_daily_min), sd_daily_range=sd(mean_daily_max - mean_daily_min))
ggplot(meanmaxminrange_summarytable, aes(x=Treatment, y=mean_daily_max, color=Tank)) +
geom_point() +
geom_errorbar(aes(ymin = mean_daily_max - sd_daily_max, ymax = mean_daily_max + sd_daily_max), width = 0.2) +
theme_classic()
meanmaxminrange_summarytable %>%
group_by(Treatment) %>% summarise(mean_max=mean(mean_daily_max),sd_max=sd(mean_daily_max), mean_min=mean(mean_daily_min),sd_min=sd(mean_daily_min),mean_range=mean(mean_daily_max - mean_daily_min), sd_daily_range=sd(mean_daily_max - mean_daily_min))
meanmaxminrange_summarytable %>%
group_by(Treatment) %>% summarise(mean_max=mean(mean_daily_max),sd_max=sd(mean_daily_max), mean_min=mean(mean_daily_min),sd_min=sd(mean_daily_min),mean_range=mean(mean_daily_max - mean_daily_min), sd_daily_range=sd(mean_daily_max - mean_daily_min)) %>%
write_csv("meanmaxminrange.csv")
