labs(x="Days at 32ºC", y = "% Immune Cell Activity") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
ipam_tidy_CBASS_treatments
ipam_tidy_CBASS_treatments
# individual corals
full_join(ipam_tidy_CBASS_treatments, percent_cells_speciestreatments, by = c("Species", "ID", "Colony", "Treatment"))
# individual corals
full_join(ipam_tidy_CBASS_treatments, percent_cells_speciestreatments, by = c("Species", "ID", "Colony", "Treatment")) %>%
drop_na()
# individual corals
full_join(ipam_tidy_CBASS_treatments, percent_cells_speciestreatments, by = c("Species", "ID", "Colony", "Treatment")) %>%
drop_na() %>%
select(Colony:fvfm, CBASS_temp, ID, num_days, mean_replicate_percent_perID)
# individual corals
full_join(ipam_tidy_CBASS_treatments, percent_cells_speciestreatments, by = c("Species", "ID", "Colony", "Treatment")) %>%
drop_na() %>%
dplyr::select(Colony:fvfm, CBASS_temp, ID, num_days, mean_replicate_percent_perID)
# individual corals
full_join(ipam_tidy_CBASS_treatments, percent_cells_speciestreatments, by = c("Species", "ID", "Colony", "Treatment")) %>%
drop_na() %>%
dplyr::select(Colony:fvfm, CBASS_temp, ID, num_days, mean_replicate_percent_perID) %>%
ggplot(., aes(x=mean_replicate_percent_perID, y=fvfm, color = Treatment)) +
geom_point() +
facet_wrap(~Species+num_days, scales = "free_x") +
geom_smooth(method="lm", se = FALSE) +
theme_classic() +
labs(x="Days at 32ºC", y = "% Immune Cell Activity") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
# individual corals
full_join(ipam_tidy_CBASS_treatments, percent_cells_speciestreatments, by = c("Species", "ID", "Colony", "Treatment")) %>%
drop_na() %>%
dplyr::select(Colony:fvfm, CBASS_temp, ID, num_days, mean_replicate_percent_perID) %>%
ggplot(., aes(x=mean_replicate_percent_perID, y=fvfm, color = Treatment)) +
geom_point() +
facet_wrap(~Species+num_days, scales = "free_x") +
geom_smooth(method="lm", se = FALSE) +
theme_classic() +
labs(x= "% Immune Cell Activity", y = "CBASS fvfm") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
# individual corals
full_join(ipam_tidy_CBASS_treatments, percent_cells_speciestreatments, by = c("Species", "ID", "Colony", "Treatment")) %>%
drop_na() %>%
dplyr::select(Colony:fvfm, CBASS_temp, ID, num_days, mean_replicate_percent_perID) %>%
ggplot(., aes(x=fvfm, y=mean_replicate_percent_perID, color = Treatment)) +
geom_point() +
facet_wrap(~Species+num_days, scales = "free_x") +
geom_smooth(method="lm", se = FALSE) +
theme_classic() +
labs(x= "% Immune Cell Activity", y = "CBASS fvfm") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
# individual corals
full_join(ipam_tidy_CBASS_treatments, percent_cells_speciestreatments, by = c("Species", "ID", "Colony", "Treatment")) %>%
drop_na() %>%
dplyr::select(Colony:fvfm, CBASS_temp, ID, num_days, mean_replicate_percent_perID) %>%
ggplot(., aes(x=mean_replicate_percent_perID, y=fvfm, color = Treatment)) +
geom_point() +
facet_wrap(~Species+num_days, scales = "free_x") +
geom_smooth(method="lm", se = FALSE) +
theme_classic() +
labs(x= "% Immune Cell Activity", y = "CBASS fvfm") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
# means
ipam_tidy_CBASS_treatments %>%
dplyr::group_by(Species, Colony, Treatment) %>%
dplyr::summarise(mean_fvfm = mean(fvfm))
# means
ipam_tidy_CBASS_treatments %>%
dplyr::group_by(Species, Colony, Treatment) %>%
dplyr::summarise(mean_fvfm = mean(fvfm)) -> mean_ipam
percent_cells_speciestreatments %>%
dplyr::group_by(Species, Colony, Treatment, num_days) %>%
dplyr::summarise(mean_percent = mean(mean_replicate_percent_perID)) -> mean_phagocytosis
full_join(mean_ipam, mean_phagocytosis, by = c("Species", "Colony", "Treatment")) %>%
ggplot(., aes(x=mean_percent, y=mean_fvfm, color = Treatment)) +
geom_point() +
facet_wrap(~Species+num_days, scales = "free_x") +
geom_smooth(method="lm", se = FALSE) +
theme_classic() +
labs(x= "% Immune Cell Activity", y = "CBASS fvfm") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
# individual corals
full_join(ipam_tidy_CBASS_treatments, percent_cells_speciestreatments, by = c("Species", "ID", "Colony", "Treatment")) %>%
drop_na() %>%
dplyr::select(Colony:fvfm, CBASS_temp, ID, num_days, mean_replicate_percent_perID) %>%
ggplot(., aes(x=mean_replicate_percent_perID, y=fvfm, color = Treatment)) +
geom_point() +
facet_wrap(~Species+num_days, scales = "free_x") +
geom_smooth(method="lm", se = FALSE) +
theme_classic() +
labs(x= "% Immune Cell Activity", y = "CBASS fvfm") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
library(tidyverse)
library(janitor)
library(rstatix)
library(cowplot)
library(plotrix)
metadata <- readxl::read_xlsx("../metadata.xlsx", sheet = "tidy_data")
str(metadata) #295 corals
# metadata %>%
#   filter(!Removed_Date == "unknown") -> metadata #244 corals...
metadata$Removed_Date <- as.numeric(metadata$Removed_Date)
metadata$Removed_Date <- as.Date(metadata$Removed_Date, origin = "1899-12-30")
metadata$mortality_date <- as.numeric(metadata$mortality_date)
metadata$mortality_date <- as.Date(metadata$mortality_date, origin = "1899-12-30")
metadata %>%
mutate(CBASS_temp = case_when(CBASS_tank == "1" ~ "36",
CBASS_tank == "2" ~ "37",
CBASS_tank == "3" ~ "32",
CBASS_tank == "4" ~ "33",
CBASS_tank == "5" ~ "35",
CBASS_tank == "6" ~ "30",
CBASS_tank == "7" ~ "34",
CBASS_tank == "8" ~ "28")) -> tidy_metadata
tidy_metadata %>%
filter(Removed_Date < "2022-05-20") %>%
arrange(desc(Removed_Date))
#April 26 was the last coral reported with a mortality date until the slow burn heat stress started. So have April 26 be the cut-off point for CBASS mortality plots.
ggplot(tidy_metadata, aes(x=Removed_Date, fill = Treatment)) +
geom_bar() +
facet_wrap(~Species)
ggplot(tidy_metadata, aes(x=mortality_date, fill = Treatment)) +
geom_bar() +
facet_wrap(~Species)
CBASS_mortality <- tidy_metadata %>%
dplyr::filter(Removed_Date >= "2022-04-20" & Removed_Date <= "2022-04-26")
#for this time period, Removed_Date and mortality_date match up so there's no need to use the coalesce function
tidy_metadata %>%
dplyr::filter(Removed_Date >= "2022-04-20" & Removed_Date <= "2022-04-26") %>%
drop_na(Species, Treatment, Reason_removed) %>%
group_by(Reason_removed, Species, Treatment) %>%
summarize(count = n()) %>%
ggplot(., aes(x=Reason_removed, y=count, fill = Treatment)) +
geom_col(position = position_dodge()) +
theme_classic() +
facet_wrap(~Species)  +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(x="Category", y="Number of corals") +
coord_flip()
tidy_metadata %>%
dplyr::filter(Removed_Date >= "2022-04-20" & Removed_Date <= "2022-04-26") %>%
drop_na(Species, Treatment, Reason_removed) %>%
group_by(Reason_removed, Species, Treatment) %>%
dplyr::summarize(count = n()) %>%
ggplot(., aes(x=Reason_removed, y=count, fill = Treatment)) +
geom_col(position = position_dodge()) +
theme_classic() +
facet_wrap(~Species)  +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(x="Category", y="Number of corals") +
coord_flip()
CBASS_mortality
CBASS_mortality %>%
group_by(Species, Treatment) %>%
summarize(count_RTL = n()) -> RTL_species_treatment_count
CBASS_mortality %>%
mutate(Reason_removed = case_when(Reason_removed == "dead" ~ "RTL",
Reason_removed == "post-CBASS RTL" ~ "RTL",
Reason_removed == "RTL" ~ "RTL")) %>%
drop_na(Species, Treatment) %>%
group_by(Species, Treatment) %>%
dplyr::summarize(count_RTL = n()) -> RTL_species_treatment_count
CBASS_mortality %>%
mutate(Reason_removed = case_when(Reason_removed == "dead" ~ "RTL",
Reason_removed == "post-CBASS RTL" ~ "RTL",
Reason_removed == "RTL" ~ "RTL")) %>%
drop_na(Species, Treatment) %>%
group_by(Species, Treatment, CBASS_temp) %>%
dplyr::summarize(count_RTL = n()) -> RTL_species_treatment_CBASStemps
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL) %>%
select(!count_total) %>%
pivot_longer(count_RTL:count_survived, names_to="label", values_to="count") %>%
ggplot(., aes(x=Treatment, y=count, fill = label)) +
geom_col() +
theme_classic() +
scale_fill_manual(labels=c("RTL", "Survived"), values = c("black", "grey"))  +
theme(text = element_text(size = 12)) +
facet_wrap(~Species, scales = "free_x") +
labs(y="Count", fill = "Category")
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL) %>%
dplyr::select(!count_total) %>%
pivot_longer(count_RTL:count_survived, names_to="label", values_to="count") %>%
ggplot(., aes(x=Treatment, y=count, fill = label)) +
geom_col() +
theme_classic() +
scale_fill_manual(labels=c("RTL", "Survived"), values = c("black", "grey"))  +
theme(text = element_text(size = 12)) +
facet_wrap(~Species, scales = "free_x") +
labs(y="Count", fill = "Category")
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL) %>%
dplyr::select(!count_total)
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment, CBASS_temp) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_CBASStemps) %>%
drop_na(CBASS_temp) %>%
mutate(count_RTL = if_else(is.na(count_RTL),0,count_RTL)) %>%
mutate(count_survived = count_total-count_RTL) %>%
mutate(count_survived = if_else(is.na(count_survived),0,count_survived)) %>%
dplyr::select(!count_total) %>%
pivot_longer(count_RTL:count_survived, names_to="label", values_to="count") %>%
ggplot(., aes(x=CBASS_temp, y=count, fill = label)) +
geom_col() +
theme_classic() +
scale_fill_manual(labels=c("RTL", "Survived"), values = c("black", "grey"))  +
theme(text = element_text(size = 12)) +
facet_wrap(~Species*Treatment, scales = "free_x") +
labs(y="Count", fill = "Category")
View(CBASS_mortality)
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
dplyr::filter(Reason_removed != "tissue sampling")
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date))
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
dplyr::filter(Reason_removed != "tissue sampling")
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
dplyr::filter(Reason_removed != "tissue sampling") %>%
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL) %>%
dplyr::select(!count_total) %>%
pivot_longer(count_RTL:count_survived, names_to="label", values_to="count") %>%
ggplot(., aes(x=Treatment, y=count, fill = label)) +
geom_col() +
theme_classic() +
scale_fill_manual(labels=c("RTL", "Survived"), values = c("black", "grey"))  +
theme(text = element_text(size = 12)) +
facet_wrap(~Species, scales = "free_x") +
labs(y="Count", fill = "Category")
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
dplyr::filter(Reason_removed != "tissue sampling") %>%
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL) %>%
dplyr::select(!count_total)
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date))
metadata <- readxl::read_xlsx("../metadata.xlsx", sheet = "tidy_data")
metadata
metadata <- readxl::read_xlsx("../metadata.xlsx", sheet = "tidy_data")
str(metadata) #295 corals
metadata$Removed_Date <- as.numeric(metadata$Removed_Date)
metadata$Removed_Date <- as.Date(metadata$Removed_Date, origin = "1899-12-30")
metadata$mortality_date <- as.numeric(metadata$mortality_date)
metadata$mortality_date <- as.Date(metadata$mortality_date, origin = "1899-12-30")
metadata <- readxl::read_xlsx("../metadata.xlsx", sheet = "tidy_data")
metadata
metadata %>%
mutate(CBASS_temp = case_when(CBASS_tank == "1" ~ "36",
CBASS_tank == "2" ~ "37",
CBASS_tank == "3" ~ "32",
CBASS_tank == "4" ~ "33",
CBASS_tank == "5" ~ "35",
CBASS_tank == "6" ~ "30",
CBASS_tank == "7" ~ "34",
CBASS_tank == "8" ~ "28")) -> tidy_metadata
metadata %>%
filter(is.na(Removed_Date) & is.na(mortality_date)) #43 corals don't have either. But if they weren't assigned a heat-stress tank, that should indicate that they were removed/died before 06/15/2022
metadata %>%
filter(is.na(Removed_Date) & is.na(mortality_date) & is.na(slowburn_heatstress_tank)) # 5 corals. looks like the four Acer were tissue sampled and the Pcli who knows, it got buoyant weighed on April 21. they probably died sometime after CBASS and before heat stress.
tidy_metadata %>%
filter(Removed_Date < "2022-05-20") %>%
arrange(desc(Removed_Date))
CBASS_mortality <- tidy_metadata %>%
dplyr::filter(Removed_Date >= "2022-04-20" & Removed_Date <= "2022-04-26")
CBASS_mortality
tidy_metadata %>%
dplyr::filter(Removed_Date >= "2022-04-20" & Removed_Date <= "2022-04-26") %>%
drop_na(Species, Treatment, Reason_removed) %>%
group_by(Reason_removed, Species, Treatment) %>%
dplyr::summarize(count = n()) %>%
ggplot(., aes(x=Reason_removed, y=count, fill = Treatment)) +
geom_col(position = position_dodge()) +
theme_classic() +
facet_wrap(~Species)  +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(x="Category", y="Number of corals") +
coord_flip()
CBASS_mortality %>%
mutate(Reason_removed = case_when(Reason_removed == "dead" ~ "RTL",
Reason_removed == "post-CBASS RTL" ~ "RTL",
Reason_removed == "RTL" ~ "RTL")) %>%
drop_na(Species, Treatment) %>%
group_by(Species, Treatment) %>%
dplyr::summarize(count_RTL = n()) -> RTL_species_treatment_count
CBASS_mortality %>%
mutate(Reason_removed = case_when(Reason_removed == "dead" ~ "RTL",
Reason_removed == "post-CBASS RTL" ~ "RTL",
Reason_removed == "RTL" ~ "RTL")) %>%
drop_na(Species, Treatment) %>%
group_by(Species, Treatment, CBASS_temp) %>%
dplyr::summarize(count_RTL = n()) -> RTL_species_treatment_CBASStemps
RTL_species_treatment_count
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
dplyr::filter(Reason_removed != "tissue sampling") %>%
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL) %>%
dplyr::select(!count_total) %>%
pivot_longer(count_RTL:count_survived, names_to="label", values_to="count") %>%
ggplot(., aes(x=Treatment, y=count, fill = label)) +
geom_col() +
theme_classic() +
scale_fill_manual(labels=c("RTL", "Survived"), values = c("black", "grey"))  +
theme(text = element_text(size = 12)) +
facet_wrap(~Species, scales = "free_x") +
labs(y="Count", fill = "Category")
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL) %>%
dplyr::select(!count_total) %>%
pivot_longer(count_RTL:count_survived, names_to="label", values_to="count") %>%
ggplot(., aes(x=Treatment, y=count, fill = label)) +
geom_col() +
theme_classic() +
scale_fill_manual(labels=c("RTL", "Survived"), values = c("black", "grey"))  +
theme(text = element_text(size = 12)) +
facet_wrap(~Species, scales = "free_x") +
labs(y="Count", fill = "Category")
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL) %>%
dplyr::select(!count_total)
CBASS_mortality
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date))
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20"  & Removed_Date <= "2022-04-26") %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL) %>%
dplyr::select(!count_total) %>%
pivot_longer(count_RTL:count_survived, names_to="label", values_to="count") %>%
ggplot(., aes(x=Treatment, y=count, fill = label)) +
geom_col() +
theme_classic() +
scale_fill_manual(labels=c("RTL", "Survived"), values = c("black", "grey"))  +
theme(text = element_text(size = 12)) +
facet_wrap(~Species, scales = "free_x") +
labs(y="Count", fill = "Category")
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL) %>%
dplyr::select(!count_total) %>%
pivot_longer(count_RTL:count_survived, names_to="label", values_to="count") %>%
ggplot(., aes(x=Treatment, y=count, fill = label)) +
geom_col() +
theme_classic() +
scale_fill_manual(labels=c("RTL", "Survived"), values = c("black", "grey"))  +
theme(text = element_text(size = 12)) +
facet_wrap(~Species, scales = "free_x") +
labs(y="Count", fill = "Category")
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n())
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date))
RTL_species_treatment_count
RTL_species_treatment_count
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL) %>%
dplyr::select(!count_total) %>%
pivot_longer(count_RTL:count_survived, names_to="label", values_to="count") %>%
ggplot(., aes(x=Treatment, y=count, fill = label)) +
geom_col() +
theme_classic() +
scale_fill_manual(labels=c("RTL", "Survived"), values = c("black", "grey"))  +
theme(text = element_text(size = 12)) +
facet_wrap(~Species, scales = "free_x") +
labs(y="Count", fill = "Category")
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL) %>%
dplyr::select(!count_total)
RTL_species_treatment_count
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL) %>%
dplyr::select(!count_total)
CBASS_mortality
ggplot(tidy_metadata, aes(x=Removed_Date, fill = Treatment)) +
geom_bar() +
facet_wrap(~Species)
ggplot(tidy_metadata, aes(x=mortality_date, fill = Treatment)) +
geom_bar() +
facet_wrap(~Species)
View(tidy_metadata)
RTL_species_treatment_count
RTL_species_treatment_CBASStemps
tidy_metadata
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n())
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count)
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL)
tidy_metadata %>%
dplyr::filter(!Removed_Date < "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL) %>%
dplyr::select(!count_total) %>%
pivot_longer(count_RTL:count_survived, names_to="label", values_to="count") %>%
ggplot(., aes(x=Treatment, y=count, fill = label)) +
geom_col() +
theme_classic() +
scale_fill_manual(labels=c("RTL", "Survived"), values = c("black", "grey"))  +
theme(text = element_text(size = 12)) +
facet_wrap(~Species, scales = "free_x") +
labs(y="Count", fill = "Category")
tidy_metadata %>%
dplyr::filter(!Removed_Date < "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL)
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL) %>%
dplyr::select(!count_total) %>%
pivot_longer(count_RTL:count_survived, names_to="label", values_to="count") %>%
ggplot(., aes(x=Treatment, y=count, fill = label)) +
geom_col() +
theme_classic() +
scale_fill_manual(labels=c("RTL", "Survived"), values = c("black", "grey"))  +
theme(text = element_text(size = 12)) +
facet_wrap(~Species, scales = "free_x") +
labs(y="Count", fill = "Category")
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
dplyr::summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL)
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment)
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date))
tidy_metadata
metadata <- readxl::read_xlsx("metadata.xlsx", sheet = "tidy_data")
metadata %>%
select(Species, ID, Colony) %>%
group_by(Species, Colony) %>%
summarise(count = n())
