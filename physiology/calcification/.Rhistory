calc_bw <- read_csv("calc_bw.csv")
library(tidyverse)
library(gsw) #for density calculation
library(rstatix)
library(ggsignif)
library(lme4)
library(emmeans)
calc_bw <- read_csv("calc_bw.csv")
View(calc_bw)
metadata <- readxl::read_xlsx("../metadata.xlsx")
View(metadata)
buoyantweights<- metadata %>% dplyr::select(Species, ID, Colony, Treatment, Random_Tank, Bw_initial_raw_mass:bw_final_temp) %>% drop_na(bw_final_date)
buoyantweights<- metadata %>% dplyr::select(Species, ID, Colony, Treatment, Random_Tank, Bw_initial_raw_mass:bw_final_temp)
buoyantweights<- metadata %>% dplyr::select(Species, ID, Colony, Treatment, Treatment_Tank, Bw_initial_raw_mass:bw_final_temp)
View(buoyantweights)
#sample size
buoyantweights %>% group_by(Species, Treatment) %>% summarise(count = n())
#initial and final corrected buoyant weight calculations
buoyantweights %>%
group_by(Species, ID, Colony, Treatment, bw_initial_date) %>%
mutate(SWrho_initial = gsw_rho_t_exact(SA = `bw_initial_salinity (ppt)`,
t = bw_initial_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_initial = Bw_initial_raw_mass/(1-SWrho_initial/2.93)) %>%  #2.93 is the density of solid aragonite
ungroup() %>%
group_by(Species, ID, Colony, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
ungroup() %>%
mutate(percent_change = ((CalcMAir_final - CalcMAir_initial)/ CalcMAir_initial)*100) -> calc_bw
buoyantweights<- metadata %>%
dplyr::select(Species, ID, Colony, Treatment, Treatment_Tank, Bw_initial_raw_mass:bw_final_temp) %>%
mutate(Treatment = case_when(Tank == "1" ~ "Untreated",
Tank == "2" ~ "Treated",
Tank == "3" ~ "Treated",
Tank == "4" ~ "Untreated",
Tank == "5" ~ "Treated",
Tank == "6" ~ "Untreated",
Tank == "7" ~ "Untreated",
Tank == "8" ~ "tank_8"))
buoyantweights<- metadata %>%
dplyr::select(Species, ID, Colony, Treatment, Treatment_Tank, Bw_initial_raw_mass:bw_final_temp) %>%
mutate(Treatment = case_when(Treatment_Tank == "1" ~ "Untreated",
Treatment_Tank == "2" ~ "Treated",
Treatment_Tank == "3" ~ "Treated",
Treatment_Tank == "4" ~ "Untreated",
Treatment_Tank == "5" ~ "Treated",
Treatment_Tank == "6" ~ "Untreated",
Treatment_Tank == "7" ~ "Untreated",
Treatment_Tank == "8" ~ "tank_8"))
#initial and final corrected buoyant weight calculations
buoyantweights %>%
group_by(Species, ID, Colony, Treatment, bw_initial_date) %>%
mutate(SWrho_initial = gsw_rho_t_exact(SA = `bw_initial_salinity (ppt)`,
t = bw_initial_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_initial = Bw_initial_raw_mass/(1-SWrho_initial/2.93)) %>%  #2.93 is the density of solid aragonite
ungroup() %>%
group_by(Species, ID, Colony, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
ungroup() %>%
mutate(percent_change = ((CalcMAir_final - CalcMAir_initial)/ CalcMAir_initial)*100) -> calc_bw
calc_bw
calc_bw %>%
dplyr::select(Species, ID, Colony, Treatment, Random_Tank, Bw_initial_raw_mass:bw_final_temp) %>%
drop_na(Species) %>%
group_by(Species, ID, Colony, Treatment, bw_initial_date) %>%
mutate(SWrho_initial = gsw_rho_t_exact(SA = `bw_initial_salinity (ppt)`,
t = bw_initial_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_initial = Bw_initial_raw_mass/(1-SWrho_initial/2.93)) %>%
group_by(Colony, Treatment, Species) %>%
ggplot(., aes(x=Colony, y = CalcMAir_initial, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species, scales = "free") +
scale_fill_manual(labels=c("Tank 8", "Treated", "Untreated"), values = c("grey", "#F54A34", "#60DBDB"))  +
labs(y = "Mass in Air (g)") +
theme(text = element_text(size = 15))
calc_bw %>%
dplyr::select(Species, ID, Colony, Treatment, Treatment_Tank, Bw_initial_raw_mass:bw_final_temp) %>%
drop_na(Species) %>%
group_by(Species, ID, Colony, Treatment, bw_initial_date) %>%
mutate(SWrho_initial = gsw_rho_t_exact(SA = `bw_initial_salinity (ppt)`,
t = bw_initial_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_initial = Bw_initial_raw_mass/(1-SWrho_initial/2.93)) %>%
group_by(Colony, Treatment, Species) %>%
ggplot(., aes(x=Colony, y = CalcMAir_initial, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species, scales = "free") +
scale_fill_manual(labels=c("Tank 8", "Treated", "Untreated"), values = c("grey", "#F54A34", "#60DBDB"))  +
labs(y = "Mass in Air (g)") +
theme(text = element_text(size = 15))
calc_bw %>%
dplyr::select(Species, ID, Colony, Treatment, Treatment_Tank, bw_final_raw_mass:bw_final_temp) %>%
drop_na(Species) %>%
group_by(Species, ID, Colony, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
group_by(Colony, Treatment, Species) %>%
ggplot(., aes(x=Colony, y = CalcMAir_final, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species, scales = "free") +
scale_fill_manual(labels=c("Tank 8", "Treated", "Untreated"), values = c("grey", "#F54A34", "#60DBDB"))  +
labs(y = "Mass in Air (g)") +
theme(text = element_text(size = 15))
calc_bw %>%
dplyr::select(Species, ID, Colony, Treatment, Random_Tank, bw_final_raw_mass:bw_final_temp) %>%
drop_na(Species) %>%
group_by(Species, ID, Colony, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
drop_na(Treatment, bw_final_salinity) %>%
group_by(Treatment, Species) %>%
summarise(count = n())
calc_bw %>%
dplyr::select(Species, ID, Colony, Treatment, Treatment_Tank, bw_final_raw_mass:bw_final_temp) %>%
drop_na(Species) %>%
group_by(Species, ID, Colony, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
drop_na(Treatment, bw_final_salinity) %>%
group_by(Treatment, Species) %>%
summarise(count = n())
calc_bw %>%
filter(!(Species == "Acropora cervicornis" & ID == "94")) %>% #removed one that had been tissue sampled
group_by(Colony, Treatment) %>%
ggplot(., aes(x=Colony, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species, scales = "free") +
scale_fill_manual(labels=c("Tank 8", "Treated", "Untreated"), values = c("grey", "#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth")
calc_bw %>%
filter(!(Species == "Acropora cervicornis" & ID == "94")) %>% #removed one that had been tissue sampled
group_by(Treatment) %>%
ggplot(., aes(x=Species, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(labels=c("Tank 8", "Treated", "Untreated"), values = c("grey", "#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth")
calc_bw %>%
filter(!(Species == "Acropora cervicornis" & ID == "94")) %>% #removed one that had been tissue sampled
unite("Combined", Colony:Treatment, remove=F) %>%
wilcox_test(., percent_change ~ Combined, p.adjust.method = 'BH') %>% view()
buoyantweights %>%
group_by(Species, ID, Colony, Treatment, bw_initial_date) %>%
mutate(SWrho_initial = gsw_rho_t_exact(SA = `bw_initial_salinity (ppt)`,
t = bw_initial_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_initial = Bw_initial_raw_mass/(1-SWrho_initial/2.93)) %>%  #2.93 is the density of solid aragonite
ungroup() %>%
group_by(Species, ID, Colony, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
ungroup() %>%
mutate(percent_change = ((CalcMAir_final - CalcMAir_initial)/ CalcMAir_initial)*100)
buoyantweights %>%
group_by(Species, ID, Colony, Treatment, bw_initial_date) %>%
mutate(SWrho_initial = gsw_rho_t_exact(SA = `bw_initial_salinity (ppt)`,
t = bw_initial_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_initial = Bw_initial_raw_mass/(1-SWrho_initial/2.93)) %>%  #2.93 is the density of solid aragonite
ungroup() %>%
group_by(Species, ID, Colony, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
filter(!(Species == "Acropora cervicornis" & ID == "94")) %>% #drop this one sample because it was tissue sampled
ungroup() %>%
mutate(percent_change = ((CalcMAir_final - CalcMAir_initial)/ CalcMAir_initial)*100) %>%
drop_na()
write_csv(calc_bw_bothspeciesgenet_bothtimepoints, file = "calc_bw_bothspeciesgenet_bothtimepoints.csv")
#initial and final corrected buoyant weight calculations
buoyantweights %>%
group_by(Species, ID, Colony, Treatment, bw_initial_date) %>%
mutate(SWrho_initial = gsw_rho_t_exact(SA = `bw_initial_salinity (ppt)`,
t = bw_initial_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_initial = Bw_initial_raw_mass/(1-SWrho_initial/2.93)) %>%  #2.93 is the density of solid aragonite
ungroup() %>%
group_by(Species, ID, Colony, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
filter(!(Species == "Acropora cervicornis" & ID == "94")) %>% #drop this one sample because it was tissue sampled
ungroup() %>%
mutate(percent_change = ((CalcMAir_final - CalcMAir_initial)/ CalcMAir_initial)*100) %>%
drop_na() -> calc_bw_bothspeciesgenet_bothtimepoints
write_csv(calc_bw_bothspeciesgenet_bothtimepoints, file = "calc_bw_bothspeciesgenet_bothtimepoints.csv")
buoyantweights %>%
group_by(Species, ID, Colony, Treatment, bw_initial_date)
calc_bw_bothspeciesgenet_bothtimepoints %>%
dplyr::select(Species, ID, Colony, Treatment, Treatment_Tank, Bw_initial_raw_mass:bw_final_temp) %>%
drop_na(Species) %>%
group_by(Species, ID, Colony, Treatment, bw_initial_date) %>%
mutate(SWrho_initial = gsw_rho_t_exact(SA = `bw_initial_salinity (ppt)`,
t = bw_initial_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_initial = Bw_initial_raw_mass/(1-SWrho_initial/2.93)) %>%
group_by(Colony, Treatment, Species) %>%
ggplot(., aes(x=Colony, y = CalcMAir_initial, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species, scales = "free") +
scale_fill_manual(labels=c("Tank 8", "Treated", "Untreated"), values = c("grey", "#F54A34", "#60DBDB"))  +
labs(y = "Mass in Air (g)") +
theme(text = element_text(size = 15))
calc_bw_bothspeciesgenet_bothtimepoints %>%
dplyr::select(Species, ID, Colony, Treatment, Treatment_Tank, bw_final_raw_mass:bw_final_temp) %>%
drop_na(Species) %>%
group_by(Species, ID, Colony, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
group_by(Colony, Treatment, Species) %>%
ggplot(., aes(x=Colony, y = CalcMAir_final, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species, scales = "free") +
scale_fill_manual(labels=c("Tank 8", "Treated", "Untreated"), values = c("grey", "#F54A34", "#60DBDB"))  +
labs(y = "Mass in Air (g)") +
theme(text = element_text(size = 15))
calc_bw_bothspeciesgenet_bothtimepoints %>%
group_by(Colony, Treatment) %>%
ggplot(., aes(x=Colony, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species, scales = "free") +
scale_fill_manual(labels=c("Tank 8", "Treated", "Untreated"), values = c("grey", "#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth")
calc_bw_bothspeciesgenet_bothtimepoints %>%
group_by(Treatment) %>%
ggplot(., aes(x=Species, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(labels=c("Tank 8", "Treated", "Untreated"), values = c("grey", "#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth")
calc_bw_bothspeciesgenet_bothtimepoints %>%
group_by(Colony, Treatment, Species) %>%
ggplot(., aes(x=Colony, y = CalcMAir_initial, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species, scales = "free") +
scale_fill_manual(labels=c("Tank 8", "Treated", "Untreated"), values = c("grey", "#F54A34", "#60DBDB"))  +
labs(y = "Mass in Air (g)") +
theme(text = element_text(size = 15))
calc_bw_bothspeciesgenet_bothtimepoints %>%
group_by(Colony, Treatment, Species) %>%
ggplot(., aes(x=Colony, y = CalcMAir_final, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species, scales = "free") +
scale_fill_manual(labels=c("Tank 8", "Treated", "Untreated"), values = c("grey", "#F54A34", "#60DBDB"))  +
labs(y = "Mass in Air (g)") +
theme(text = element_text(size = 15))
calc_bw_bothspeciesgenet_bothtimepoints %>%
group_by(Colony, Treatment) %>%
ggplot(., aes(x=Colony, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species, scales = "free") +
scale_fill_manual(labels=c("Tank 8", "Treated", "Untreated"), values = c("grey", "#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth")
calc_bw_bothspeciesgenet_bothtimepoints %>%
group_by(Treatment) %>%
ggplot(., aes(x=Species, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(labels=c("Tank 8", "Treated", "Untreated"), values = c("grey", "#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth")
#initial and final corrected buoyant weight calculations
buoyantweights %>%
group_by(Species, ID, Treatment, bw_initial_date) %>%
mutate(SWrho_initial = gsw_rho_t_exact(SA = `bw_initial_salinity (ppt)`,
t = bw_initial_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_initial = Bw_initial_raw_mass/(1-SWrho_initial/2.93)) %>%  #2.93 is the density of solid aragonite
ungroup() %>%
group_by(Species, ID, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
filter(!(Species == "Acropora cervicornis" & ID == "94")) %>% #drop this one sample because it was tissue sampled
ungroup() %>%
mutate(percent_change = ((CalcMAir_final - CalcMAir_initial)/ CalcMAir_initial)*100) %>%
drop_na() -> calc_bw_bothspecies_bothtimepoints
write_csv(calc_bw_bothspecies_bothtimepoints, file = "calc_bw_bothspecies_bothtimepoints.csv")
calc_bw_bothspecies_bothtimepoints %>%
group_by(Treatment) %>%
ggplot(., aes(x=Species, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(labels=c("Tank 8", "Treated", "Untreated"), values = c("grey", "#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth")
str(calc_bw_bothspecies_bothtimepoints)
calc_bw_bothspecies_bothtimepoints %>%
mutate_at(vars(Colony, ID, Treatment_Tank, Treatment, Species), factor) -> calc_bw_bothspecies_bothtimepoints
calc_bw_bothspecies_bothtimepoints
treat_model <- lm(percent_change ~ Treatment*Species + Treatment_Tank + Colony, data = calc_bw_bothspecies_bothtimepoints)
treat_model_metrics <- augment(treat_model)
plot(treat_model)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics$.resid) # not significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Species, data = treat_model_metrics) #not significant
treat_model_metrics %>%
filter(abs(.std.resid) > 3)
# identifying outliers
treat_model_metrics %>%
filter(abs(.std.resid) > 3) -> treat_outliers
treat_outliers
#remove outliers
calc_bw_bothspecies_bothtimepoints <- calc_bw_bothspecies_bothtimepoints[!rownames(calc_bw_bothspecies_bothtimepoints) %in% treat_outliers$.rownames,]
View(treat_outliers)
treat_model <- lm(percent_change ~ Treatment*Species + Treatment_Tank + Colony, data = calc_bw_bothspecies_bothtimepoints)
treat_model_metrics <- augment(treat_model)
# identifying outliers
treat_model_metrics %>%
filter(abs(.std.resid) > 3) -> treat_outliers
treat_outliers
calc_bw_bothspecies_bothtimepoints
calc_bw_bothspecies_bothtimepoints %>%
filter(Species == "Acropora cervicornis") %>%
wilcox_test(., percent_change ~ Treatment, p.adjust.method = 'BH')
plot(treat_model)
treat_model <- lm(percent_change ~ Treatment*Species + Treatment_Tank + Colony, data = calc_bw_bothspecies_bothtimepoints)
treat_model_metrics <- augment(treat_model)
plot(treat_model)
# identifying outliers
treat_model_metrics %>%
filter(abs(.std.resid) > 3) -> treat_outliers
treat_outliers
# identifying outliers
treat_model_metrics %>%
filter(abs(.std.resid) > 3) %>%
row.names()-> treat_outliers
# identifying outliers
treat_model_metrics %>%
filter(abs(.std.resid) > 3)-> treat_outliers
View(treat_outliers)
treat_model <- lm(percent_change ~ Treatment*Species + Treatment_Tank + Colony, data = calc_bw_bothspecies_bothtimepoints)
treat_model_metrics <- augment(treat_model)
treat_model_metrics
# identifying outliers
treat_model_metrics %>%
filter(abs(.std.resid) > 3) -> treat_outliers
treat_outliers
rownames(treat_outliers)
rownames(calc_bw_bothspecies_bothtimepoints)
# identifying outliers
treat_model_metrics %>%
filter(abs(.std.resid) > 3, rownames = T) -> treat_outliers
# identifying outliers
treat_model_metrics %>%
filter(abs(.std.resid) > 3, rownames == T) -> treat_outliers
# identifying outliers
treat_outliers <- treat_model_metrics %>%
filter(abs(.std.resid) > 3)
treat_outliers
rownames(treat_outliers)
treat_model_metrics
treat_model_metrics <- augment(treat_model)
treat_model_metrics
treat_model_metrics %>%  mutate(row_name = row.names(.))
treat_model_metrics <- treat_model_metrics %>% mutate(row_name = row.names(.))
treat_model_metrics
calc_bw_bothspecies_bothtimepoints
#remove outliers
calc_bw_bothspecies_bothtimepoints <- calc_bw_bothspecies_bothtimepoints[!rownames(calc_bw_bothspecies_bothtimepoints) %in% treat_outliers$.rownames,]
calc_bw_bothspecies_bothtimepoints
# identifying outliers
treat_outliers <- treat_model_metrics %>%
filter(abs(.std.resid) > 3) %>%
mutate(row_name = row.names(.))
treat_outliers
#remove outliers
calc_bw_bothspecies_bothtimepoints <- calc_bw_bothspecies_bothtimepoints[!rownames(calc_bw_bothspecies_bothtimepoints) %in% treat_outliers$.rownames,]
calc_bw_bothspecies_bothtimepoints
treat_outliers <- treat_model_metrics %>%
dplyr::filter(abs(.std.resid) > 3)
treat_outliers
#determining seawater density using temperature and salinity (from Patrick Kiel's code)
#general equation:gsw_rho_t_exact(SA = salinity, t = temp,p = 10.1325)/1000
#initial and final corrected buoyant weight calculations
buoyantweights %>%
group_by(Species, ID, Treatment, bw_initial_date) %>%
mutate(SWrho_initial = gsw_rho_t_exact(SA = `bw_initial_salinity (ppt)`,
t = bw_initial_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_initial = Bw_initial_raw_mass/(1-SWrho_initial/2.93)) %>%  #2.93 is the density of solid aragonite
ungroup() %>%
group_by(Species, ID, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
filter(!(Species == "Acropora cervicornis" & ID == "94")) %>% #drop this one sample because it was tissue sampled
ungroup() %>%
mutate(percent_change = ((CalcMAir_final - CalcMAir_initial)/ CalcMAir_initial)*100) %>%
drop_na() -> calc_bw_bothspecies_bothtimepoints
#write_csv(calc_bw_bothspecies_bothtimepoints, file = "calc_bw_bothspecies_bothtimepoints.csv")
View(buoyantweights)
calc_bw_bothspecies_bothtimepoints %>%
mutate_at(vars(Colony, ID, Treatment_Tank, Treatment, Species), factor) -> calc_bw_bothspecies_bothtimepoints
treat_model <- lm(percent_change ~ Treatment*Species + Treatment_Tank + Colony, data = calc_bw_bothspecies_bothtimepoints)
treat_model_metrics <- augment(treat_model)
treat_model_metrics <- treat_model_metrics %>% mutate(row_name = row.names(.))
plot(treat_model)
treat_model_metrics
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics$.resid) # significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Species, data = treat_model_metrics) #not significant
#do nonparametric test with interaction term of colony and tank
calc_bw_bothspecies_bothtimepoints$species_treatment <- interaction(calc_bw_bothspecies_bothtimepoints$Species, calc_bw_bothspecies_bothtimepoints$Treatment)
kruskal_test(calc_bw_bothspecies_bothtimepoints, percent_change ~ species_treatment) #significant
dunn.test(calc_bw_bothspecies_bothtimepoints$percent_change, calc_bw_bothspecies_bothtimepoints$species_treatment, method = "bonferroni")
library(dunn.test)
#dunn's test assumption is that distribution of groups is similar
ggqqplot(df, "fvfm_loss_norm", facet.by = "colony_tank")
dunn.test(calc_bw_bothspecies_bothtimepoints$percent_change, calc_bw_bothspecies_bothtimepoints$species_treatment, method = "bonferroni")
calc_bw_bothspecies_bothtimepoints
dunn.test(calc_bw_bothspecies_bothtimepoints$percent_change, calc_bw_bothspecies_bothtimepoints$species_treatment, method = "bonferroni")
dunn_results <- dunn.test(calc_bw_bothspecies_bothtimepoints$percent_change, calc_bw_bothspecies_bothtimepoints$species_treatment, method = "bonferroni")
dunn_results$P.adjusted
as.data.frame(dunn_results)
calc_bw_bothspecies_bothtimepoints %>%
group_by(Treatment) %>%
ggplot(., aes(x=Species, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(labels=c("Tank 8", "Treated", "Untreated"), values = c("grey", "#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth")
ggsave("percentgrowth_speciestreatments.pdf")
calc_bw_bothspeciesgenet_bothtimepoints %>%
group_by(Colony, Treatment) %>%
ggplot(., aes(x=Colony, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species, scales = "free") +
scale_fill_manual(labels=c("Tank 8", "Treated", "Untreated"), values = c("grey", "#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth")
calc_bw_bothspeciesgenet_bothtimepoints %>%
mutate_at(vars(Colony, Puck, Random_Tank, Treatment, Species), factor) -> calc_bw_bothspeciesgenet_bothtimepoints
calc_bw_bothspeciesgenet_bothtimepoints %>%
mutate_at(vars(Colony, ID, Random_Tank, Treatment, Species), factor) -> calc_bw_bothspeciesgenet_bothtimepoints
calc_bw_bothspeciesgenet_bothtimepoints %>%
mutate_at(vars(Colony, ID, Treatment_Tank, Treatment, Species), factor) -> calc_bw_bothspeciesgenet_bothtimepoints
treat_model <- lm(percent_change ~ Treatment*Species*Colony + Tank, data = calc_bw_bothspeciesgenet_bothtimepoints)
treat_model <- lm(percent_change ~ Treatment*Species*Colony + Treatment_Tank, data = calc_bw_bothspeciesgenet_bothtimepoints)
treat_model_metrics <- augment(treat_model)
plot(treat_model)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics$.resid) # not significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Species, data = treat_model_metrics) #not significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Species*Colony, data = treat_model_metrics) #not significant
#do nonparametric test with interaction term of colony and tank
calc_bw_bothspeciesgenet_bothtimepoints$species_treatment_colony <- interaction(calc_bw_bothspeciesgenet_bothtimepoints$Species, calc_bw_bothspeciesgenet_bothtimepoints$Treatment, calc_bw_bothspeciesgenet_bothtimepoints$Colony)
kruskal_test(calc_bw_bothspeciesgenet_bothtimepoints, percent_change ~ species_treatment_colony) #significant
dunn_results2 <- dunn.test(calc_bw_bothspeciesgenet_bothtimepoints$percent_change, calc_bw_bothspeciesgenet_bothtimepoints$species_treatment_colony, method = "bonferroni")
as.data.frame(dunn_results2)
