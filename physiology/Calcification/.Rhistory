mutate(normalized_fvfm_end = case_when(Species == "Acervicornis" ~ `2022-04-20`/`2022-03-16`,
Species == "Pclivosa" ~ `2022-04-20`/`2022-03-21`)) %>%
pivot_longer(normalized_fvfm_start:normalized_fvfm_end, names_to = "fvfm_timepoint", values_to = "normalized_fvfm") %>%
mutate(numDays = case_when(fvfm_timepoint == "normalized_fvfm_start" ~ 0,
Species == "Pclivosa" & fvfm_timepoint == "normalized_fvfm_end" ~ 30,
Species == "Acervicornis" & fvfm_timepoint == "normalized_fvfm_end" ~ 35)) %>%
drop_na(normalized_fvfm)
ipam_tidy_data %>%
dplyr::filter(!Treatment_period == "CBASS") %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
dplyr::mutate(Date = mdy(Date)) %>%
dplyr::select(Date, Colony, Puck, Tank, fvfm, Treatment, Species) %>%
dplyr::filter(fvfm < 0.75) %>% #filter out the outliers, 0.75 was set in Cunning et al 2021
dplyr::filter(Date <= "2022-04-20") %>%
pivot_wider(names_from = Date, values_from = fvfm) %>%
mutate(fvfm_t0 = case_when(Species == "Acervicornis" ~ `2022-03-16`,
Species == "Pclivosa" ~ `2022-03-21`)) %>%
mutate(fvfm_t1 = case_when(Species == "Acervicornis" ~ `2022-04-06`,
Species == "Pclivosa" ~ `2022-04-06`)) %>%
mutate(fvfm_t2 = case_when(Species == "Acervicornis" ~ `2022-04-20`,
Species == "Pclivosa" ~ `2022-04-20`)) %>%
pivot_longer(fvfm_t0:fvfm_t2, names_to = "fvfm_timepoint", values_to = "fvfm") %>%
mutate(numDays = case_when(fvfm_timepoint == "fvfm_t0" ~ 0,
Species == "Pclivosa" & fvfm_timepoint == "fvfm_t1" ~ 16,
Species == "Acervicornis" & fvfm_timepoint == "fvfm_t1" ~ 21,
Species == "Pclivosa" & fvfm_timepoint == "fvfm_t2" ~ 30,
Species == "Acervicornis" & fvfm_timepoint == "fvfm_t2" ~ 35,
Species == "Pclivosa" & fvfm_timepoint == "fvfm_t3" ~ 65,
Species == "Acervicornis" & fvfm_timepoint == "fvfm_t3" ~ 70)) %>%
dplyr::select(!c(`2022-04-06`:`2022-04-20`))
ipam_tidy_data %>%
dplyr::filter(!Treatment_period == "CBASS") %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
dplyr::mutate(Date = mdy(Date)) %>%
dplyr::select(Date, Colony, Puck, Tank, fvfm, Treatment, Species) %>%
dplyr::filter(fvfm < 0.75) %>% #filter out the outliers, 0.75 was set in Cunning et al 2021
dplyr::filter(Date <= "2022-04-20") %>%
pivot_wider(names_from = Date, values_from = fvfm) %>%
mutate(fvfm_t0 = case_when(Species == "Acervicornis" ~ `2022-03-16`,
Species == "Pclivosa" ~ `2022-03-21`)) %>%
mutate(fvfm_t1 = case_when(Species == "Acervicornis" ~ `2022-04-06`,
Species == "Pclivosa" ~ `2022-04-06`)) %>%
mutate(fvfm_t2 = case_when(Species == "Acervicornis" ~ `2022-04-20`,
Species == "Pclivosa" ~ `2022-04-20`))
ipam_tidy_data %>%
dplyr::filter(!Treatment_period == "CBASS") %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
dplyr::mutate(Date = mdy(Date)) %>%
dplyr::select(Date, Colony, Puck, Tank, fvfm, Treatment, Species) %>%
dplyr::filter(fvfm < 0.75) %>% #filter out the outliers, 0.75 was set in Cunning et al 2021
dplyr::filter(Date <= "2022-04-20") %>%
pivot_wider(names_from = Date, values_from = fvfm) %>%
mutate(fvfm_t0 = case_when(Species == "Acervicornis" ~ `2022-03-16`,
Species == "Pclivosa" ~ `2022-03-21`)) %>%
mutate(fvfm_t1 = case_when(Species == "Acervicornis" ~ `2022-04-06`,
Species == "Pclivosa" ~ `2022-04-06`)) %>%
mutate(fvfm_t2 = case_when(Species == "Acervicornis" ~ `2022-04-20`,
Species == "Pclivosa" ~ `2022-04-20`)) %>%
mutate(t0 = fvfm_t0/fvfm_t0)
ipam_tidy_data %>%
dplyr::filter(!Treatment_period == "CBASS") %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
dplyr::mutate(Date = mdy(Date)) %>%
dplyr::select(Date, Colony, Puck, Tank, fvfm, Treatment, Species) %>%
dplyr::filter(fvfm < 0.75) %>% #filter out the outliers, 0.75 was set in Cunning et al 2021
dplyr::filter(Date <= "2022-04-20") %>%
pivot_wider(names_from = Date, values_from = fvfm) %>%
mutate(fvfm_t0 = case_when(Species == "Acervicornis" ~ `2022-03-16`,
Species == "Pclivosa" ~ `2022-03-21`)) %>%
mutate(fvfm_t1 = case_when(Species == "Acervicornis" ~ `2022-04-06`,
Species == "Pclivosa" ~ `2022-04-06`)) %>%
mutate(fvfm_t2 = case_when(Species == "Acervicornis" ~ `2022-04-20`,
Species == "Pclivosa" ~ `2022-04-20`)) %>%
mutate(t0 = fvfm_t0/fvfm_t0, t1 = fvfm_t1/fvfm_t0)
ipam_tidy_data %>%
dplyr::filter(!Treatment_period == "CBASS") %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
dplyr::mutate(Date = mdy(Date)) %>%
dplyr::select(Date, Colony, Puck, Tank, fvfm, Treatment, Species) %>%
dplyr::filter(fvfm < 0.75) %>% #filter out the outliers, 0.75 was set in Cunning et al 2021
dplyr::filter(Date <= "2022-04-20") %>%
pivot_wider(names_from = Date, values_from = fvfm) %>%
mutate(fvfm_t0 = case_when(Species == "Acervicornis" ~ `2022-03-16`,
Species == "Pclivosa" ~ `2022-03-21`)) %>%
mutate(fvfm_t1 = case_when(Species == "Acervicornis" ~ `2022-04-06`,
Species == "Pclivosa" ~ `2022-04-06`)) %>%
mutate(fvfm_t2 = case_when(Species == "Acervicornis" ~ `2022-04-20`,
Species == "Pclivosa" ~ `2022-04-20`)) %>%
mutate(t0 = fvfm_t0/fvfm_t0, t1 = fvfm_t1/fvfm_t0, t2 = fvfm_t2/fvfm_t0)
ipam_tidy_data %>%
dplyr::filter(!Treatment_period == "CBASS") %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
dplyr::mutate(Date = mdy(Date)) %>%
dplyr::select(Date, Colony, Puck, Tank, fvfm, Treatment, Species) %>%
dplyr::filter(fvfm < 0.75) %>% #filter out the outliers, 0.75 was set in Cunning et al 2021
dplyr::filter(Date <= "2022-04-20") %>%
pivot_wider(names_from = Date, values_from = fvfm) %>%
mutate(fvfm_t0 = case_when(Species == "Acervicornis" ~ `2022-03-16`,
Species == "Pclivosa" ~ `2022-03-21`)) %>%
mutate(fvfm_t1 = case_when(Species == "Acervicornis" ~ `2022-04-06`,
Species == "Pclivosa" ~ `2022-04-06`)) %>%
mutate(fvfm_t2 = case_when(Species == "Acervicornis" ~ `2022-04-20`,
Species == "Pclivosa" ~ `2022-04-20`)) %>%
mutate(t0 = fvfm_t0/fvfm_t0, t1 = fvfm_t1/fvfm_t0, t2 = fvfm_t2/fvfm_t0) %>%
pivot_longer(t0:t2, names_to = "fvfm_timepoint", values_to = "fvfm") %>%
mutate(numDays = case_when(fvfm_timepoint == "t0" ~ 0,
Species == "Pclivosa" & fvfm_timepoint == "t1" ~ 16,
Species == "Acervicornis" & fvfm_timepoint == "t1" ~ 21,
Species == "Pclivosa" & fvfm_timepoint == "t2" ~ 30,
Species == "Acervicornis" & fvfm_timepoint == "t2" ~ 35)) %>%
dplyr::select(!c(`2022-04-06`:`2022-04-20`))
ipam_tidy_data %>%
dplyr::filter(!Treatment_period == "CBASS") %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
dplyr::mutate(Date = mdy(Date)) %>%
dplyr::select(Date, Colony, Puck, Tank, fvfm, Treatment, Species) %>%
dplyr::filter(fvfm < 0.75) %>% #filter out the outliers, 0.75 was set in Cunning et al 2021
dplyr::filter(Date <= "2022-04-20") %>%
pivot_wider(names_from = Date, values_from = fvfm) %>%
mutate(fvfm_t0 = case_when(Species == "Acervicornis" ~ `2022-03-16`,
Species == "Pclivosa" ~ `2022-03-21`)) %>%
mutate(fvfm_t1 = case_when(Species == "Acervicornis" ~ `2022-04-06`,
Species == "Pclivosa" ~ `2022-04-06`)) %>%
mutate(fvfm_t2 = case_when(Species == "Acervicornis" ~ `2022-04-20`,
Species == "Pclivosa" ~ `2022-04-20`)) %>%
mutate(t0 = fvfm_t0/fvfm_t0, t1 = fvfm_t1/fvfm_t0, t2 = fvfm_t2/fvfm_t0) %>%
pivot_longer(t0:t2, names_to = "fvfm_timepoint", values_to = "fvfm") %>%
mutate(numDays = case_when(fvfm_timepoint == "t0" ~ 0,
Species == "Pclivosa" & fvfm_timepoint == "t1" ~ 16,
Species == "Acervicornis" & fvfm_timepoint == "t1" ~ 21,
Species == "Pclivosa" & fvfm_timepoint == "t2" ~ 30,
Species == "Acervicornis" & fvfm_timepoint == "t2" ~ 35)) %>%
dplyr::select(!c(`2022-04-06`:`2022-04-20`)) -> ipam_norm_overtime
ipam_norm_overtime
ipam_norm_overtime %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment)) +
geom_boxplot(color = "black") +
stat_summary(fun=mean, geom="line", aes(group=Treatment, color = Treatment), position = position_dodge(width = 0.5)) +
facet_wrap(~Species + Colony) +
theme_classic() +
labs(y = "Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14))
ipam_norm_overtime %>%
mutate(numDays = as.factor(numDays)) %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment)) +
geom_boxplot(color = "black") +
stat_summary(fun=mean, geom="line", aes(group=Treatment, color = Treatment), position = position_dodge(width = 0.5)) +
facet_wrap(~Species + Colony) +
theme_classic() +
labs(y = "Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14))
ipam_norm_overtime %>%
mutate(numDays = as.factor(numDays)) %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment)) +
geom_point() +
stat_summary(fun=mean, geom="line", aes(group=Treatment, color = Treatment), position = position_dodge(width = 0.5)) +
facet_wrap(~Species + Colony) +
theme_classic() +
labs(y = "Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14))
ipam_norm_overtime %>%
mutate(numDays = as.factor(numDays)) %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment)) +
stat_summary(fun=mean, geom="line", aes(group=Treatment, color = Treatment), position = position_dodge(width = 0.5)) +
facet_wrap(~Species + Colony) +
theme_classic() +
labs(y = "Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14))
ipam_norm_overtime %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment)) +
geom_point() +
facet_wrap(~Species + Colony) +
theme_classic() +
labs(y = "Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14))
ipam_norm_overtime %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment)) +
geom_point() +
geom_smooth() +
facet_wrap(~Species + Colony) +
theme_classic() +
labs(y = "Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14))
ipam_norm_overtime %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment, color=Treatment)) +
geom_point() +
geom_smooth() +
facet_wrap(~Species + Colony) +
theme_classic() +
labs(y = "Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14))
## 2a. Normalized to 1
```{r, warning = FALSE}
ipam_norm_overtime %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment, color=Treatment)) +
geom_point() +
geom_smooth() +
facet_wrap(~Species + Colony) +
theme_classic() +
labs(y = "Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14))
ipam_norm_overtime %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment, color=Treatment)) +
geom_point(position = position_jitterdodge(), alpha=0.3) +
geom_smooth() +
facet_wrap(~Species + Colony) +
theme_classic() +
labs(y = "Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14))
ipam_norm_overtime %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment, color=Treatment)) +
geom_point(position = position_jitterdodge(), alpha=0.3) +
geom_smooth() +
facet_wrap(~Species + Colony) +
theme_classic() +
labs(y = "Normalized Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14))
ipam_norm_overtime %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment, color=Treatment)) +
geom_point(position = position_jitterdodge(), alpha=0.3) +
geom_smooth() +
facet_wrap(~Species) +
theme_classic() +
labs(y = "Normalized Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14))
p1<- ipam_norm_overtime %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment, color=Treatment)) +
geom_point(position = position_jitterdodge(), alpha=0.3) +
geom_smooth() +
facet_wrap(~Species) +
theme_classic() +
labs(y = "Normalized Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14)) +
ylim(0,1)
ipam_norm_overtime %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment, color=Treatment)) +
geom_point(position = position_jitterdodge(), alpha=0.3) +
geom_smooth() +
facet_wrap(~Species) +
theme_classic() +
labs(y = "Normalized Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14)) +
ylim(0,1)
p1<- ipam_norm_overtime %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment, color=Treatment)) +
geom_point(position = position_jitterdodge(), alpha=0.3) +
geom_smooth() +
facet_wrap(~Species) +
theme_classic() +
labs(y = "Normalized Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14)) +
ylim(0,1.5)
ipam_norm_overtime %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment, color=Treatment)) +
geom_point(position = position_jitterdodge(), alpha=0.3) +
geom_smooth() +
facet_wrap(~Species) +
theme_classic() +
labs(y = "Normalized Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14)) +
ylim(0,1.5)
p1<- ipam_norm_overtime %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment, color=Treatment)) +
geom_point(position = position_jitterdodge(), alpha=0.3) +
geom_smooth() +
facet_wrap(~Species) +
theme_classic() +
labs(y = "Normalized Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14)) +
ylim(0,1.2)
p2<- ipam_norm_overtime %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment, color=Treatment)) +
geom_point(position = position_jitterdodge(), alpha=0.3) +
geom_smooth() +
facet_wrap(~Species + Colony) +
theme_classic() +
labs(y = "Normalized Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14))+
ylim(0,1.2)
plot_grid(p1, p2, rel_widths = c(1.5,2))
ggsave("treatment_normfvfm_smoothline.pdf", width = 12, height = 5)
summary(aov(fvfm_loss_norm ~ Treatment, data = treatment_percent_Acer)) #very significant
summary(aov(fvfm_loss_norm ~ Treatment*Species, data = treatment_normalized_bothspecies_2wayanova))
TukeyHSD(aov(fvfm_loss_norm ~ Treatment*Species, data = treatment_normalized_bothspecies_2wayanova))
treatment_normalized_bothspecies %>%
filter(Species == "Acervicornis") -> treatment_percent_Acer
treat_model_Acer <- lm(fvfm_loss_norm ~ Treatment*Colony + Tank, data = treatment_percent_Acer)
treat_model_metrics_Acer <- augment(treat_model_Acer)
plot(treat_model_Acer)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics_Acer$.resid) # not significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment, data = treat_model_metrics_Acer) #not significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Colony, data = treat_model_metrics_Acer) #not significant
# identifying outliers
treat_model_metrics_Acer %>%
filter(abs(.std.resid) > 3)
#remove outliers
treatment_percent_Acer %>%
filter(fvfm_loss_norm < -7.6) -> treatment_percent_Acer
aov(fvfm_loss_norm ~ Treatment*Colony, data = treatment_percent_Acer)
summary(aov(fvfm_loss_norm ~ Treatment*Colony, data = treatment_percent_Acer)) #very significant
TukeyHSD(aov(fvfm_loss_norm ~ Treatment*Colony, data = treatment_percent_Acer))
p2<- treatment_normalized_bothspecies%>%
ggplot(., aes(x=Colony, y= fvfm_loss_norm, fill=Treatment)) +
geom_boxplot() +
theme_classic() + labs(y = "% Decline in Fv/Fm", x="Colony") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
facet_wrap(~Species, scales = "free_x")
p1<-treatment_normalized_bothspecies%>%
ggplot(., aes(x=Species, y= fvfm_loss_norm, fill= Treatment)) +
geom_boxplot() +
theme_classic() +
labs(y = "% Decline in Fv/Fm", x="Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15)) +
theme(legend.position="none")
TukeyHSD(aov(fvfm_loss_norm ~ Treatment, data = treatment_percent_Acer))
TukeyHSD(aov(fvfm_loss_norm ~ Treatment*Species, data = treatment_normalized_bothspecies_2wayanova))
summary(aov(fvfm_loss_norm ~ Treatment*Species, data = treatment_normalized_bothspecies_2wayanova))
summary(aov(fvfm_loss_norm ~ Treatment, data = treatment_percent_Acer)) #very significant
summary(aov(fvfm_loss_norm ~ Treatment*Colony, data = treatment_percent_Acer)) #very significant
TukeyHSD(aov(fvfm_loss_norm ~ Treatment*Colony, data = treatment_percent_Acer))
capture.output(summary(aov(fvfm_loss_norm ~ Treatment*Colony, data = treatment_percent_Acer)), file = "fvfm_loss_Acergenets_anova.csv") #very significant
capture.output(TukeyHSD(aov(fvfm_loss_norm ~ Treatment*Colony, data = treatment_percent_Acer)), file = "fvfmloss_Acergenets_tukey.csv")
plot_grid(p1, p2, rel_widths = c(1.5,2))
ggsave("percentdecline_treatment_speciesgenets.pdf", width = 12, height = 5)
treatment_normalized_bothspecies %>%
filter(Species == "Pclivosa") -> treatment_percent_Pcli
treat_model_Pcli <- lm(fvfm_loss_norm ~ Treatment*Colony + Tank, data = treatment_percent_Pcli)
treat_model_metrics_Pcli <- augment(treat_model_Pcli)
plot(treat_model_Pcli)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics_Pcli$.resid) # not significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Colony, data = treat_model_metrics_Pcli) #not significant
# identifying outliers
treat_model_metrics_Pcli %>%
filter(abs(.std.resid) > 3)
treatment_percent_Pcli %>%
arrange(fvfm_loss_norm)
# identifying outliers
treat_model_metrics_Pcli %>%
filter(abs(.std.resid) > 3) # 1 outlier
treatment_percent_Pcli %>%
arrange(fvfm_loss_norm)
# identifying outliers
treat_model_metrics_Pcli %>%
filter(abs(.std.resid) > 3) # 1 outlier
treatment_percent_Pcli %>%
filter(Treatment == "Untreated" & Colony == "A" & Tank == "4" & fvfm_loss_norm >-23.69)
treatment_percent_Pcli
treatment_percent_Pcli %>%
filter(Treatment == "Untreated" & Colony == "A" & Tank == "4" & fvfm_loss_norm >-23.69)
treatment_percent_Pcli %>%
filter(Treatment == "Untreated" & Colony == "A" & Tank == "4" | fvfm_loss_norm >-23.69)
treatment_percent_Pcli
treatment_percent_Pcli %>%
filter(Treatment == "Untreated" & Colony == "A" & Tank == "4")
treatment_percent_Pcli %>%
filter(Treatment == "Untreated" & Colony == "A" & Tank == "4" & fvfm_loss_norm > -23.68)
treatment_percent_Pcli %>%
filter(Treatment == "Untreated" & Colony == "A" & Tank == "4" & fvfm_loss_norm > -23.0)
treatment_percent_Pcli %>%
filter(Treatment == "Untreated" & Colony == "A" & Tank == "4" & fvfm_loss_norm < -23.0)
treatment_percent_Pcli %>%
filter(Treatment == "Untreated" & Colony == "A" & Tank == "4" & fvfm_loss_norm < -23)
treatment_percent_Pcli %>%
filter(!(Treatment == "Untreated" & Colony == "A" & Tank == "4" & fvfm_loss_norm < -23))
treatment_percent_Pcli
treatment_percent_Pcli %>%
filter(!(Treatment == "Untreated" & Colony == "A" & Tank == "4" & fvfm_loss_norm < -23))
treatment_percent_Pcli
treatment_percent_Pcli %>%
filter((Treatment == "Untreated" & Colony == "A" & Tank == "4" & fvfm_loss_norm < -23))
treatment_percent_Pcli %>%
filter(!(Treatment == "Untreated" & Colony == "A" & Tank == "4" & fvfm_loss_norm < -23))
treatment_percent_Pcli %>%
filter(!(Treatment == "Untreated" & Colony == "A" & Tank == "4" & fvfm_loss_norm < -23)) -> treatment_percent_Pcli
#run again
treat_model_Pcli <- lm(fvfm_loss_norm ~ Treatment*Colony + Tank, data = treatment_percent_Pcli)
treat_model_metrics_Pcli <- augment(treat_model_Pcli)
plot(treat_model_Pcli)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics_Pcli$.resid) # significant
aov(fvfm_loss_norm ~ Treatment*Colony, data = treatment_percent_Pcli)
summary(aov(fvfm_loss_norm ~ Treatment*Colony, data = treatment_percent_Pcli))#very significant
capture.output(summary(aov(fvfm_loss_norm ~ Treatment*Colony, data = treatment_percent_Pcli)), file = "fvfm_loss_Pcligenets_anova.csv")
TukeyHSD(aov(fvfm_loss_norm ~ Treatment*Colony, data = treatment_percent_Pcli))
capture.output(TukeyHSD(aov(fvfm_loss_norm ~ Treatment*Colony, data = treatment_percent_Pcli)), file = "fvfmloss_Pcligenets_tukey.csv")
treatment_normalized_bothspecies %>%
filter(Species == "Pclivosa") -> treatment_percent_Pcli
treat_model_Pcli <- lm(fvfm_loss_norm ~ Treatment + Colony + Tank, data = treatment_percent_Pcli)
treat_model_metrics_Pcli <- augment(treat_model_Pcli)
plot(treat_model_Pcli)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics_Pcli$.resid) # not significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment, data = treat_model_metrics_Pcli) #not significant
# identifying outliers
treat_model_metrics_Pcli %>%
filter(abs(.std.resid) > 3) # 1 outlier
treatment_percent_Pcli %>%
filter(!(Treatment == "Untreated" & Colony == "A" & Tank == "4" & fvfm_loss_norm < -23)) -> treatment_percent_Pcli
#run again
treat_model_Pcli <- lm(fvfm_loss_norm ~ Treatment*Colony + Tank, data = treatment_percent_Pcli)
treat_model_metrics_Pcli <- augment(treat_model_Pcli)
plot(treat_model_Pcli)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics_Pcli$.resid) # not significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment, data = treat_model_metrics_Pcli) #not significant
#run again
treat_model_Pcli <- lm(fvfm_loss_norm ~ Treatment + Colony + Tank, data = treatment_percent_Pcli)
treat_model_metrics_Pcli <- augment(treat_model_Pcli)
plot(treat_model_Pcli)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics_Pcli$.resid) # not significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment, data = treat_model_metrics_Pcli) #very significant
oneway.test(fvfm_loss_norm ~ Treatment, data = treatment_percent_Pcli, var.equal = FALSE)
library(tidyverse)
library(plotrix)
library(ggpubr)
library(rstatix)
library(cowplot)
library(dunn.test)
library(Rmisc)
library(plyr)
library(dplyr)
percent_cells_df <- read_csv("Grace_percentcells_alldata.csv")
percent_cells_df%>%
mutate(Treatment = case_when(Treatment == "Control" ~ "Untreated",
Treatment == "Variable" ~ "Treated")) -> percent_cells_df
#there's one outlier to remove right off the bat: T1	Pcli	B	P9	r2	Percent=111.50	T1	Untreated
percent_cells_df %>%
filter(!(TimePoint=="T1" & Species == "Pcli" & Genotype == "B" & Treatment == "Untreated" & ID == "P9" & Replicate == "r2")) -> percent_cells_df
#replicates are technical replicates of the same coral fragment
#time points:
#T0 = initial pre-treatment (March 22)
#T1 = one week into treatment (March 30)
#T2 = end of treatment (April 20)
#follow-up = post CBASS and treatment follow-up (June 1)
percent_cells_df %>%
mutate(num_days = case_when(TimePoint == "T0" ~ "0",
TimePoint == "T1" ~ "7",
TimePoint == "T2" ~ "28",
TimePoint == "FollowUp" ~ "71")) %>%
mutate(num_days = as.factor(num_days)) %>%
mutate(num_days = fct_relevel(num_days, "0", "7", "28", "71")) -> percent_cells_df
View(percent_cells_df)
percent_cells_df %>%
mutate(num_days = case_when(TimePoint == "T0" ~ "0",
TimePoint == "T1" ~ "7",
TimePoint == "T2" ~ "28",
TimePoint == "FollowUp" ~ "71")) %>%
mutate(Date = case_when(TimePoint == "T0" ~ "2022-03-22",
TimePoint == "T1" ~ "2022-03-30",
TimePoint == "T2" ~ "2022-04-20",
TimePoint == "FollowUp" ~ "2022-06-01")) %>%
mutate(num_days = as.factor(num_days)) %>%
mutate(num_days = fct_relevel(num_days, "0", "7", "28", "71")) -> percent_cells_df
View(percent_cells_df)
write_csv(percent_cells_df, "immunecells_tidydata.csv")
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, Genotype, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent)) %>%
ungroup() %>%
group_by(num_days, Tank, Species, Genotype, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perGenet = mean(Percent)) %>%
select(Species, Genotype, Tank, Treatment, num_days, mean_replicate_percent_perGenet) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28") %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_perGenet") %>%
mutate(relative_activity = ((`28`-`0`)/`0`)*100) %>% #T1-T0/T0*100
ggplot(., aes(x=Species, y=relative_activity, fill= Treatment)) +
geom_boxplot() +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
ylab("% Decline Immune Cell Activity")+
theme_classic() +
theme(text = element_text(size = 15))
