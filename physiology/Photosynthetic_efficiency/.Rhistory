mutate(min_above_32 = count * 5) %>%  #because each data point was recorded at 5-min intervals
select(Tank, min_above_32)
min_above_32
#check
str(ipam_tidy_CBASS_treatments)
ipam_tidy_CBASS_treatments
ipam_tidy_CBASS_treatments %>%
select(Puck:CBASS_Tank, CBASS_temp, Species_Treatment)
min_above_32 <- above_32 %>%
group_by(Tank) %>%
summarise(count = n()) %>%
mutate(min_above_32 = count * 5) %>%  #because each data point was recorded at 5-min intervals
select(Tank, min_above_32) %>%
rename(Tank = CBASS_Tank)
min_above_32 <- above_32 %>%
group_by(Tank) %>%
summarise(count = n()) %>%
mutate(min_above_32 = count * 5) %>%  #because each data point was recorded at 5-min intervals
select(Tank, min_above_32) %>%
rename(CBASS_Tank = Tank)
min_above_32
min_above_32 <- above_32 %>%
group_by(Tank) %>%
summarise(count = n()) %>%
mutate(min_above_32 = count * 5) %>%  #because each data point was recorded at 5-min intervals
select(Tank, min_above_32) %>%
rename(CBASS_Tank = Tank) %>%
mutate(CBASS_Tank = as.int(CBASS_Tank))
min_above_32 <- above_32 %>%
group_by(Tank) %>%
summarise(count = n()) %>%
mutate(min_above_32 = count * 5) %>%  #because each data point was recorded at 5-min intervals
select(Tank, min_above_32) %>%
rename(CBASS_Tank = Tank) %>%
mutate(CBASS_Tank = as.integer(CBASS_Tank))
ipam_tidy_CBASS_treatments %>%
select(Puck:CBASS_Tank, CBASS_temp, Species_Treatment) %>%
full_join(., min_above_32)
ipam_tidy_CBASS_treatments %>%
select(Puck:CBASS_Tank, CBASS_temp, Species_Treatment) %>%
full_join(., min_above_32) %>%
drop_na() #removes control tank that was set to 28ºC
species_Treatment_DHM <- ipam_tidy_CBASS_treatments %>%
select(Puck:CBASS_Tank, CBASS_temp, Species_Treatment) %>%
full_join(., min_above_32) %>%
drop_na() #removes control tank that was set to 28ºC
DRC_species_treatment_DHM = drm(fvfm ~ min_above_32, data = species_Treatment_DHM, curveid = Species_Treatment,
fct = LL.3(names = c('hill', 'max', 'ed50')))
summary(DRC_species_treatment_DHM)
plot(DRC_species_treatment_DHM)
#compParm compares the selected coefficient by means of a z-test
compParm(DRC_species_treatment_DHM, 'ed50')
compParm(DRC_species_treatment_DHM, 'hill')
EDcomp(DRC_species_treatment_DHM, c(25,25))
plot(DRC_species_treatment_DHM)
library(tidyverse)
library(plotrix)
library(ggpubr)
library(rstatix)
library(cowplot)
ipam_tidy_data <- read.csv("ipam_tidy_data.csv")
treatment_time_bothspecies <- ipam_tidy_data %>%
dplyr::filter(!Treatment_period == "CBASS") %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
dplyr::select(Date, Colony, Puck, Tank, fvfm, Treatment, Species) %>%
mutate(Date = mdy(Date)) %>%
dplyr::filter(Date <= "2022-04-20") %>%
pivot_wider(names_from = Date, values_from = fvfm) %>%
mutate(fvfm_t0 = case_when(Species == "Acervicornis" ~ `2022-03-16`,
Species == "Pclivosa" ~ `2022-03-21`)) %>%
mutate(fvfm_t1 = case_when(Species == "Acervicornis" ~ `2022-04-06`,
Species == "Pclivosa" ~ `2022-04-06`)) %>%
mutate(fvfm_t2 = case_when(Species == "Acervicornis" ~ `2022-04-20`,
Species == "Pclivosa" ~ `2022-04-20`)) %>%
pivot_longer(fvfm_t0:fvfm_t2, names_to = "fvfm_timepoint", values_to = "fvfm") %>%
mutate(numDays = case_when(fvfm_timepoint == "fvfm_t0" ~ 0,
Species == "Pclivosa" & fvfm_timepoint == "fvfm_t1" ~ 16,
Species == "Acervicornis" & fvfm_timepoint == "fvfm_t1" ~ 21,
Species == "Pclivosa" & fvfm_timepoint == "fvfm_t2" ~ 30,
Species == "Acervicornis" & fvfm_timepoint == "fvfm_t2" ~ 35,
Species == "Pclivosa" & fvfm_timepoint == "fvfm_t3" ~ 65,
Species == "Acervicornis" & fvfm_timepoint == "fvfm_t3" ~ 70))
treatment_normalized_bothspecies <- ipam_tidy_data %>%
dplyr::filter(!Treatment_period == "CBASS") %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
dplyr::select(Date, Colony, Puck, Tank, fvfm, Treatment, Species)  %>%
mutate(Date = mdy(Date)) %>%
dplyr::filter(Date <= "2022-04-20") %>% #pre-CBASS time points
pivot_wider(names_from = Date, values_from = fvfm) %>%
mutate(fvfm_loss = case_when(Species == "Acervicornis" ~ `2022-04-20` - `2022-03-16`,
Species == "Pclivosa" ~ `2022-04-20` - `2022-03-21`)) %>%
mutate(fvfm_loss_norm = case_when(Species == "Acervicornis" ~ (fvfm_loss/`2022-03-16`)*100,
Species == "Pclivosa" ~ (fvfm_loss/`2022-03-21`)*100))
#save data for WGCNA
treatment_normalized_bothspecies %>%
select(Colony, Puck, Treatment, Species, fvfm_loss, fvfm_loss_norm) %>%
write_csv("treatment_fvfm.csv")
treatment_time_bothspecies %>%
select(Colony:Species, fvfm_timepoint, fvfm) %>%
filter(fvfm_timepoint == "fvfm_t2") %>% #282 corals
group_by(Species, Colony, Treatment) %>%
dplyr::summarise(count = n())
treatment_time_bothspecies %>%
dplyr::select(!c(`2022-04-06`:`2022-04-20`)) %>%
mutate(numDays = as.factor(numDays)) %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment, color = Treatment)) +
geom_boxplot(color = "black", outlier.shape = NA, alpha=0.3) + #not removing outliers, just removing the black dots because they are already represented in the geom_point() line
geom_point(position = position_jitterdodge(), alpha=0.3) +
stat_summary(fun=mean, geom="line", aes(group=Treatment, color = Treatment), position = position_dodge(width = 0.5)) +
facet_wrap(~Species) +
theme_classic() +
labs(y = "Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
#ggsave("treatment_bothspecies_overtimeboxplots.pdf")
treatment_time_bothspecies%>%
dplyr::select(!c(`2022-04-06`:`2022-04-20`)) %>%
mutate(numDays = as.factor(numDays)) %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment)) +
geom_boxplot(color = "black") +
stat_summary(fun=mean, geom="line", aes(group=Treatment, color = Treatment), position = position_dodge(width = 0.5)) +
facet_wrap(~Species + Colony) +
theme_classic() +
labs(y = "Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14))
treatment_normalized_bothspecies%>%
ggplot(., aes(x=Species, y= fvfm_loss_norm, fill= Treatment)) +
geom_boxplot() +
theme_classic() +
labs(y = "% Decline in Fv/Fm", x="Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15)) +
theme(legend.position="none")
#ggsave("treatment_normalized_bothspecies_boxplot.pdf")
treatment_normalized_bothspecies%>%
ggplot(., aes(x=Colony, y= fvfm_loss_norm, fill=Treatment)) +
geom_boxplot() +
theme_classic() + labs(y = "% Decline in Fv/Fm", x="Colony") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
facet_wrap(~Species, scales = "free_x")
#ggsave("treatment_normalized_genotypes_boxplot.pdf")
treat_model_2 <- lm(fvfm_loss_norm ~ Treatment*Species*Colony + Tank, data = treatment_normalized_bothspecies)
treat_model_metrics_2 <- augment(treat_model_2)
plot(treat_model_2)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics_2$.resid) # not significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Species*Colony, data = treat_model_metrics_2) #not significant
# identifying outliers
treat_model_metrics_2 %>%
filter(abs(.std.resid) > 3) -> treat_outliers_2
# 2 outliers
#remove outliers
treatment_normalized_bothspecies_3wayanova <- treatment_normalized_bothspecies[!rownames(treatment_normalized_bothspecies) %in% treat_outliers_2$.rownames,]
aov(fvfm_loss_norm ~ Treatment*Species*Colony, data = treatment_normalized_bothspecies_3wayanova)
summary(aov(fvfm_loss_norm ~ Treatment*Species*Colony, data = treatment_normalized_bothspecies_3wayanova))
#capture.output(summary(aov(fvfm_loss_norm ~ Treatment*Species*Colony, data = treatment_normalized_bothspecies_3wayanova)), file = "fvfm_loss_norm_bothspeciesgenet_anova_table.csv")
TukeyHSD(aov(fvfm_loss_norm ~ Treatment*Species*Colony, data = treatment_normalized_bothspecies_3wayanova))
#capture.output(TukeyHSD(aov(fvfm_loss_norm ~ Treatment*Species*Colony, data = treatment_normalized_bothspecies_3wayanova)), file = "fvfm_loss_norm_bothspeciesgenet_anova_tukey.csv")
summary(aov(fvfm_loss_norm ~ Treatment*Species*Colony, data = treatment_normalized_bothspecies_3wayanova))
TukeyHSD(aov(fvfm_loss_norm ~ Treatment*Species*Colony, data = treatment_normalized_bothspecies_3wayanova))
summary(aov(fvfm_loss_norm ~ Treatment*Species*Colony, data = treatment_normalized_bothspecies_3wayanova))
aov(fvfm_loss_norm ~ Treatment*Species*Colony, data = treatment_normalized_bothspecies_3wayanova)
summary(aov(fvfm_loss_norm ~ Treatment*Species*Colony, data = treatment_normalized_bothspecies_3wayanova))
library(tidyverse)
library(readxl)
library(lubridate)
library(cowplot)
library(ggpubr)
library(openair)
library(seacarb)
library(scales)   # to access breaks/formatting functions
library(gridExtra) # for arranging plots
library(ggradar)
library(doBy)
library(reshape2)
library(zoo)
str_emerald <- read_excel("raw_data/str-emerald-sn5042.xlsx", sheet = "str-emerald-sn5042")
str_emerald$`Datetime (UTC)` <- as.POSIXct(str_emerald$`Datetime (UTC)`, tz="UTC")
str_emerald$`Datetime (EST)` <- with_tz(str_emerald$`Datetime (UTC)`, "America/New_York")
str_emerald %>%
mutate(reef = "Emerald") %>%
dplyr::select(!Time) %>%
dplyr::select(!`Datetime (UTC)`) %>%
dplyr::select(!`Sample Number`) -> str_emerald
str_macnorth <- read_excel("raw_data/str-macnorth-sn9235.xlsx", sheet = "str-macnorth-sn9235")
str_macnorth$Datetime <- as.POSIXct(str_macnorth$Datetime, tz="UTC")
str_macnorth$`Datetime (EST)` <- with_tz(str_macnorth$Datetime, "America/New_York")
str_macnorth %>%
mutate(reef = "MacNorth") %>%
dplyr::select(!Datetime) %>%
dplyr::select(!`Sample Number`) %>%
dplyr::select(!Time) -> str_macnorth
full_join(str_emerald, str_macnorth) -> str_all
# Identify the lowest and highest points
lowest_point <- str_all %>% filter(Temperature == min(Temperature))
highest_point <- str_all %>% filter(Temperature == max(Temperature))
str_all %>% filter(reef == "Emerald") %>% filter(Temperature == max(Temperature))
str_all %>%
filter(Date >= "2022-12-06") %>%
ggplot(., aes(x=`Datetime (EST)`, y=Temperature, color = reef)) +
geom_line() +
theme_classic() +
labs(x="Day", y = "Temperature (ºC)") +
scale_color_manual(values = c("#edb9c3", "#5370c9")) +
geom_hline(yintercept = 31, linetype = "dashed", color = "black") +
annotate("text", x = as.POSIXct("2023-11-20"), y = 31, label = "31ºC", vjust = -1) +
geom_point(data = lowest_point, aes(`Datetime (EST)`, Temperature), color = "#5370c9", size = 2) +
geom_text(data = lowest_point, aes(`Datetime (EST)`, Temperature, label = "17.89ºC"), vjust = 1.1, hjust = -0.1, color = "black") +
geom_point(data = highest_point, aes(`Datetime (EST)`, Temperature), color = "#5370c9", size = 2) +
geom_text(data = highest_point, aes(`Datetime (EST)`, Temperature, label = "33.55ºC"), vjust = 0, hjust = -0.2, color = "black") +
labs(title = "2022-2023 Temperature Data at Emerald Reef and MacArthur Causeway", x="Month")
#annotate("text", x = as.POSIXct("2023-09-30"), y = 18, label= "STR data at Emerald stopped 9/9", colour = "black", hjust = .56)
ctd_emerald <- read_excel("raw_data/ctd-emerald-composite.xlsx", sheet = "ctd-emerald-composite")
ctd_emerald %>%
dplyr::select(`Timestamp UTC`, Temperature) -> ctd_emerald_temp
ctd_emerald_temp$`Timestamp (UTC)` <- as.POSIXct(ctd_emerald_temp$`Timestamp UTC`, tz="UTC")
ctd_emerald_temp$`Datetime (EST)` <- with_tz(ctd_emerald_temp$`Timestamp (UTC)`, "America/New_York")
ctd_emerald_temp %>%
mutate(Datetime_EST = `Datetime (EST)`) %>%
separate(Datetime_EST, into = c("Date", "Time"), sep = " ") %>%
mutate(Date = ymd(Date)) %>%
dplyr::select(-1,-3) %>%
mutate(reef = "Emerald") %>%
filter(Date >= "2023-09-09") -> ctd_emerald_temp_sept9
str_all %>%
filter(Date >= "2022-12-06") %>%
full_join(ctd_emerald_temp_sept9) %>%
ggplot(., aes(x=`Datetime (EST)`, y=Temperature, color = reef)) +
geom_line() +
theme_classic() +
labs(x="Day", y = "Temperature (ºC)") +
scale_color_manual(values = c("#edb9c3", "#5370c9")) +
geom_hline(yintercept = 31, linetype = "dashed", color = "black") +
annotate("text", x = as.POSIXct("2023-11-20"), y = 31, label = "31ºC", vjust = -1) +
geom_point(data = lowest_point, aes(`Datetime (EST)`, Temperature), color = "#5370c9", size = 2) +
geom_text(data = lowest_point, aes(`Datetime (EST)`, Temperature, label = "17.89ºC"), vjust = 1.1, hjust = -0.1, color = "black") +
geom_point(data = highest_point, aes(`Datetime (EST)`, Temperature), color = "#5370c9", size = 2) +
geom_text(data = highest_point, aes(`Datetime (EST)`, Temperature, label = "33.55ºC"), vjust = 0, hjust = -0.2, color = "black") +
labs( x="Month") +
theme(text = element_text(size = 12))
#ggsave("temperatureplot.pdf", width = 6, height = 4)
str_all %>%
filter(Date >= "2022-12-06") %>%
full_join(ctd_emerald_temp_sept9) %>%
ggplot(., aes(x=`Datetime (EST)`, y=Temperature, color = reef)) +
geom_line() +
theme_classic() +
labs(x="Day", y = "Temperature (ºC)") +
scale_color_manual(values = c("#edb9c3", "#5370c9")) +
labs( x="Month") +
theme(text = element_text(size = 12))
#ggsave("temperatureplot_withMMM.png")
#december 6 (initial)
#jan 26 (t1)
#april 4 (t2)
#july 11 (t3)
#nov 20 (t4)
str_all %>%
filter(`Datetime (EST)` >= "2022-12-05 23:00:00" & `Datetime (EST)` <= "2022-12-06 23:00:00") %>%
group_by(reef) %>%
summarise(max_temp = max(Temperature))
#Emerald = 26.9
#MacNorth = 25.6
str_all %>%
filter(`Datetime (EST)` >= "2023-01-25 23:00:00" & `Datetime (EST)` <= "2023-01-26 23:00:00") %>%
group_by(reef) %>%
summarise(max_temp = max(Temperature))
#Emerald = 25.6
#MacNorth = 25.0
str_all %>%
filter(`Datetime (EST)` >= "2023-04-03 23:00:00" & `Datetime (EST)` <= "2023-04-04 23:00:00") %>%
group_by(reef) %>%
summarise(max_temp = max(Temperature))
#Emerald = 26.8
#MacNorth = 28.3
str_all %>%
filter(`Datetime (EST)` >= "2023-07-10 23:00:00" & `Datetime (EST)` <= "2023-07-11 23:00:00") %>%
group_by(reef) %>%
summarise(max_temp = max(Temperature))
#Emerald = 31.4
#MacNorth = 32.8
str_all %>%
filter(Date >= "2022-12-06") %>%
full_join(ctd_emerald_temp_sept9) %>%
filter(Date >= "2023-11-19" & Date <= "2023-11-20") %>%
group_by(reef) %>%
summarise(max_temp = max(Temperature))
#Emerald = 27.0
#MacNorth = 26.3
str_all %>%
filter(Date >= "2022-12-06") %>%
full_join(ctd_emerald_temp_sept9) %>%
dplyr::select(!Time) -> all_temp_data
temp.summary<- summaryBy(Temperature ~ reef, data = all_temp_data,
FUN = function(x) { c(max = max(x), min = min(x)) } )
temp.summary$Temp.seasonal <- temp.summary$Temperature.max - temp.summary$Temperature.min
# Daily Range
Daily.range <- summaryBy(Temperature ~ Date + reef, data=all_temp_data, FUN=c(max,min,mean,sd))
Daily.range$temp.daily.range <- Daily.range$Temperature.max - Daily.range$Temperature.min
temp.d.range <- summaryBy(temp.daily.range ~ reef, data = Daily.range,
FUN = function(x) { c(mean = mean(x)) } )
Daily.range %>%
filter(Temperature.max > 30.5) %>%
group_by(reef) %>%
dplyr::summarise(d.above.30.5 = n()) -> temp.d.30.5
full_join(temp.summary, temp.d.range) %>%
full_join(., temp.d.30.5) -> temp_summary
temp_summary
all_temp_data
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature))
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature)) %>%
ungroup() %>%
dplyr::select(!c("Temperature","Datetime (EST)")) %>%
distinct()
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature)) %>%
ungroup() %>%
dplyr::select(!c("Temperature","Datetime (EST)")) %>%
distinct() %>%
mutate(HotSpot = case_when(reef == "MacNorth" ~ (mean_daily_temp - 29.55),
reef == "Emerald" ~ (mean_daily_temp - 29.53)))
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature)) %>%
ungroup() %>%
dplyr::select(!c("Temperature","Datetime (EST)")) %>%
distinct() %>%
mutate(HotSpot = case_when(reef == "MacNorth" ~ (mean_daily_temp - 29.55),
reef == "Emerald" ~ (mean_daily_temp - 29.53))) %>%
mutate(HotSpot = ifelse(HotSpot >= 0, HotSpot, 0))
all_temp_data
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature))
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature)) %>%
ungroup() %>%
dplyr::select(!c("Temperature","Datetime (EST)")) %>%
distinct()
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature)) %>%
ungroup() %>%
dplyr::select(!c("Temperature","Datetime (EST)")) %>%
distinct() %>%
mutate(HotSpot = case_when(reef == "MacNorth" ~ (mean_daily_temp - 29.55),
reef == "Emerald" ~ (mean_daily_temp - 29.53)))
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature)) %>%
ungroup() %>%
dplyr::select(!c("Temperature","Datetime (EST)")) %>%
distinct() %>%
mutate(HotSpot = case_when(reef == "MacNorth" ~ (mean_daily_temp - 29.55),
reef == "Emerald" ~ (mean_daily_temp - 29.53))) %>%
mutate(HotSpot = ifelse(HotSpot >= 0, HotSpot, 0))
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature)) %>%
ungroup() %>%
dplyr::select(!c("Temperature","Datetime (EST)")) %>%
distinct() %>%
mutate(HotSpot = case_when(reef == "MacNorth" ~ (mean_daily_temp - 29.55),
reef == "Emerald" ~ (mean_daily_temp - 29.53))) %>%
mutate(HotSpot = ifelse(HotSpot >= 0, HotSpot, 0)) %>%
mutate(Stress = ifelse(HotSpot >= 1, HotSpot, 0))
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature)) %>%
ungroup() %>%
dplyr::select(!c("Temperature","Datetime (EST)")) %>%
distinct() %>%
mutate(HotSpot = case_when(reef == "MacNorth" ~ (mean_daily_temp - 29.55),
reef == "Emerald" ~ (mean_daily_temp - 29.53))) %>%
mutate(HotSpot = ifelse(HotSpot >= 0, HotSpot, 0)) %>%
mutate(Stress = ifelse(HotSpot >= 1, HotSpot, 0)) %>%
mutate(Weeks_Stress = Stress/7)
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature)) %>%
ungroup() %>%
dplyr::select(!c("Temperature","Datetime (EST)")) %>%
distinct() %>%
mutate(HotSpot = case_when(reef == "MacNorth" ~ (mean_daily_temp - 29.55),
reef == "Emerald" ~ (mean_daily_temp - 29.53))) %>%
mutate(HotSpot = ifelse(HotSpot >= 0, HotSpot, 0)) %>%
mutate(Stress = ifelse(HotSpot >= 1, HotSpot, 0)) %>%
mutate(Weeks_Stress = Stress/7)  -> Long.data.DHW
Long.data.DHW %>%
filter(reef == "Emerald") -> DHW_emerald
DHW_emerald$DHW<-rollapplyr(DHW_emerald$Weeks_Stress,list(-(83:0)),sum,fill=NA)
View(DHW_emerald)
Long.data.DHW %>%
filter(reef == "MacNorth") -> DHW_mac
DHW_mac$DHW<-rollapplyr(DHW_mac$Weeks_Stress,list(-(83:0)),sum,fill=NA)
rbind(DHW_emerald, DHW_mac) %>%
ggplot(., aes(x=Date)) +
geom_hline(yintercept=8, linetype="dashed")+
geom_hline(yintercept=4, linetype="dashed")+
geom_line(aes(y = DHW, color = reef)) +
ylab("DWH (C-week)  /  Temperature (C)") +
xlab("Date") +
theme_classic()  +
scale_color_manual(values = c("#edb9c3", "#5370c9"))
str_emerald
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature), stdev = sd(Temperature), numberofdatapoints = n(Temperature)) %>%
ungroup()
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature)) %>%
ungroup()
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature)) %>%
ungroup() %>%
dplyr::select(!c("Temperature","Datetime (EST)")) %>%
distinct() %>%
mutate(HotSpot = case_when(reef == "MacNorth" ~ (mean_daily_temp - 29.55),
reef == "Emerald" ~ (mean_daily_temp - 29.53))) %>%
mutate(HotSpot = ifelse(HotSpot >= 0, HotSpot, 0)) %>%
mutate(Stress = ifelse(HotSpot >= 1, HotSpot, 0)) %>%
mutate(Weeks_Stress = Stress/7)  -> Long.data.DHW
Long.data.DHW %>%
filter(reef == "Emerald") -> DHW_emerald
DHW_emerald$DHW<-rollapplyr(DHW_emerald$Weeks_Stress,list(-(83:0)),sum,fill=NA)
Long.data.DHW %>%
filter(reef == "MacNorth") -> DHW_mac
DHW_mac$DHW<-rollapplyr(DHW_mac$Weeks_Stress,list(-(83:0)),sum,fill=NA)
rbind(DHW_emerald, DHW_mac) %>%
ggplot(., aes(x=Date)) +
geom_hline(yintercept=8, linetype="dashed")+
geom_hline(yintercept=4, linetype="dashed")+
geom_line(aes(y = DHW, color = reef)) +
ylab("DWH (C-week)  /  Temperature (C)") +
xlab("Date") +
theme_classic()  +
scale_color_manual(values = c("#edb9c3", "#5370c9"))
#ggsave("DHW_linegraph.pdf")
# Highest DWH per year
rbind(DHW_emerald, DHW_mac) %>%
group_by(reef) %>%
summarize(max = max(DHW, na.rm = TRUE)) %>%
rename(maxDHW=max) -> MaxDHW
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature)) %>%
ungroup() %>%
dplyr::select(!c("Temperature","Datetime (EST)")) %>%
distinct()
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature)) %>%
ungroup() %>%
dplyr::select(!c("Temperature","Datetime (EST)")) %>%
distinct() %>%
mutate(HotSpot = case_when(reef == "MacNorth" ~ (mean_daily_temp - 29.55),
reef == "Emerald" ~ (mean_daily_temp - 29.53)))
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature)) %>%
ungroup() %>%
dplyr::select(!c("Temperature","Datetime (EST)")) %>%
distinct() %>%
mutate(HotSpot = case_when(reef == "MacNorth" ~ (mean_daily_temp - 29.55),
reef == "Emerald" ~ (mean_daily_temp - 29.53))) %>%
mutate(HotSpot = ifelse(HotSpot >= 0, HotSpot, 0))
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature)) %>%
ungroup() %>%
dplyr::select(!c("Temperature","Datetime (EST)")) %>%
distinct() %>%
mutate(HotSpot = case_when(reef == "MacNorth" ~ (mean_daily_temp - 29.55),
reef == "Emerald" ~ (mean_daily_temp - 29.53))) %>%
mutate(HotSpot = ifelse(HotSpot >= 0, HotSpot, 0)) %>%
mutate(Stress = ifelse(HotSpot >= 1, HotSpot, 0))
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature)) %>%
ungroup() %>%
dplyr::select(!c("Temperature","Datetime (EST)")) %>%
distinct() %>%
mutate(HotSpot = case_when(reef == "MacNorth" ~ (mean_daily_temp - 29.55),
reef == "Emerald" ~ (mean_daily_temp - 29.53))) %>%
mutate(HotSpot = ifelse(HotSpot >= 0, HotSpot, 0)) %>%
mutate(Stress = ifelse(HotSpot >= 1, HotSpot, 0)) %>%
mutate(Weeks_Stress = Stress/7)
all_temp_data %>%
dplyr::group_by(Date, reef) %>%
mutate(mean_daily_temp = mean(Temperature)) %>%
ungroup() %>%
dplyr::select(!c("Temperature","Datetime (EST)")) %>%
distinct() %>%
mutate(HotSpot = case_when(reef == "MacNorth" ~ (mean_daily_temp - 29.55),
reef == "Emerald" ~ (mean_daily_temp - 29.53))) %>%
mutate(HotSpot = ifelse(HotSpot >= 0, HotSpot, 0)) %>%
mutate(Stress = ifelse(HotSpot >= 1, HotSpot, 0)) %>%
mutate(Weeks_Stress = Stress/7)  -> Long.data.DHW
DHW_emerald$DHW<-rollapplyr(DHW_emerald$Weeks_Stress,list(-(83:0)),sum,fill=NA)
View(DHW_emerald)
