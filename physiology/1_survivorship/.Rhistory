column_to_rownames(var="Species.Colony.Treatment") %>%
as.data.frame()
slowburn_metadata %>%
filter(slowburn == "heatstress_32") %>%
filter(Removed_Date >= "2022-06-25" | is.na(Removed_Date)) %>%
mutate(Reason_removed = case_when(Reason_removed == "dead" ~ "RTL",
Reason_removed == "RTL" ~ "RTL",
Reason_removed == "paling" ~ "bleached",
Reason_removed == "bleaching" ~ "bleached")) %>%
group_by(Species, Colony,Treatment, Reason_removed) %>%
summarise(count = n()) %>%
drop_na() %>%
unite("Species.Colony.Treatment", Species,Colony,Treatment, sep = ".") %>%
pivot_wider(names_from="Reason_removed", values_from = "count") %>%
mutate(bleached = if_else(is.na(bleached),0,bleached)) %>%
mutate(RTL = if_else(is.na(RTL),0,RTL))
slowburn_metadata %>%
filter(slowburn == "heatstress_32") %>%
filter(Removed_Date >= "2022-06-25" | is.na(Removed_Date)) %>%
mutate(Reason_removed = case_when(Reason_removed == "dead" ~ "RTL",
Reason_removed == "RTL" ~ "RTL",
Reason_removed == "paling" ~ "bleached",
Reason_removed == "bleaching" ~ "bleached")) %>%
group_by(Species, Colony,Treatment, Reason_removed) %>%
summarise(count = n())
slowburn_metadata %>%
filter(slowburn == "heatstress_32") %>%
filter(Removed_Date >= "2022-06-25" | is.na(Removed_Date)) %>%
mutate(Reason_removed = case_when(Reason_removed == "dead" ~ "RTL",
Reason_removed == "RTL" ~ "RTL",
Reason_removed == "paling" ~ "bleached",
Reason_removed == "bleaching" ~ "bleached")) %>%
group_by(Species, Colony,Treatment, Reason_removed) %>%
summarise(count = n()) %>%
drop_na() %>%
unite("Species.Colony.Treatment", Species,Colony,Treatment, sep = ".") %>%
pivot_wider(names_from="Reason_removed", values_from = "count") %>%
mutate(bleached = if_else(is.na(bleached),0,bleached)) %>%
mutate(RTL = if_else(is.na(RTL),0,RTL)) %>%
column_to_rownames(var="Species.Colony.Treatment") %>%
as.data.frame()
library(tidyverse)
library(gsw) #for density calculation
library(rstatix)
library(ggsignif)
library(dunn.test)
library(cowplot)
library(plotrix)
metadata <- readxl::read_xlsx("../metadata.xlsx")
buoyantweights<- metadata %>%
dplyr::select(Species, ID, Colony, Treatment, Treatment_Tank, Bw_initial_raw_mass:bw_final_temp) %>%
drop_na(Treatment)
#sample size
buoyantweights %>% group_by(Species, Treatment) %>% summarise(count = n())
#the final time point sample sizes are much lower because I didn't buoyant weigh any corals that got tissue sampled or FACS run (N=69 corals)
buoyantweights
#sample size
buoyantweights %>%
drop_na(bw_final_raw_mass) %>%
group_by(Species, Colony, Treatment) %>%
summarise(count = n())
ipam_tidy_data <- read.csv("ipam_tidy_data.csv")
treatment_time_bothspecies <- ipam_tidy_data %>%
dplyr::filter(!Treatment_period == "CBASS") %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
dplyr::select(Date, Colony, Puck, Tank, fvfm, Treatment, Species) %>%
mutate(Date = mdy(Date)) %>%
dplyr::filter(Date <= "2022-04-20") %>%
pivot_wider(names_from = Date, values_from = fvfm) %>%
mutate(fvfm_t0 = case_when(Species == "Acervicornis" ~ `2022-03-16`,
Species == "Pclivosa" ~ `2022-03-21`)) %>%
mutate(fvfm_t1 = case_when(Species == "Acervicornis" ~ `2022-04-06`,
Species == "Pclivosa" ~ `2022-04-06`)) %>%
mutate(fvfm_t2 = case_when(Species == "Acervicornis" ~ `2022-04-20`,
Species == "Pclivosa" ~ `2022-04-20`)) %>%
pivot_longer(fvfm_t0:fvfm_t2, names_to = "fvfm_timepoint", values_to = "fvfm") %>%
mutate(numDays = case_when(fvfm_timepoint == "fvfm_t0" ~ 0,
Species == "Pclivosa" & fvfm_timepoint == "fvfm_t1" ~ 16,
Species == "Acervicornis" & fvfm_timepoint == "fvfm_t1" ~ 21,
Species == "Pclivosa" & fvfm_timepoint == "fvfm_t2" ~ 30,
Species == "Acervicornis" & fvfm_timepoint == "fvfm_t2" ~ 35,
Species == "Pclivosa" & fvfm_timepoint == "fvfm_t3" ~ 65,
Species == "Acervicornis" & fvfm_timepoint == "fvfm_t3" ~ 70))
treatment_normalized_bothspecies <- ipam_tidy_data %>%
dplyr::filter(!Treatment_period == "CBASS") %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
dplyr::select(Date, Colony, Puck, Tank, fvfm, Treatment, Species)  %>%
mutate(Date = mdy(Date)) %>%
dplyr::filter(Date <= "2022-04-20") %>% #pre-CBASS time points
pivot_wider(names_from = Date, values_from = fvfm) %>%
mutate(fvfm_loss = case_when(Species == "Acervicornis" ~ `2022-03-16` - `2022-04-20`,
Species == "Pclivosa" ~ `2022-03-21` - `2022-04-20`)) %>%
mutate(fvfm_loss_norm = case_when(Species == "Acervicornis" ~ (fvfm_loss/`2022-03-16`)*100,
Species == "Pclivosa" ~ (fvfm_loss/`2022-03-21`)*100))
treatment_time_bothspecies
treatment_time_bothspecies %>%
select(Colony:Species, fvfm_timepoint, fvfm)
treatment_time_bothspecies %>%
select(Colony:Species, fvfm_timepoint, fvfm) %>%
filter(fvfm_timepoint == "fvfm_t2")
treatment_time_bothspecies %>%
select(Colony:Species, fvfm_timepoint, fvfm) %>%
filter(fvfm_timepoint == "fvfm_t2") %>% #282 corals
group_by(Species, Colony, Treatment) %>%
summarise(count = n())
library(tidyverse)
library(readxl)
library(rstatix)
library(plotrix)
library(ggpubr)
library(cowplot)
library(dunn.test)
Rscoredata <- read_xlsx("data_rscores.xlsx")
Rscoredata %>%
rename(`Photo ID` = `Image #`) %>%
rename(Date = `Date (Folder Name)`) -> Rscoredata
initialphotos <- read_xlsx("photo_metadata.xlsx")
april18 <- read_xlsx("photo_metadata.xlsx", sheet = "april 18")
june21 <- read_xlsx("photo_metadata.xlsx", sheet = "june 21")
july8 <- read_xlsx("photo_metadata.xlsx", sheet = "july 8")
coral_metadata <- readxl::read_xlsx("../metadata.xlsx")
coral_metadata %>%
dplyr::select(Species:CBASS_tank) -> coral_metadata
str(initialphotos)
initialphotos %>%
dplyr::select(`Photo ID`:`Coral Position`) -> initialphotos
str(april18)
april18 %>%
dplyr::select(`Photo ID`:`Coral Position`) -> april18
str(june21)
june21%>%
dplyr::select(`Photo ID`:`Coral Position`) -> june21
str(july8)
july8 %>%
dplyr::select(`Photo ID`:`Coral Position`) -> july8
full_join(initialphotos, april18) %>%
full_join(., june21) %>%
full_join(., july8) -> allRscores
allRscores
#Tank column depends on time point, as the tank assignments changed throughout timeline. But, should be able to use the Puck ID + Species as the unique identifier
allRscores %>%
mutate(Species = case_when(Species == "Acer" ~ "Acropora cervicornis",
Species == "Pcli" ~ "Pseudodiploria clivosa")) -> allRscores
allRscores %>%
rename(ID = `Puck ID`) -> allRscores #821 rows
full_join(allRscores, coral_metadata, by = c("Species", "ID")) %>%
drop_na(`Photo ID`)  -> allmetadata #821 rows
full_join(allmetadata, Rscoredata, by = c("Date", "Photo ID", "Coral Position")) -> Rintensity_withmetadata
Rintensity_withmetadata %>%
dplyr::select(!Genotype) -> Rintensity_withmetadata
Rintensity_withmetadata$month <- format(Rintensity_withmetadata$Date, "%m")
Rintensity_withmetadata$Date <- as.factor(Rintensity_withmetadata$Date)
Rintensity_withmetadata$month <- as.factor(Rintensity_withmetadata$month)
Rintensity_withmetadata %>%
group_by(ID, Species, Colony, Treatment, month) %>%
mutate(mean_Rintensity_percoral = mean(Mean)) -> Rintensity_withmetadata
# Rintensity_withmetadata %>%
#   filter(is.na(Species)) #photo 4709 is a duplicate from photo 4711 so I already have these values in the spreadsheet
Rintensity_withmetadata %>%
drop_na(ID) -> Rintensity_withmetadata
Rintensity_withmetadata %>%
ungroup() %>%
filter(month == "03" | month == "04") %>%
dplyr::select(ID, Species, Colony, Treatment, Treatment_Tank, month, mean_Rintensity_percoral) %>%
distinct() %>%
pivot_wider(names_from = "month", values_from = "mean_Rintensity_percoral") %>%
mutate(percent_change = ((`04`-`03`)/`03`)*100) -> percentchange
percentchange %>%
drop_na() -> percentchange #7 corals were not measured in the second time point
#sample sizes
percentchange
#sample sizes
percentchange %>%
group_by(Species, Colony, Treatment) %>%
summarise(count = n())
library(tidyverse)
library(plotrix)
library(ggpubr)
library(rstatix)
library(cowplot)
library(dunn.test)
library(Rmisc)
library(plyr)
library(dplyr)
percent_cells_df <- read_csv("Grace_percentcells_alldata.csv")
percent_cells_df%>%
mutate(Treatment = case_when(Treatment == "Control" ~ "Untreated",
Treatment == "Variable" ~ "Treated")) -> percent_cells_df
#there's one outlier to remove right off the bat: T1	Pcli	B	P9	r2	Percent=111.50	T1	Untreated
percent_cells_df %>%
filter(!(TimePoint=="T1" & Species == "Pcli" & Genotype == "B" & Treatment == "Untreated" & ID == "P9" & Replicate == "r2")) -> percent_cells_df
#replicates are technical replicates of the same coral fragment
#time points:
#T0 = initial pre-treatment (March 22)
#T1 = one week into treatment (March 30)
#T2 = end of treatment (April 20)
#follow-up = post CBASS and treatment follow-up (June 1)
percent_cells_df %>%
mutate(num_days = case_when(TimePoint == "T0" ~ "0",
TimePoint == "T1" ~ "7",
TimePoint == "T2" ~ "28",
TimePoint == "FollowUp" ~ "71")) %>%
mutate(num_days = as.factor(num_days)) %>%
mutate(num_days = fct_relevel(num_days, "0", "7", "28", "71")) -> percent_cells_df
# sample sizes
percent_cells_df
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::filter(TimePoint == "T0" | TimePoint == "T2") %>%
dplyr::group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent), se_replicate_percent_perID = std.error(Percent)) %>%
ungroup() %>%
dplyr::group_by(num_days, Species, Genotype, Treatment) %>%
summarise(count = n())
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::filter(TimePoint == "T0" | TimePoint == "T2") %>%
dplyr::group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent), se_replicate_percent_perID = std.error(Percent)) %>%
ungroup() %>%
dplyr::group_by(num_days, Species, Genotype, Treatment) %>%
dplyr::summarise(count = n())
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::filter(TimePoint == "T0" | TimePoint == "T2") %>%
dplyr::group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent), se_replicate_percent_perID = std.error(Percent)) %>%
ungroup()
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::filter(TimePoint == "T0" | TimePoint == "T2") %>%
dplyr::group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent), se_replicate_percent_perID = std.error(Percent)) %>%
ungroup() %>%
select(TimePoint:ID, Treatment:mean_replicate_percent_perID) %>%
distinct()
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::filter(TimePoint == "T0" | TimePoint == "T2") %>%
dplyr::group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent), se_replicate_percent_perID = std.error(Percent)) %>%
ungroup() %>%
select(TimePoint:ID, Treatment:mean_replicate_percent_perID) %>%
distinct() %>%
dplyr::group_by(num_days, Species, Genotype, Treatment) %>%
dplyr::summarise(count = n())
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::filter(TimePoint == "T0" | TimePoint == "T2") %>%
dplyr::group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent), se_replicate_percent_perID = std.error(Percent)) %>%
ungroup() %>%
select(TimePoint:ID, Treatment:mean_replicate_percent_perID) %>%
distinct() %>%
dplyr::group_by(num_days, Species, Genotype, Treatment) %>%
dplyr::summarise(count = n())
library(tidyverse)
library(janitor)
library(rstatix)
library(cowplot)
library(plotrix)
metadata <- readxl::read_xlsx("../metadata.xlsx", sheet = "tidy_data")
str(metadata) #295 corals
metadata %>%
mutate(CBASS_temp = case_when(CBASS_tank == "1" ~ "36",
CBASS_tank == "2" ~ "37",
CBASS_tank == "3" ~ "32",
CBASS_tank == "4" ~ "33",
CBASS_tank == "5" ~ "35",
CBASS_tank == "6" ~ "30",
CBASS_tank == "7" ~ "34",
CBASS_tank == "8" ~ "28")) -> tidy_metadata
metadata %>%
filter(!is.na(slowburn_heatstress_tank)) #163 corals
metadata %>%
filter(!is.na(slowburn_heatstress_tank)) %>%
select(Species:heatstress_recovery_tank) %>%
mutate(CBASS_temp = case_when(CBASS_tank == "1" ~ "36",
CBASS_tank == "2" ~ "37",
CBASS_tank == "3" ~ "32",
CBASS_tank == "4" ~ "33",
CBASS_tank == "5" ~ "35",
CBASS_tank == "6" ~ "30",
CBASS_tank == "7" ~ "34",
CBASS_tank == "8" ~ "28")) %>%
mutate(slowburn= case_when(slowburn_heatstress_tank == "7" ~ "ambient",
TRUE ~ "heatstress_32")) -> slowburn_metadata
View(slowburn_metadata)
slowburn_metadata %>%
filter(slowburn == "heatstress_32") %>%
filter(Removed_Date >= "2022-06-25") %>%
mutate(start_date="2022-06-25") %>%
mutate(start_date = ymd(start_date)) %>%
mutate(Removed_Date = ymd(Removed_Date)) %>%
mutate(days_to_removed = Removed_Date - start_date) %>%
mutate(days_to_removed = as.numeric(days_to_removed))
slowburn_metadata %>%
filter(slowburn == "heatstress_32") %>%
filter(Removed_Date >= "2022-06-25") %>%
mutate(start_date="2022-06-25") %>%
mutate(start_date = ymd(start_date)) %>%
mutate(Removed_Date = ymd(Removed_Date)) %>%
mutate(days_to_removed = Removed_Date - start_date) %>%
mutate(days_to_removed = as.numeric(days_to_removed)) %>%
select(Species, ID, Colony, Treatment, days_to_removed)
slowburn_metadata %>%
filter(slowburn == "heatstress_32") %>%
filter(Removed_Date >= "2022-06-25") %>%
mutate(start_date="2022-06-25") %>%
mutate(start_date = ymd(start_date)) %>%
mutate(Removed_Date = ymd(Removed_Date)) %>%
mutate(days_to_removed = Removed_Date - start_date) %>%
mutate(days_to_removed = as.numeric(days_to_removed)) %>%
select(Species, ID, Colony, Treatment, days_to_removed) %>%
drop_na()
slowburn_metadata %>%
filter(slowburn == "heatstress_32") %>%
filter(Removed_Date >= "2022-06-25") %>%
mutate(start_date="2022-06-25") %>%
mutate(start_date = ymd(start_date)) %>%
mutate(Removed_Date = ymd(Removed_Date)) %>%
mutate(days_to_removed = Removed_Date - start_date) %>%
mutate(days_to_removed = as.numeric(days_to_removed)) %>%
select(Species, ID, Colony, Treatment, days_to_removed) %>%
write_csv("days_to_removed.csv")
library(tidyverse)
library(janitor)
library(rstatix)
library(cowplot)
library(plotrix)
metadata <- readxl::read_xlsx("../metadata.xlsx", sheet = "tidy_data")
str(metadata) #295 corals
library(survival)
library(ggpubr)
library(survminer)
library(coxme)
library(ggsurvfit)
library(gtsummary)
metadata
survivorship <- readxl::read_xlsx("../metadata.xlsx", sheet ="kaplanmeiercurve")
survivorship <- readxl::read_xlsx("../metadata.xlsx", sheet ="kaplanmeiercurve")
survivorship <- readxl::read_xlsx("../metadata.xlsx", sheet ="kaplanmeiercurve")
survivorship
metadata %>%
filter(!is.na(slowburn_heatstress_tank)) %>%
select(Species:heatstress_recovery_tank) %>%
mutate(CBASS_temp = case_when(CBASS_tank == "1" ~ "36",
CBASS_tank == "2" ~ "37",
CBASS_tank == "3" ~ "32",
CBASS_tank == "4" ~ "33",
CBASS_tank == "5" ~ "35",
CBASS_tank == "6" ~ "30",
CBASS_tank == "7" ~ "34",
CBASS_tank == "8" ~ "28")) %>%
mutate(slowburn= case_when(slowburn_heatstress_tank == "7" ~ "ambient",
TRUE ~ "heatstress_32")) -> slowburn_metadata
metadata %>%
filter(!is.na(slowburn_heatstress_tank)) #163 corals
slowburn_metadata %>%
filter(Removed_Date >= "2022-06-21" | is.na(Removed_Date)) %>%
mutate(Removed_Date = ymd(Removed_Date)) %>%
mutate(mortality_date = ymd(mortality_date)) %>%
mutate(end_date = coalesce(Removed_Date, mortality_date)) %>% #if removed_date is NA, then look and use the date from mortality date
mutate(start_date="2022-06-25") %>%
mutate(start_date = ymd(start_date)) %>%
mutate(days_to_removed = end_date - start_date) %>%
mutate(Reason_removed = case_when(Reason_removed == "dead" ~ "RTL",
Reason_removed == "RTL" ~ "RTL",
Reason_removed == "paling" ~ "bleached",
Reason_removed == "bleaching" ~ "bleached"))  %>%
group_by(Species, Treatment, Reason_removed) %>%
summarise(count = n())
slowburn_metadata %>%
filter(slowburn == "heatstress_32") %>%
filter(Removed_Date >= "2022-06-25" | is.na(Removed_Date)) %>%
mutate(Removed_Date = ymd(Removed_Date)) %>%
mutate(start_date="2022-06-25") %>%
mutate(start_date = ymd(start_date)) %>%
mutate(days_to_removed = Removed_Date - start_date) %>%
filter(!days_to_removed == "NA days") %>%
select(Species, ID, Colony, Treatment, CBASS_temp, slowburn, days_to_removed) -> slowburn_summary_data
#what are the sample sizes?
slowburn_summary_data %>%
drop_na() %>%
group_by(Species, Colony, Treatment) %>%
summarise(count = n())
str(slowburn_summary_data)
#make factors: Colony, Puck, Tank, Treatment, Species
slowburn_summary_data %>%
mutate_at(vars(Species, ID, Colony, Treatment, CBASS_temp), factor) %>%
mutate(days_to_removed = as.numeric(days_to_removed)) -> slowburn_summary_data
treat_model <- lm(days_to_removed ~ Treatment*Species + Colony, data = slowburn_summary_data)
treat_model_metrics <- augment(treat_model)
plot(treat_model)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics$.resid) # significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Species, data = treat_model_metrics) #not significant
#make interaction term
slowburn_summary_data$Species_Treatment <- interaction(slowburn_summary_data$Species, slowburn_summary_data$Treatment)
#run Welch's anova
oneway.test(days_to_removed ~ Species_Treatment, data = slowburn_summary_data, var.equal = FALSE) #significant
#posthoc test: Games-Howell
slowburn_summary_data %>%
ungroup() %>%
games_howell_test(., days_to_removed ~ Species_Treatment)
#run Welch's anova
oneway.test(days_to_removed ~ Species_Treatment, data = slowburn_summary_data, var.equal = FALSE) #significant
slowburn_summary_data %>%
ungroup() %>%
games_howell_test(., days_to_removed ~ Species_Treatment)
slowburn_metadata %>%
filter(slowburn == "heatstress_32") %>%
filter(Removed_Date >= "2022-06-25" | is.na(Removed_Date)) %>%
mutate(Removed_Date = ymd(Removed_Date)) %>%
mutate(start_date="2022-06-25") %>%
mutate(start_date = ymd(start_date)) %>%
mutate(days_to_removed = Removed_Date - start_date) %>%
filter(!days_to_removed == "NA days") %>%
group_by(Species, Treatment, CBASS_temp) %>%
summarise(averagedays = mean(days_to_removed), se = std.error(days_to_removed)) %>%
ggplot(., aes(x = CBASS_temp, y = averagedays, fill = Treatment)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(aes(ymin = averagedays - se, ymax = averagedays + se), width =
.2, position=position_dodge(.9)) +
theme_classic() +
facet_wrap(~Species, scales = "free_x") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
labs(x="CBASS Temperature", y="Number of Days at 32ºC")
aov(days_to_removed ~ Treatment*Species*CBASS_temp, data = slowburn_summary_data)
summary(aov(days_to_removed ~ Treatment*Species*CBASS_temp, data = slowburn_summary_data))
slowburn_metadata %>%
filter(slowburn == "heatstress_32") %>%
filter(Removed_Date >= "2022-06-25" | is.na(Removed_Date)) %>%
mutate(Removed_Date = ymd(Removed_Date)) %>%
mutate(start_date="2022-06-25") %>%
mutate(start_date = ymd(start_date)) %>%
mutate(days_to_removed = Removed_Date - start_date) %>%
filter(!days_to_removed == "NA days") %>%
group_by(Species, Treatment, CBASS_temp) %>%
summarise(averagedays = mean(days_to_removed), se = std.error(days_to_removed)) %>%
ggplot(., aes(x = CBASS_temp, y = averagedays, fill = Treatment)) +
geom_bar(stat="identity", position = position_dodge()) +
geom_errorbar(aes(ymin = averagedays - se, ymax = averagedays + se), width =
.2, position=position_dodge(.9)) +
theme_classic() +
facet_wrap(~Species, scales = "free_x") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
labs(x="CBASS Temperature", y="Number of Days at 32ºC")
ggsave("daysat32_byCBASS.pdf")
survfit2(Surv(DaysToDeath, StatusAtEnd) ~ Species*Treatment, data = survivorship) %>%
ggsurvfit() +
labs(x = "Days", y = "Overall survival probability") +
scale_ggsurvfit() +
add_pvalue(caption = "Log-rank {p.value}") +
add_pvalue(location  = "annotation", x = 300) +
theme(text = element_text(size = 15)) +
theme(legend.position = "right")
survivorship
survfit2(Surv(daysToDeath, status) ~ Species*Treatment, data = survivorship) %>%
ggsurvfit() +
labs(x = "Days", y = "Overall survival probability") +
scale_ggsurvfit() +
add_pvalue(caption = "Log-rank {p.value}") +
add_pvalue(location  = "annotation", x = 300) +
theme(text = element_text(size = 15)) +
theme(legend.position = "right")
survfit2(Surv(daysToDeath, status) ~ Species, data = survivorship) %>%
ggsurvfit() +
labs(x = "Days", y = "Overall survival probability") +
scale_ggsurvfit() +
add_pvalue(caption = "Log-rank {p.value}") +
add_pvalue(location  = "annotation", x = 300) +
theme(text = element_text(size = 15)) +
theme(legend.position = "right")
survfit2(Surv(daysToDeath, status) ~ Species, data = survivorship) %>%
ggsurvfit() +
labs(x = "Days", y = "Overall survival probability") +
scale_ggsurvfit() +
add_pvalue(caption = "Log-rank {p.value}") +
add_pvalue(location  = "annotation") +
theme(text = element_text(size = 15)) +
theme(legend.position = "right")
survfit2(Surv(daysToDeath, status) ~ Treatment, data = survivorship) %>%
ggsurvfit() +
labs(x = "Days", y = "Overall survival probability") +
scale_ggsurvfit() +
add_pvalue(caption = "Log-rank {p.value}") +
add_pvalue(location  = "annotation") +
theme(text = element_text(size = 15)) +
theme(legend.position = "right") +
facet_wrap(~Species)
survivorship
survivorship$Species_Treatment <- interaction(survivorship$Species, survivorship$Treatment)
survfit2(Surv(daysToDeath, status) ~ Species_Treatment, data = survivorship) %>%
ggsurvfit() +
labs(x = "Days", y = "Overall survival probability") +
scale_ggsurvfit() +
add_pvalue(caption = "Log-rank {p.value}") +
add_pvalue(location  = "annotation") +
theme(text = element_text(size = 15)) +
theme(legend.position = "right") +
facet_wrap(~Species)
survfit2(Surv(daysToDeath, status) ~ Species_Treatment, data = survivorship) %>%
ggsurvfit() +
labs(x = "Days", y = "Overall survival probability") +
scale_ggsurvfit() +
add_pvalue(caption = "Log-rank {p.value}") +
add_pvalue(location  = "annotation") +
theme(text = element_text(size = 15)) +
theme(legend.position = "right")
ggsave("kmcurve_slowburn.pdf")
