library(tidyverse)
library(readxl)
library(rstatix)
library(plotrix)
library(ggpubr)
library(cowplot)
library(dunn.test)
coral_metadata <- readxl::read_xlsx("metadata.xlsx")
coral_metadata <- readxl::read_xlsx("../metadata.xlsx")
fvfm <- read.csv("photosynthetic_efficiency/ipam_tidy_data.csv")
coral_metadata <- readxl::read_xlsx("../metadata.xlsx")
fvfm <- read.csv("../photosynthetic_efficiency/ipam_tidy_data.csv")
coral_metadata <- readxl::read_xlsx("../metadata.xlsx")
fvfm <- read.csv("../3_photosynthetic_efficiency/ipam_tidy_data.csv")
Rscoredata <- read_xlsx("../4_R_intensity//data_rscores.xlsx")
april18 <- read_xlsx("../4_R_intensity/photo_metadata.xlsx", sheet = "april 18")
june21 <- read_xlsx("../4_R_intensity/photo_metadata.xlsx", sheet = "june 21")
percent_cells_df <- read_csv("../5_immune_cell_assay//Grace_percentcells_alldata.csv")
percent_cells_df%>%
mutate(Treatment = case_when(Treatment == "Control" ~ "Untreated",
Treatment == "Variable" ~ "Treated")) -> percent_cells_df
#there's one outlier to remove right off the bat: T1	Pcli	B	P9	r2	Percent=111.50	T1	Untreated
percent_cells_df %>%
filter(!(TimePoint=="T1" & Species == "Pcli" & Genotype == "B" & Treatment == "Untreated" & ID == "P9" & Replicate == "r2")) -> percent_cells_df
#replicates are technical replicates of the same coral fragment
#time points:
#T0 = initial pre-treatment (March 22)
#T1 = one week into treatment (March 30)
#T2 = end of treatment (April 20)
#follow-up = post CBASS and treatment follow-up (June 1)
percent_cells_df %>%
filter(TimePoint == "T2" | TimePoint == "FollowUp") %>%
mutate(num_days = case_when(TimePoint == "T2" ~ "0",
TimePoint == "FollowUp" ~ "43")) %>%
mutate(num_days = as.factor(num_days)) %>%
mutate(num_days = fct_relevel(num_days, "0", "43")) -> percent_cells_df
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent), se_replicate_percent_perID = std.error(Percent)) %>%
ungroup() %>%
dplyr::group_by(num_days, Species, Treatment) %>%
dplyr::mutate(avg_percent_per_genet = mean(mean_replicate_percent_perID), se_percent_per_genet = std.error(mean_replicate_percent_perID)) %>%
ungroup() %>%
ggplot(., aes(x = num_days, y = avg_percent_per_genet))+
theme_classic()+
geom_jitter(aes(y=mean_replicate_percent_perID, color = Treatment, fill = Treatment),
position=position_dodge(width=0.8),
alpha=0.2, pch = 21,
color = "black") +
geom_errorbar(aes(x = num_days, ymax = avg_percent_per_genet+se_percent_per_genet, ymin = avg_percent_per_genet-se_percent_per_genet, color = Treatment), width = .3, position = position_dodge(width=0.8)) +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
geom_point(mapping = aes(x = num_days, fill = Treatment), size = 2, pch = 21, color = "black", position = position_dodge(width=0.8))+
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
xlab("Day")+
ylab("% Phagocytic Activity")+
facet_wrap(~Species, scales = "free_x", dir = "v") +
theme(text = element_text(size = 15)) +
theme(legend.position="none")
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::filter(TimePoint == "T0" | TimePoint == "T2") %>%
dplyr::group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent), se_replicate_percent_perID = std.error(Percent)) %>%
ungroup() %>%
ggplot(., aes(x = num_days, y = mean_replicate_percent_perID, fill = Treatment))+
geom_boxplot() +
facet_wrap(~Species) +
theme_classic()+
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
xlab("Day")+
ylab("% Phagocytic Activity")+
theme(text = element_text(size = 15))
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::filter(TimePoint == "T0" | TimePoint == "T2") %>%
dplyr::group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent), se_replicate_percent_perID = std.error(Percent)) %>%
ungroup() %>%
ggplot(., aes(x = TimePoint, y = mean_replicate_percent_perID, fill = Treatment))+
geom_boxplot() +
facet_wrap(~Species) +
theme_classic()+
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
xlab("Day")+
ylab("% Phagocytic Activity")+
theme(text = element_text(size = 15))
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::filter(TimePoint == "T0" | TimePoint == "T2")
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::filter(TimePoint == "T2" | TimePoint == "FollowUp") %>%
dplyr::group_by(TimePoint, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent), se_replicate_percent_perID = std.error(Percent)) %>%
ungroup() %>%
ggplot(., aes(x = TimePoint, y = mean_replicate_percent_perID, fill = Treatment))+
geom_boxplot() +
facet_wrap(~Species) +
theme_classic()+
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
xlab("Day")+
ylab("% Phagocytic Activity")+
theme(text = element_text(size = 15))
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::filter(TimePoint == "T2" | TimePoint == "FollowUp") %>%
mutate(num_days = as.factor(num_days))
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::filter(TimePoint == "T2" | TimePoint == "FollowUp") %>%
mutate(num_days = as.factor(num_days)) %>%
dplyr::group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent), se_replicate_percent_perID = std.error(Percent)) %>%
ungroup() %>%
ggplot(., aes(x = num_days, y = mean_replicate_percent_perID, fill = Treatment))+
geom_boxplot() +
facet_wrap(~Species) +
theme_classic()+
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
xlab("Day")+
ylab("% Phagocytic Activity")+
theme(text = element_text(size = 15))
percent_cells_df <- read_csv("../5_immune_cell_assay/Grace_percentcells_alldata.csv")
percent_cells_df
percent_cells_df %>%
drop_na(Percent) %>%
dplyr::group_by(Species, num_days, Treatment) %>%
dplyr::summarise(average_percent = mean(Percent)) %>%
pivot_wider(names_from="Treatment", values_from="average_percent") %>%
mutate(corrected_treated = Treated - Untreated, Control = Untreated - Untreated) %>%
select(Species:num_days, corrected_treated, Control) %>%
pivot_longer(corrected_treated:Control, names_to = "Treatment", values_to = "average_percent") %>%
ggplot(., aes(x=num_days, y= average_percent, fill = Treatment)) +
geom_boxplot() +
facet_wrap(~Species) +
theme_classic() +
scale_color_manual(labels=c("Untreated", "Treated"), values = c("#60DBDB","#F54A34")) +
labs(x="Day", y="% Immune Activity (Corrected)")+
theme(text = element_text(size = 14)) +
theme(legend.position="none")
percent_cells_df
percent_cells_df <- read_csv("Grace_percentcells_alldata.csv")
percent_cells_df%>%
mutate(Treatment = case_when(Treatment == "Control" ~ "Untreated",
Treatment == "Variable" ~ "Treated")) -> percent_cells_df
#there's one outlier to remove right off the bat: T1	Pcli	B	P9	r2	Percent=111.50	T1	Untreated
percent_cells_df %>%
filter(!(TimePoint=="T1" & Species == "Pcli" & Genotype == "B" & Treatment == "Untreated" & ID == "P9" & Replicate == "r2")) -> percent_cells_df
percent_cells_df %>%
mutate(num_days = case_when(TimePoint == "T0" ~ "0",
TimePoint == "T1" ~ "7",
TimePoint == "T2" ~ "28",
TimePoint == "FollowUp" ~ "71")) %>%
mutate(num_days = as.factor(num_days)) %>%
mutate(num_days = fct_relevel(num_days, "0", "7", "28", "71")) -> percent_cells_df
percent_cells_df %>%
drop_na(Percent) %>%
dplyr::group_by(Species, num_days, Treatment) %>%
dplyr::summarise(average_percent = mean(Percent)) %>%
pivot_wider(names_from="Treatment", values_from="average_percent") %>%
mutate(corrected_treated = Treated - Untreated, Control = Untreated - Untreated) %>%
select(Species:num_days, corrected_treated, Control) %>%
pivot_longer(corrected_treated:Control, names_to = "Treatment", values_to = "average_percent") %>%
ggplot(., aes(x=num_days, y= average_percent, fill = Treatment)) +
geom_boxplot() +
facet_wrap(~Species) +
theme_classic() +
scale_color_manual(labels=c("Untreated", "Treated"), values = c("#60DBDB","#F54A34")) +
labs(x="Day", y="% Immune Activity (Corrected)")+
theme(text = element_text(size = 14)) +
theme(legend.position="none")
percent_cells_df %>%
drop_na(Percent) %>%
dplyr::group_by(Species, ID, num_days, Treatment) %>%
dplyr::summarise(average_percent = mean(Percent)) %>%
pivot_wider(names_from="Treatment", values_from="average_percent") %>%
mutate(corrected_treated = Treated - Untreated, Control = Untreated - Untreated) %>%
select(Species:num_days, corrected_treated, Control) %>%
pivot_longer(corrected_treated:Control, names_to = "Treatment", values_to = "average_percent") %>%
ggplot(., aes(x=num_days, y= average_percent, fill = Treatment)) +
geom_boxplot() +
facet_wrap(~Species) +
theme_classic() +
scale_color_manual(labels=c("Untreated", "Treated"), values = c("#60DBDB","#F54A34")) +
labs(x="Day", y="% Immune Activity (Corrected)")+
theme(text = element_text(size = 14)) +
theme(legend.position="none")
percent_cells_df %>%
drop_na(Percent) %>%
dplyr::group_by(Species, ID, num_days, Treatment) %>%
dplyr::summarise(average_percent = mean(Percent)) %>%
pivot_wider(names_from="Treatment", values_from="average_percent") %>%
mutate(corrected_treated = Treated - Untreated, Control = Untreated - Untreated) %>%
select(Species:num_days, corrected_treated, Control)
percent_cells_df %>%
drop_na(Percent) %>%
dplyr::group_by(Species, ID, num_days, Treatment) %>%
dplyr::summarise(average_percent = mean(Percent))
percent_cells_df %>%
drop_na(Percent) %>%
dplyr::group_by(Species, ID, num_days, Treatment) %>%
dplyr::summarise(average_percent = mean(Percent)) %>%
pivot_wider(names_from="Treatment", values_from="average_percent")
percent_cells_df %>%
drop_na(Percent) %>%
dplyr::group_by(Species, Colony, num_days, Treatment) %>%
dplyr::summarise(average_percent = mean(Percent)) %>%
pivot_wider(names_from="Treatment", values_from="average_percent")
percent_cells_df %>%
drop_na(Percent) %>%
dplyr::group_by(Species, Genotype, num_days, Treatment) %>%
dplyr::summarise(average_percent = mean(Percent)) %>%
pivot_wider(names_from="Treatment", values_from="average_percent")
percent_cells_df %>%
drop_na(Percent) %>%
dplyr::group_by(Species, Genotype, num_days, Treatment) %>%
dplyr::summarise(average_percent = mean(Percent)) %>%
pivot_wider(names_from="Treatment", values_from="average_percent") %>%
mutate(corrected_treated = Treated - Untreated, Control = Untreated - Untreated) %>%
select(Species:num_days, corrected_treated, Control)
percent_cells_df %>%
drop_na(Percent) %>%
dplyr::group_by(Species, Genotype, num_days, Treatment) %>%
dplyr::summarise(average_percent = mean(Percent)) %>%
pivot_wider(names_from="Treatment", values_from="average_percent") %>%
mutate(corrected_treated = Treated - Untreated, Control = Untreated - Untreated) %>%
select(Species:num_days, corrected_treated, Control) %>%
pivot_longer(corrected_treated:Control, names_to = "Treatment", values_to = "average_percent") %>%
ggplot(., aes(x=num_days, y= average_percent, fill = Treatment)) +
geom_boxplot() +
facet_wrap(~Species) +
theme_classic() +
scale_color_manual(labels=c("Untreated", "Treated"), values = c("#60DBDB","#F54A34")) +
labs(x="Day", y="% Immune Activity (Corrected)")+
theme(text = element_text(size = 14)) +
theme(legend.position="none")
percent_cells_df %>%
drop_na(Percent) %>%
dplyr::group_by(Species, Genotype, num_days, Treatment) %>%
dplyr::summarise(average_percent = mean(Percent)) %>%
pivot_wider(names_from="Treatment", values_from="average_percent") %>%
mutate(corrected_treated = Treated - Untreated, Control = Untreated - Untreated) %>%
select(Species:num_days, corrected_treated, Control) %>%
pivot_longer(corrected_treated:Control, names_to = "Treatment", values_to = "average_percent") %>%
ggplot(., aes(x=num_days, y= average_percent, fill = Treatment)) +
geom_boxplot() +
facet_wrap(~Species) +
theme_classic() +
scale_color_manual(labels=c("Untreated", "Treated"), values = c("#60DBDB","#F54A34")) +
labs(x="Day", y="% Immune Activity (Corrected)")+
theme(text = element_text(size = 14))
percent_cells_df %>%
drop_na(Percent) %>%
dplyr::group_by(Species, Genotype, num_days, Treatment) %>%
dplyr::summarise(average_percent = mean(Percent)) %>%
pivot_wider(names_from="Treatment", values_from="average_percent") %>%
mutate(corrected_treated = Treated - Untreated, Control = Untreated - Untreated) %>%
select(Species:num_days, corrected_treated, Control) %>%
pivot_longer(corrected_treated:Control, names_to = "Treatment", values_to = "average_percent") %>%
ggplot(., aes(x=num_days, y= average_percent, fill = Treatment)) +
geom_boxplot() +
facet_wrap(~Species) +
theme_classic() +
scale_fill_manual(labels=c("Untreated", "Treated"), values = c("#60DBDB","#F54A34")) +
labs(x="Day", y="% Immune Activity (Corrected)")+
theme(text = element_text(size = 14))
ggsave("immunecell_postCBASS_boxplot.pdf")
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::filter(TimePoint == "T2" | TimePoint == "FollowUp") %>%
mutate(num_days = as.factor(num_days)) %>%
dplyr::group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent), se_replicate_percent_perID = std.error(Percent)) %>%
ungroup() %>%
ggplot(., aes(x = num_days, y = mean_replicate_percent_perID, fill = Treatment))+
geom_boxplot() +
facet_wrap(~Species) +
theme_classic()+
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
xlab("Day")+
ylab("% Phagocytic Activity")+
theme(text = element_text(size = 15))
ggsave("immunecell_postCBASS_boxplot.pdf")
treatment_metadata<-fvfm %>%
select(Puck, Treatment) %>%
distinct() %>%
drop_na() #282 corals
treatment_time_bothspecies
fvfm %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
select(fvfm, Puck, Colony, Date, Species) %>%
filter(Date == "4/20/22" | Date == "4/22/22" | Date == "5/25/22") %>%
full_join(., treatment_metadata, by = "Puck") %>%
pivot_wider(names_from = Date, values_from = fvfm) %>%
select(!"NA") %>%
drop_na() %>%
mutate(change=(`4/22/22`-`5/25/22`)/`4/22/22`*100) -> fvfm_recovery_change
fvfm_recovery_change %>%
arrange(change) #there is one outlier
fvfm_recovery_change %>%
filter(change > -39) -> fvfm_recovery_change
fvfm_recovery_change %>%
group_by(Species, Treatment) %>%
mutate(mean_fvfmlossnorm = mean(change), se_fvfmlossnorm = std.error(change)) %>%
ggplot(., aes(x = Treatment, y = mean_fvfmlossnorm)) +
theme_classic()+
geom_jitter(aes(y=change, color = Treatment, fill = Treatment),
position=position_dodge(width=0.8),
alpha=0.1, pch = 21,
color = "black") +
geom_errorbar(aes(x = Treatment, ymax = mean_fvfmlossnorm+se_fvfmlossnorm, ymin = mean_fvfmlossnorm-se_fvfmlossnorm, color = Treatment), width = .1, position = position_dodge(width=0.8)) +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
geom_point(mapping = aes(x = Treatment, fill = Treatment), size = 2.5, pch = 21, color = "black", position = position_dodge(width=0.8))+
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
xlab("Treatment")+
ylab("% Decline in Fv/Fm")+
facet_wrap(~Species, scales = "free_x") +
theme(text = element_text(size = 15)) +
theme(legend.position="none")
fvfm %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
select(fvfm, Puck, Colony, Date, Species) %>%
filter(Date == "4/20/22" | Date == "4/22/22" | Date == "5/25/22") %>%
full_join(., treatment_metadata, by = "Puck") %>%
pivot_wider(names_from = Date, values_from = fvfm) %>%
select(!"NA") %>%
drop_na() %>%
mutate(change=(`5/25/22`-`4/22/22`)/`4/22/22`*100) -> fvfm_recovery_change
fvfm_recovery_change %>%
arrange(change) #there is one outlier
fvfm_recovery_change %>%
ggplot(., aes(x = Species, y = mean_fvfmlossnorm, fill = Treatment)) +
theme_classic()+
geom_boxplot() +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
ylab("% Decline in Fv/Fm")+
theme(text = element_text(size = 15))
fvfm_recovery_change
fvfm_recovery_change %>%
ggplot(., aes(x = Species, y = change, fill = Treatment)) +
theme_classic()+
geom_boxplot() +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
ylab("% Decline in Fv/Fm")+
theme(text = element_text(size = 15))
fvfm_recovery_change %>%
ggplot(., aes(x = Species, y = change, fill = Treatment)) +
theme_classic()+
geom_boxplot() +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
ylab("% Decline in Fv/Fm")+
theme(text = element_text(size = 15))
ggsave("fvfmdecline_recovery_boxplot_species.pdf")
fvfm_recovery_change
fvfm_recovery_change %>%
select(Puck:Treatment, change)
fvfm_recovery_change %>%
select(Puck:Treatment, change) %>%
mutate_at(vars(Colony, Puck, Treatment, Species), factor) -> fvfm_recovery_stats
fvfm_recovery_stats
recovery_model_1 <- lm(change ~ Treatment*Species + Colony, data = fvfm_recovery_stats)
recovery_model_metrics_1 <- augment(recovery_model_1)
plot(recovery_model_1)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(recovery_model_metrics_1$.resid) # not significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Species, data = recovery_model_metrics_1) #not significant
recovery_model_metrics_1 %>%
filter(abs(.std.resid) > 3)
fvfm_recovery_stats %>%
filter(change < 39)
fvfm_recovery_stats
fvfm_recovery_stats %>%
filter(change < 39) -> fvfm_recovery_stats
recovery_model_1 <- lm(change ~ Treatment*Species + Colony, data = fvfm_recovery_stats)
recovery_model_metrics_1 <- augment(recovery_model_1)
plot(recovery_model_1)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(recovery_model_metrics_1$.resid) # significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Species, data = recovery_model_metrics_1) #not significant
aov(change ~ Treatment*Species, data = fvfm_recovery_stats)
summary(aov(change ~ Treatment*Species, data = fvfm_recovery_stats))
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::filter(TimePoint == "T2" | TimePoint == "FollowUp") %>%
mutate(num_days = as.factor(num_days))
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::filter(TimePoint == "T2" | TimePoint == "FollowUp") %>%
mutate(num_days = as.factor(num_days)) %>%
group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent), se_replicate_percent_perID = std.error(Percent)) %>%
ungroup() %>%
dplyr::select(Species, Genotype, ID, Tank, Treatment, num_days, mean_replicate_percent_perID) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28") -> percent_cells_speciestreatments
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::filter(TimePoint == "T2" | TimePoint == "FollowUp") %>%
mutate(num_days = as.factor(num_days)) %>%
group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent), se_replicate_percent_perID = std.error(Percent)) %>%
ungroup() %>%
dplyr::select(Species, Genotype, ID, Tank, Treatment, num_days, mean_replicate_percent_perID) %>%
distinct() -> percent_cells_speciestreatments
percent_cells_speciestreatments
percent_cells_speciestreatments %>%
dplyr::mutate_at(vars(Species, Treatment, num_days), factor) -> percent_cells_speciestreatments
treat_model <- lm(mean_replicate_percent_perID ~ Treatment*Species*num_days + Genotype + Tank, data = percent_cells_speciestreatments)
treat_model_metrics <- augment(treat_model)
plot(treat_model)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics$.resid) # not significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Species*num_days, data = treat_model_metrics) #significant
# identifying outliers
treat_model_metrics %>%
filter(abs(.std.resid) > 3)
percent_cells_speciestreatments %>%
arrange(mean_replicate_percent_perID)
percent_cells_speciestreatments %>%
arrange(desc(mean_replicate_percent_perID))
percent_cells_speciestreatments
percent_cells_speciestreatments %>%
filter(mean_replicate_percent_perID < 26) -> percent_cells_speciestreatments
percent_cells_speciestreatments
treat_model <- lm(mean_replicate_percent_perID ~ Treatment*Species*num_days + Genotype + Tank, data = percent_cells_speciestreatments)
treat_model_metrics <- augment(treat_model)
plot(treat_model)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics$.resid) # significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Species*num_days, data = treat_model_metrics) #significant
#make interaction term
percent_cells_speciestreatments$Treatment_Species_numdays <- interaction(percent_cells_speciestreatments$Treatment, percent_cells_speciestreatments$Species, percent_cells_speciestreatments$num_days)
# kruskal wallis test
kruskal_test(mean_replicate_percent_perID ~ Treatment_Species_numdays, data = percent_cells_speciestreatments)#significant
dunn.test(percent_cells_speciestreatments$mean_replicate_percent_perID, percent_cells_speciestreatments$Treatment_Species_numdays, method = "bonferroni")
as.data.frame(dunn.test(percent_cells_speciestreatments$mean_replicate_percent_perID, percent_cells_speciestreatments$Treatment_Species_numdays, method = "bonferroni")) %>%
write_csv("species_recovery_immunecells_posthoc.csv")
as.data.frame(dunn.test(percent_cells_speciestreatments$mean_replicate_percent_perID, percent_cells_speciestreatments$Treatment_Species_numdays, method = "bonferroni")) %>%
write_csv("species_recovery_immunecells_posthoc.csv")
as.data.frame(dunn.test(percent_cells_speciestreatments$mean_replicate_percent_perID, percent_cells_speciestreatments$Treatment_Species_numdays, method = "bonferroni"))
as.data.frame(dunn.test(percent_cells_speciestreatments$mean_replicate_percent_perID, percent_cells_speciestreatments$Treatment_Species_numdays, method = "bonferroni")) %>% write_csv("species_recovery_immunecells_posthoc.csv")
as.data.frame(dunn.test(percent_cells_speciestreatments$mean_replicate_percent_perID, percent_cells_speciestreatments$Treatment_Species_numdays, method = "bonferroni"))
# kruskal wallis test
kruskal_test(mean_replicate_percent_perID ~ Treatment_Species_numdays, data = percent_cells_speciestreatments)#significant
