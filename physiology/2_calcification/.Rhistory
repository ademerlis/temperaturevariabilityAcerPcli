mutate_at(vars(Colony, ID, Treatment_Tank, Treatment, Species), factor) -> calc_bw_bothspecies_bothtimepoints
treat_model <- lm(percent_change ~ Treatment*Species + Treatment_Tank + Colony, data = calc_bw_bothspecies_bothtimepoints)
treat_model_metrics <- augment(treat_model)
treat_model_metrics <- treat_model_metrics %>% mutate(row_name = row.names(.))
plot(treat_model)
treat_model_metrics
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics$.resid) # significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Species, data = treat_model_metrics) #not significant
#do nonparametric test with interaction term of colony and tank
calc_bw_bothspecies_bothtimepoints$species_treatment <- interaction(calc_bw_bothspecies_bothtimepoints$Species, calc_bw_bothspecies_bothtimepoints$Treatment)
kruskal_test(calc_bw_bothspecies_bothtimepoints, percent_change ~ species_treatment) #significant
dunn.test(calc_bw_bothspecies_bothtimepoints$percent_change, calc_bw_bothspecies_bothtimepoints$species_treatment, method = "bonferroni")
library(dunn.test)
#dunn's test assumption is that distribution of groups is similar
ggqqplot(df, "fvfm_loss_norm", facet.by = "colony_tank")
dunn.test(calc_bw_bothspecies_bothtimepoints$percent_change, calc_bw_bothspecies_bothtimepoints$species_treatment, method = "bonferroni")
calc_bw_bothspecies_bothtimepoints
dunn.test(calc_bw_bothspecies_bothtimepoints$percent_change, calc_bw_bothspecies_bothtimepoints$species_treatment, method = "bonferroni")
dunn_results <- dunn.test(calc_bw_bothspecies_bothtimepoints$percent_change, calc_bw_bothspecies_bothtimepoints$species_treatment, method = "bonferroni")
dunn_results$P.adjusted
as.data.frame(dunn_results)
calc_bw_bothspecies_bothtimepoints %>%
group_by(Treatment) %>%
ggplot(., aes(x=Species, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(labels=c("Tank 8", "Treated", "Untreated"), values = c("grey", "#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth")
ggsave("percentgrowth_speciestreatments.pdf")
calc_bw_bothspeciesgenet_bothtimepoints %>%
group_by(Colony, Treatment) %>%
ggplot(., aes(x=Colony, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species, scales = "free") +
scale_fill_manual(labels=c("Tank 8", "Treated", "Untreated"), values = c("grey", "#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth")
calc_bw_bothspeciesgenet_bothtimepoints %>%
mutate_at(vars(Colony, Puck, Random_Tank, Treatment, Species), factor) -> calc_bw_bothspeciesgenet_bothtimepoints
calc_bw_bothspeciesgenet_bothtimepoints %>%
mutate_at(vars(Colony, ID, Random_Tank, Treatment, Species), factor) -> calc_bw_bothspeciesgenet_bothtimepoints
calc_bw_bothspeciesgenet_bothtimepoints %>%
mutate_at(vars(Colony, ID, Treatment_Tank, Treatment, Species), factor) -> calc_bw_bothspeciesgenet_bothtimepoints
treat_model <- lm(percent_change ~ Treatment*Species*Colony + Tank, data = calc_bw_bothspeciesgenet_bothtimepoints)
treat_model <- lm(percent_change ~ Treatment*Species*Colony + Treatment_Tank, data = calc_bw_bothspeciesgenet_bothtimepoints)
treat_model_metrics <- augment(treat_model)
plot(treat_model)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics$.resid) # not significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Species, data = treat_model_metrics) #not significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Species*Colony, data = treat_model_metrics) #not significant
#do nonparametric test with interaction term of colony and tank
calc_bw_bothspeciesgenet_bothtimepoints$species_treatment_colony <- interaction(calc_bw_bothspeciesgenet_bothtimepoints$Species, calc_bw_bothspeciesgenet_bothtimepoints$Treatment, calc_bw_bothspeciesgenet_bothtimepoints$Colony)
kruskal_test(calc_bw_bothspeciesgenet_bothtimepoints, percent_change ~ species_treatment_colony) #significant
dunn_results2 <- dunn.test(calc_bw_bothspeciesgenet_bothtimepoints$percent_change, calc_bw_bothspeciesgenet_bothtimepoints$species_treatment_colony, method = "bonferroni")
as.data.frame(dunn_results2)
library(tidyverse)
library(gsw) #for density calculation
library(rstatix)
library(ggsignif)
library(dunn.test)
metadata <- readxl::read_xlsx("../metadata.xlsx")
buoyantweights<- metadata %>%
dplyr::select(Species, ID, Colony, Treatment, Treatment_Tank, Bw_initial_raw_mass:bw_final_temp) %>%
mutate(Treatment = case_when(Treatment_Tank == "1" ~ "Untreated",
Treatment_Tank == "2" ~ "Treated",
Treatment_Tank == "3" ~ "Treated",
Treatment_Tank == "4" ~ "Untreated",
Treatment_Tank == "5" ~ "Treated",
Treatment_Tank == "6" ~ "Untreated",
Treatment_Tank == "7" ~ "Untreated",
Treatment_Tank == "8" ~ "tank_8"))
#sample size
buoyantweights %>% group_by(Species, Treatment) %>% summarise(count = n())
#determining seawater density using temperature and salinity (from Patrick Kiel's code)
#general equation:gsw_rho_t_exact(SA = salinity, t = temp,p = 10.1325)/1000
#initial and final corrected buoyant weight calculations
buoyantweights %>%
group_by(Species, ID, Treatment, bw_initial_date) %>%
mutate(SWrho_initial = gsw_rho_t_exact(SA = `bw_initial_salinity (ppt)`,
t = bw_initial_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_initial = Bw_initial_raw_mass/(1-SWrho_initial/2.93)) %>%  #2.93 is the density of solid aragonite
ungroup() %>%
group_by(Species, ID, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
filter(!(Species == "Acropora cervicornis" & ID == "94")) %>% #drop this one sample because it was tissue sampled
ungroup() %>%
mutate(percent_change = ((CalcMAir_final - CalcMAir_initial)/ CalcMAir_initial)*100) %>%
drop_na() -> calc_bw_bothspecies_bothtimepoints
#write_csv(calc_bw_bothspecies_bothtimepoints, file = "calc_bw_bothspecies_bothtimepoints.csv")
str(calc_bw_bothspecies_bothtimepoints)
#make factors: Colony, Puck, Tank, Treatment, Species
calc_bw_bothspecies_bothtimepoints %>%
mutate_at(vars(Colony, ID, Treatment_Tank, Treatment, Species), factor) -> calc_bw_bothspecies_bothtimepoints
treat_model <- lm(percent_change ~ Treatment*Species + Treatment_Tank + Colony, data = calc_bw_bothspecies_bothtimepoints)
treat_model_metrics <- augment(treat_model)
plot(treat_model)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics$.resid) # significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Species, data = treat_model_metrics) #not significant
#do nonparametric test with interaction term of colony and tank
calc_bw_bothspecies_bothtimepoints$species_treatment <- interaction(calc_bw_bothspecies_bothtimepoints$Species, calc_bw_bothspecies_bothtimepoints$Treatment)
kruskal_test(calc_bw_bothspecies_bothtimepoints, percent_change ~ species_treatment) #significant
dunn_results <- dunn.test(calc_bw_bothspecies_bothtimepoints$percent_change, calc_bw_bothspecies_bothtimepoints$species_treatment, method = "bonferroni")
as.data.frame(dunn_results)
library(tidyverse)
library(gsw) #for density calculation
library(rstatix)
library(ggsignif)
library(dunn.test)
metadata <- readxl::read_xlsx("../metadata.xlsx")
buoyantweights<- metadata %>%
dplyr::select(Species, ID, Colony, Treatment, Treatment_Tank, Bw_initial_raw_mass:bw_final_temp) %>%
mutate(Treatment = case_when(Treatment_Tank == "1" ~ "Untreated",
Treatment_Tank == "2" ~ "Treated",
Treatment_Tank == "3" ~ "Treated",
Treatment_Tank == "4" ~ "Untreated",
Treatment_Tank == "5" ~ "Treated",
Treatment_Tank == "6" ~ "Untreated",
Treatment_Tank == "7" ~ "Untreated",
Treatment_Tank == "8" ~ "Treated"))
#sample size
buoyantweights %>% group_by(Species, Treatment) %>% summarise(count = n())
#determining seawater density using temperature and salinity (from Patrick Kiel's code)
#general equation:gsw_rho_t_exact(SA = salinity, t = temp,p = 10.1325)/1000
#initial and final corrected buoyant weight calculations
buoyantweights %>%
group_by(Species, ID, Treatment, bw_initial_date) %>%
mutate(SWrho_initial = gsw_rho_t_exact(SA = `bw_initial_salinity (ppt)`,
t = bw_initial_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_initial = Bw_initial_raw_mass/(1-SWrho_initial/2.93)) %>%  #2.93 is the density of solid aragonite
ungroup() %>%
group_by(Species, ID, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
filter(!(Species == "Acropora cervicornis" & ID == "94")) %>% #drop this one sample because it was tissue sampled
ungroup() %>%
mutate(percent_change = ((CalcMAir_final - CalcMAir_initial)/ CalcMAir_initial)*100) %>%
drop_na() -> calc_bw_bothspecies_bothtimepoints
#write_csv(calc_bw_bothspecies_bothtimepoints, file = "calc_bw_bothspecies_bothtimepoints.csv")
write_csv(calc_bw_bothspecies_bothtimepoints, file = "calc_bw_bothspecies_bothtimepoints.csv")
calc_bw_bothspecies_bothtimepoints %>%
group_by(Treatment) %>%
ggplot(., aes(x=Species, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth")
ggsave("percentgrowth_speciestreatments.pdf")
str(calc_bw_bothspecies_bothtimepoints)
calc_bw_bothspecies_bothtimepoints %>%
mutate_at(vars(Colony, ID, Treatment_Tank, Treatment, Species), factor) -> calc_bw_bothspecies_bothtimepoints
treat_model <- lm(percent_change ~ Treatment*Species + Treatment_Tank + Colony, data = calc_bw_bothspecies_bothtimepoints)
treat_model_metrics <- augment(treat_model)
plot(treat_model)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics$.resid) # significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Species, data = treat_model_metrics) #not significant
#do nonparametric test with interaction term of colony and tank
calc_bw_bothspecies_bothtimepoints$species_treatment <- interaction(calc_bw_bothspecies_bothtimepoints$Species, calc_bw_bothspecies_bothtimepoints$Treatment)
kruskal_test(calc_bw_bothspecies_bothtimepoints, percent_change ~ species_treatment) #significant
dunn_results <- dunn.test(calc_bw_bothspecies_bothtimepoints$percent_change, calc_bw_bothspecies_bothtimepoints$species_treatment, method = "bonferroni")
as.data.frame(dunn_results)
bw_posthoc_results <- as.data.frame(dunn_results)
write_csv(bw_posthoc_results, "bw_posthoc_results.csv")
#initial and final corrected buoyant weight calculations
buoyantweights %>%
group_by(Species, ID, Colony, Treatment, bw_initial_date) %>%
mutate(SWrho_initial = gsw_rho_t_exact(SA = `bw_initial_salinity (ppt)`,
t = bw_initial_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_initial = Bw_initial_raw_mass/(1-SWrho_initial/2.93)) %>%  #2.93 is the density of solid aragonite
ungroup() %>%
group_by(Species, ID, Colony, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
filter(!(Species == "Acropora cervicornis" & ID == "94")) %>% #drop this one sample because it was tissue sampled
ungroup() %>%
mutate(percent_change = ((CalcMAir_final - CalcMAir_initial)/ CalcMAir_initial)*100) %>%
drop_na() -> calc_bw_bothspeciesgenet_bothtimepoints
write_csv(calc_bw_bothspeciesgenet_bothtimepoints, file = "calc_bw_bothspeciesgenet_bothtimepoints.csv")
calc_bw_bothspeciesgenet_bothtimepoints %>%
group_by(Colony, Treatment) %>%
ggplot(., aes(x=Colony, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species, scales = "free") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth")
str(calc_bw_bothspeciesgenet_bothtimepoints)
calc_bw_bothspeciesgenet_bothtimepoints %>%
mutate_at(vars(Colony, ID, Treatment_Tank, Treatment, Species), factor) -> calc_bw_bothspeciesgenet_bothtimepoints
treat_model <- lm(percent_change ~ Treatment*Species*Colony + Treatment_Tank, data = calc_bw_bothspeciesgenet_bothtimepoints)
treat_model_metrics <- augment(treat_model)
plot(treat_model)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics$.resid) # significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Species*Colony, data = treat_model_metrics) #not significant
#do nonparametric test with interaction term of colony and tank
calc_bw_bothspeciesgenet_bothtimepoints$species_treatment_colony <- interaction(calc_bw_bothspeciesgenet_bothtimepoints$Species, calc_bw_bothspeciesgenet_bothtimepoints$Treatment, calc_bw_bothspeciesgenet_bothtimepoints$Colony)
kruskal_test(calc_bw_bothspeciesgenet_bothtimepoints, percent_change ~ species_treatment_colony) #significant
dunn_results2 <- dunn.test(calc_bw_bothspeciesgenet_bothtimepoints$percent_change, calc_bw_bothspeciesgenet_bothtimepoints$species_treatment_colony, method = "bonferroni")
as.data.frame(dunn_results2)
bw_posthoc_results_bygenet <- as.data.frame(dunn_results2)
write_csv(bw_posthoc_results_bygenet, "bw_posthoc_results_bygenet.csv")
library(tidyverse)
library(gsw) #for density calculation
library(rstatix)
library(ggsignif)
library(dunn.test)
metadata <- readxl::read_xlsx("../metadata.xlsx")
buoyantweights<- metadata %>%
dplyr::select(Species, ID, Colony, Treatment, Treatment_Tank, Bw_initial_raw_mass:bw_final_temp) %>%
mutate(Treatment = case_when(Treatment_Tank == "1" ~ "Untreated",
Treatment_Tank == "2" ~ "Treated",
Treatment_Tank == "3" ~ "Treated",
Treatment_Tank == "4" ~ "Untreated",
Treatment_Tank == "5" ~ "Treated",
Treatment_Tank == "6" ~ "Untreated",
Treatment_Tank == "7" ~ "Untreated",
Treatment_Tank == "8" ~ "Treated"))
#sample size
buoyantweights %>% group_by(Species, Treatment) %>% summarise(count = n())
#determining seawater density using temperature and salinity (from Patrick Kiel's code)
#general equation:gsw_rho_t_exact(SA = salinity, t = temp,p = 10.1325)/1000
#initial and final corrected buoyant weight calculations
buoyantweights %>%
group_by(Species, ID, Treatment, bw_initial_date) %>%
mutate(SWrho_initial = gsw_rho_t_exact(SA = `bw_initial_salinity (ppt)`,
t = bw_initial_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_initial = Bw_initial_raw_mass/(1-SWrho_initial/2.93)) %>%  #2.93 is the density of solid aragonite
ungroup() %>%
group_by(Species, ID, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
filter(!(Species == "Acropora cervicornis" & ID == "94")) %>% #drop this one sample because it was tissue sampled
ungroup() %>%
mutate(percent_change = ((CalcMAir_final - CalcMAir_initial)/ CalcMAir_initial)*100) %>%
drop_na() -> calc_bw_bothspecies_bothtimepoints
#write_csv(calc_bw_bothspecies_bothtimepoints, file = "calc_bw_bothspecies_bothtimepoints.csv")
str(calc_bw_bothspecies_bothtimepoints)
#make factors: Colony, Puck, Tank, Treatment, Species
calc_bw_bothspecies_bothtimepoints %>%
mutate_at(vars(Colony, ID, Treatment_Tank, Treatment, Species), factor) -> calc_bw_bothspecies_bothtimepoints
treat_model <- lm(percent_change ~ Treatment*Species + Treatment_Tank + Colony, data = calc_bw_bothspecies_bothtimepoints)
treat_model_metrics <- augment(treat_model)
plot(treat_model)
# assess normality of residuals using Shapiro-Wilk test
shapiro_test(treat_model_metrics$.resid) # significant
# assess homogeneity of variances using Levene's Test
levene_test(.resid ~ Treatment*Species, data = treat_model_metrics) #not significant
#do nonparametric test with interaction term of colony and tank
calc_bw_bothspecies_bothtimepoints$species_treatment <- interaction(calc_bw_bothspecies_bothtimepoints$Species, calc_bw_bothspecies_bothtimepoints$Treatment)
kruskal_test(calc_bw_bothspecies_bothtimepoints, percent_change ~ species_treatment) #significant
dunn_results <- dunn.test(calc_bw_bothspecies_bothtimepoints$percent_change, calc_bw_bothspecies_bothtimepoints$species_treatment, method = "bonferroni")
bw_posthoc_results <- as.data.frame(dunn_results)
#write_csv(bw_posthoc_results, "bw_posthoc_results.csv")
kruskal_test(calc_bw_bothspecies_bothtimepoints, percent_change ~ species_treatment) #significant
library(cowplot)
p1<- calc_bw_bothspecies_bothtimepoints %>%
group_by(Treatment) %>%
ggplot(., aes(x=Species, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth")
p2 <- calc_bw_bothspeciesgenet_bothtimepoints %>%
group_by(Colony, Treatment) %>%
ggplot(., aes(x=Colony, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth")
#determining seawater density using temperature and salinity (from Patrick Kiel's code)
#general equation:gsw_rho_t_exact(SA = salinity, t = temp,p = 10.1325)/1000
#initial and final corrected buoyant weight calculations
buoyantweights %>%
group_by(Species, ID, Treatment, bw_initial_date) %>%
mutate(SWrho_initial = gsw_rho_t_exact(SA = `bw_initial_salinity (ppt)`,
t = bw_initial_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_initial = Bw_initial_raw_mass/(1-SWrho_initial/2.93)) %>%  #2.93 is the density of solid aragonite
ungroup() %>%
group_by(Species, ID, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
filter(!(Species == "Acropora cervicornis" & ID == "94")) %>% #drop this one sample because it was tissue sampled
ungroup() %>%
mutate(percent_change = ((CalcMAir_final - CalcMAir_initial)/ CalcMAir_initial)*100) %>%
drop_na() -> calc_bw_bothspecies_bothtimepoints
#write_csv(calc_bw_bothspecies_bothtimepoints, file = "calc_bw_bothspecies_bothtimepoints.csv")
p1<- calc_bw_bothspecies_bothtimepoints %>%
group_by(Treatment) %>%
ggplot(., aes(x=Species, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth")
#ggsave("percentgrowth_speciestreatments.pdf")
str(calc_bw_bothspecies_bothtimepoints)
#make factors: Colony, Puck, Tank, Treatment, Species
calc_bw_bothspecies_bothtimepoints %>%
mutate_at(vars(Colony, ID, Treatment_Tank, Treatment, Species), factor) -> calc_bw_bothspecies_bothtimepoints
#determining seawater density using temperature and salinity (from Patrick Kiel's code)
#general equation:gsw_rho_t_exact(SA = salinity, t = temp,p = 10.1325)/1000
#initial and final corrected buoyant weight calculations
buoyantweights %>%
group_by(Species, ID, Colony, Treatment, bw_initial_date) %>%
mutate(SWrho_initial = gsw_rho_t_exact(SA = `bw_initial_salinity (ppt)`,
t = bw_initial_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_initial = Bw_initial_raw_mass/(1-SWrho_initial/2.93)) %>%  #2.93 is the density of solid aragonite
ungroup() %>%
group_by(Species, ID, Colony, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
filter(!(Species == "Acropora cervicornis" & ID == "94")) %>% #drop this one sample because it was tissue sampled
ungroup() %>%
mutate(percent_change = ((CalcMAir_final - CalcMAir_initial)/ CalcMAir_initial)*100) %>%
drop_na() -> calc_bw_bothspeciesgenet_bothtimepoints
#write_csv(calc_bw_bothspeciesgenet_bothtimepoints, file = "calc_bw_bothspeciesgenet_bothtimepoints.csv")
p2 <- calc_bw_bothspeciesgenet_bothtimepoints %>%
group_by(Colony, Treatment) %>%
ggplot(., aes(x=Colony, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth")
plot_grid(p1, p2)
plot_grid(p1, p2, width =10, height = 4)
plot_grid(p1, p2, width =10, height = 4, nrow=1)
plot_grid(p1, p2, width =10, height = 6, nrow=1)
plot_grid(p1, p2, width =10, height = 6)
plot_grid(p1, p2, width =8, height = 6)
plot_grid(p1, p2, nrow=1)
calc_bw_bothspecies_bothtimepoints %>%
group_by(Treatment) %>%
ggplot(., aes(x=Species, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth") +
theme(legend.position="none")
p1<- calc_bw_bothspecies_bothtimepoints %>%
group_by(Treatment) %>%
ggplot(., aes(x=Species, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth") +
theme(legend.position="none")
plot_grid(p1, p2, nrow=1)
p2 <- calc_bw_bothspeciesgenet_bothtimepoints %>%
group_by(Colony, Treatment) %>%
ggplot(., aes(x=Colony, y = percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species, scales= "free_x") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(y= "% Growth")
plot_grid(p1, p2, nrow=1)
plot_grid(p1, p2, ncol = 2, rel_widths = c(1, 2))
plot_grid(p1, p2, ncol = 2, rel_widths = c(1.5, 2))
plot_grid(p1, p2, ncol = 2, rel_widths = c(1.5, 2))
ggsave("growthrates_species_genet.pdf", width = 8, height = 5)
plot_grid(p1, p2, ncol = 2, rel_widths = c(1.5, 2))
ggsave("growthrates_species_genet.pdf")
ggsave("growthrates_species_genet.pdf", width = 8)
plot_grid(p1, p2, ncol = 2, rel_widths = c(1.5, 2))
ggsave("growthrates_species_genet.pdf", width = 8)
ggsave("growthrates_species_genet.pdf", width = 10, height = 5)
plot_grid(p1, p2, ncol = 2, rel_widths = c(1.5, 2))
ggsave("growthrates_species_genet.pdf", width = 10, height = 5)
kruskal_test(calc_bw_bothspeciesgenet_bothtimepoints, percent_change ~ species_treatment_colony) #significant
#do nonparametric test with interaction term of colony and tank
calc_bw_bothspeciesgenet_bothtimepoints$species_treatment_colony <- interaction(calc_bw_bothspeciesgenet_bothtimepoints$Species, calc_bw_bothspeciesgenet_bothtimepoints$Treatment, calc_bw_bothspeciesgenet_bothtimepoints$Colony)
kruskal_test(calc_bw_bothspeciesgenet_bothtimepoints, percent_change ~ species_treatment_colony) #significant
dunn_results2 <- dunn.test(calc_bw_bothspeciesgenet_bothtimepoints$percent_change, calc_bw_bothspeciesgenet_bothtimepoints$species_treatment_colony, method = "bonferroni")
bw_posthoc_results_bygenet <- as.data.frame(dunn_results2)
#no interesting significant differences
#write_csv(bw_posthoc_results_bygenet, "bw_posthoc_results_bygenet.csv")
kruskal_test(calc_bw_bothspeciesgenet_bothtimepoints, percent_change ~ species_treatment_colony) #significant
library(tidyverse)
library(gsw) #for density calculation
library(rstatix)
library(ggsignif)
library(dunn.test)
library(cowplot)
library(plotrix)
metadata <- readxl::read_xlsx("../metadata.xlsx")
buoyantweights<- metadata %>%
dplyr::select(Species, ID, Colony, Treatment, Treatment_Tank, Bw_initial_raw_mass:bw_final_temp) %>%
drop_na(Treatment)
#sample size
buoyantweights %>% group_by(Species, Treatment) %>% summarise(count = n())
#determining seawater density using temperature and salinity (from Patrick Kiel's code)
#general equation:gsw_rho_t_exact(SA = salinity, t = temp,p = 10.1325)/1000
#initial and final corrected buoyant weight calculations
buoyantweights %>%
group_by(Species, ID, Treatment, bw_initial_date) %>%
mutate(SWrho_initial = gsw_rho_t_exact(SA = `bw_initial_salinity (ppt)`,
t = bw_initial_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_initial = Bw_initial_raw_mass/(1-SWrho_initial/2.93)) %>%  #2.93 is the density of solid aragonite
ungroup() %>%
group_by(Species, ID, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
filter(!(Species == "Acropora cervicornis" & ID == "94")) %>% #drop this one sample because it was tissue sampled
ungroup() %>%
mutate(percent_change = ((CalcMAir_final - CalcMAir_initial)/ CalcMAir_initial)*100) %>%
drop_na() -> calc_bw_bothspecies_bothtimepoints
#write_csv(calc_bw_bothspecies_bothtimepoints, file = "calc_bw_bothspecies_bothtimepoints.csv")
str(calc_bw_bothspecies_bothtimepoints)
#make factors: Colony, Puck, Tank, Treatment, Species
calc_bw_bothspecies_bothtimepoints %>%
mutate_at(vars(Colony, ID, Treatment_Tank, Treatment, Species), factor) -> calc_bw_bothspecies_bothtimepoints
#do nonparametric test with interaction term of colony and tank
calc_bw_bothspecies_bothtimepoints$species_treatment <- interaction(calc_bw_bothspecies_bothtimepoints$Species, calc_bw_bothspecies_bothtimepoints$Treatment)
kruskal_test(calc_bw_bothspecies_bothtimepoints, percent_change ~ species_treatment) #significant
dunn_results <- dunn.test(calc_bw_bothspecies_bothtimepoints$percent_change, calc_bw_bothspecies_bothtimepoints$species_treatment, method = "bonferroni")
bw_posthoc_results <- as.data.frame(dunn_results)
#write_csv(bw_posthoc_results, "bw_posthoc_results.csv")
kruskal_test(calc_bw_bothspecies_bothtimepoints, percent_change ~ species_treatment) #significant
dunn_results <- dunn.test(calc_bw_bothspecies_bothtimepoints$percent_change, calc_bw_bothspecies_bothtimepoints$species_treatment, method = "bonferroni")
#determining seawater density using temperature and salinity (from Patrick Kiel's code)
#general equation:gsw_rho_t_exact(SA = salinity, t = temp,p = 10.1325)/1000
#initial and final corrected buoyant weight calculations
buoyantweights %>%
group_by(Species, ID, Colony, Treatment, bw_initial_date) %>%
mutate(SWrho_initial = gsw_rho_t_exact(SA = `bw_initial_salinity (ppt)`,
t = bw_initial_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_initial = Bw_initial_raw_mass/(1-SWrho_initial/2.93)) %>%  #2.93 is the density of solid aragonite
ungroup() %>%
group_by(Species, ID, Colony, Treatment, bw_final_date) %>%
mutate(SWrho_final = gsw_rho_t_exact(SA = bw_final_salinity,
t = bw_final_temp,
p = 10.1325)/1000) %>%
mutate(CalcMAir_final = bw_final_raw_mass/(1-SWrho_final/2.93)) %>%
filter(!(Species == "Acropora cervicornis" & ID == "94")) %>% #drop this one sample because it was tissue sampled
ungroup() %>%
mutate(percent_change = ((CalcMAir_final - CalcMAir_initial)/ CalcMAir_initial)*100) %>%
drop_na() -> calc_bw_bothspeciesgenet_bothtimepoints
#write_csv(calc_bw_bothspeciesgenet_bothtimepoints, file = "calc_bw_bothspeciesgenet_bothtimepoints.csv")
str(calc_bw_bothspeciesgenet_bothtimepoints)
#make factors: Colony, Puck, Tank, Treatment, Species
calc_bw_bothspeciesgenet_bothtimepoints %>%
mutate_at(vars(Colony, ID, Treatment_Tank, Treatment, Species), factor) -> calc_bw_bothspeciesgenet_bothtimepoints
#do nonparametric test with interaction term of colony and tank
calc_bw_bothspeciesgenet_bothtimepoints$species_treatment_colony <- interaction(calc_bw_bothspeciesgenet_bothtimepoints$Species, calc_bw_bothspeciesgenet_bothtimepoints$Treatment, calc_bw_bothspeciesgenet_bothtimepoints$Colony)
kruskal_test(calc_bw_bothspeciesgenet_bothtimepoints, percent_change ~ species_treatment_colony) #significant
dunn_results2 <- dunn.test(calc_bw_bothspeciesgenet_bothtimepoints$percent_change, calc_bw_bothspeciesgenet_bothtimepoints$species_treatment_colony, method = "bonferroni")
bw_posthoc_results_bygenet <- as.data.frame(dunn_results2)
#no interesting significant differences
#write_csv(bw_posthoc_results_bygenet, "bw_posthoc_results_bygenet.csv")
metadata <- readxl::read_xlsx("../metadata.xlsx")
View(metadata)
buoyantweights<- metadata %>%
dplyr::select(Species, ID, Colony, Treatment, Treatment_Tank, Bw_initial_raw_mass:bw_final_temp) %>%
drop_na(Treatment)
library(tidyverse)
buoyantweights<- metadata %>%
dplyr::select(Species, ID, Colony, Treatment, Treatment_Tank, Bw_initial_raw_mass:bw_final_temp) %>%
drop_na(Treatment)
View(buoyantweights)
#sample size
buoyantweights %>% group_by(Species, Treatment) %>% summarise(count = n())
buoyantweights<- metadata %>%
dplyr::select(Species, ID, Colony, Treatment, Treatment_Tank, Bw_initial_raw_mass:bw_final_temp) %>%
drop_na(Treatment)
buoyantweights
=283-124
283-214
