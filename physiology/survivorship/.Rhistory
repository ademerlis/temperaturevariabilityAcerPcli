Acer_CBASS$Colony_Treatment <- interaction(Acer_CBASS$Colony, Acer_CBASS$Treatment)
Colony_Treatment
Acer_CBASS
ipam_tidy_CBASS_treatments %>%
filter(Species == "Acropora cervicornis") -> Acer_CBASS
Acer_CBASS$Colony_Treatment <- interaction(Acer_CBASS$Colony, Acer_CBASS$Treatment)
DRC_Acer_colony_treatment = drm(fvfm ~ CBASS_temp, data = Acer_CBASS, curveid = Colony_Treatment,
fct = LL.3(names = c('hill', 'max', 'ed50')))
Acer_CBASS
Acer_CBASS$CBASS_temp <- as.integer(Acer_CBASS$CBASS_temp)
DRC_Acer_colony_treatment = drm(fvfm ~ CBASS_temp, data = Acer_CBASS, curveid = Colony_Treatment,
fct = LL.3(names = c('hill', 'max', 'ed50')))
summary(DRC_Acer_colony_treatment)
compParm(DRC_Acer_colony_treatment, 'ed50', "-")
Acer_coeff <- as.data.frame(DRC_Acer_colony_treatment$coefficients)
Acer_coeff %>%
rownames_to_column(var = "coeff_colony_treatment") %>%
filter(grepl("ed50", coeff_colony_treatment)) %>%
rename(ED50 = `DRC_Acer_colony_treatment$coefficients`) %>%
separate(coeff_colony_treatment, into=c("ed50", "Colony", "Treatment"), sep = "[:.]") -> Acer_ED50s
Acer_ED50s
ipam_tidy_CBASS_treatments %>%
filter(Species == "Pseudodiploria clivosa") -> Pcli_CBASS
Pcli_CBASS$Colony_Treatment <- interaction(Pcli_CBASS$Colony, Pcli_CBASS$Treatment)
Pcli_CBASS$CBASS_temp <- as.integer(Pcli_CBASS$CBASS_temp)
DRC_Pcli_colony_treatment = drm(fvfm ~ CBASS_temp, data = Pcli_CBASS, curveid = Colony_Treatment,
fct = LL.3(names = c('hill', 'max', 'ed50')))
Pcli_coeff <- as.data.frame(DRC_Pcli_colony_treatment$coefficients)
Pcli_coeff %>%
rownames_to_column(var = "coeff_colony_treatment") %>%
filter(grepl("ed50", coeff_colony_treatment)) %>%
rename(ED50 = `DRC_Pcli_colony_treatment$coefficients`) %>%
separate(coeff_colony_treatment, into=c("ed50", "Colony", "Treatment"), sep = "[:.]") -> Pcli_ED50s
slowburn_summary_data
slowburn_summary_data %>%
filter(Species == "Acropora cervicornis") %>%
full_join(., Acer_ED50s, by = c("Species", "Colony"))
Acer_ED50s
slowburn_summary_data %>%
filter(Species == "Acropora cervicornis") %>%
full_join(., Acer_ED50s, by = c("Colony", "Treatment"))
slowburn_summary_data %>%
filter(Species == "Acropora cervicornis") %>%
full_join(., Acer_ED50s, by = c("Colony", "Treatment")) -> days_ed50_acer_data
days_ed50_acer_data
days_ed50_acer_data %>%
filter(Species == "Acropora cervicornis" & Treatment == "Untreated") %>%
lm(ED50 ~ days_to_removed, data = .) %>%
summary()
days_ed50_acer_data %>%
filter(Species == "Acropora cervicornis" & Treatment == "Treated") %>%
lm(ED50 ~ days_to_removed, data = .) %>%
summary()
ggplot(days_ed50_acer_data, aes(x=days_to_removed, y=ED50, color = Treatment)) +
geom_point() +
geom_smooth(method="lm", se=TRUE) +
theme_classic() +
labs(x="Days at 32ºC", y = "Fv/Fm") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
ggplot(days_ed50_acer_data, aes(x=ED50, y=days_to_removed, color = Treatment)) +
geom_point() +
geom_smooth(method="lm", se=TRUE) +
theme_classic() +
labs(x="Days at 32ºC", y = "Fv/Fm") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
days_to_removed
ggplot(days_ed50_acer_data, aes(x=days_to_removed, y=ED50, color = Treatment)) +
geom_point() +
geom_smooth(method="lm", se=TRUE) +
theme_classic() +
labs(x="Days at 32ºC", y = "Fv/Fm") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
slowburn_summary_data %>%
filter(Species == "Pseudodiploria clivosa") %>%
full_join(., Pcli_ED50s, by = c("Colony", "Treatment")) -> days_ed50_Pcli_data
ggplot(days_ed50_Pcli_data, aes(x=days_to_removed, y=ED50, color = Treatment)) +
geom_point() +
geom_smooth(method="lm", se=TRUE) +
theme_classic() +
labs(x="Days at 32ºC", y = "Fv/Fm") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
days_ed50_Pcli_data %>%
filter(Species == "Pseudodiploria clivosa" & Treatment == "Treated") %>%
lm(ED50 ~ days_to_removed, data = .) %>%
summary()
days_ed50_Pcli_data %>%
filter(Species == "Pseudodiploria clivosa" & Treatment == "Untreated") %>%
lm(ED50 ~ days_to_removed, data = .) %>%
summary()
ggplot(days_ed50_Pcli_data, aes(x=days_to_removed, y=ED50, color = Treatment)) +
geom_point() +
geom_smooth(method="lm", se=TRUE) +
theme_classic() +
labs(x="Days at 32ºC", y = "ED50") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
days_fvfm_data
days_fvfm_data %>%
group_by(Species) %>%
summarise(count = n())
ggplot(days_fvfm_data, aes(x=days_to_removed, y=fvfm, color = Treatment)) +
geom_point() +
facet_wrap(~Species, scales = "free_x") +
geom_smooth(method="lm", se=TRUE) +
theme_classic() +
labs(x="Days at 32ºC", y = "Fv/Fm") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
p1<- ggplot(days_fvfm_data, aes(x=days_to_removed, y=fvfm, color = Treatment)) +
geom_point() +
facet_wrap(~Species, scales = "free_x") +
geom_smooth(method="lm") +
theme_classic() +
labs(x="Days at 32ºC", y = "Fv/Fm") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
p1
p1<- ggplot(days_fvfm_data, aes(x=days_to_removed, y=fvfm, color = Treatment)) +
geom_point() +
facet_wrap(~Species, scales = "free_x") +
geom_smooth(method="lm", se = FALSE) +
theme_classic() +
labs(x="Days at 32ºC", y = "Fv/Fm") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
p1
p1<- ggplot(days_fvfm_data, aes(x=days_to_removed, y=fvfm, color = Treatment)) +
geom_point() +
facet_wrap(~Species, scales = "free_x") +
geom_smooth(method="lm", se = FALSE) +
theme_classic() +
labs(x="Days at 32ºC", y = "Fv/Fm") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
p1<- ggplot(days_fvfm_data, aes(x=days_to_removed, y=fvfm, color = Treatment)) +
geom_point() +
facet_wrap(~Species, scales = "free_x") +
geom_smooth(method="lm", se = FALSE) +
theme_classic() +
labs(x="Days at 32ºC", y = "Fv/Fm") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))  +
theme(legend.position="none")
rbind(days_ed50_acer_data, days_ed50_Pcli_data)
rbind(days_ed50_acer_data, days_ed50_Pcli_data) %>%
ggplot(., aes(x=days_to_removed, y=ED50, color = Treatment)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
facet_wrap(~Species, scales = "free_x") +
theme_classic() +
labs(x="Days at 32ºC", y = "ED50") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
p2<- rbind(days_ed50_acer_data, days_ed50_Pcli_data) %>%
ggplot(., aes(x=days_to_removed, y=ED50, color = Treatment)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
facet_wrap(~Species, scales = "free_x") +
theme_classic() +
labs(x="Days at 32ºC", y = "ED50") +
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15))
plot_grid(p1,p2, ncol = 2)
plot_grid(p1,p2, ncol = 2, rel_widths = c(1.5, 2))
ggsave("correlationplots_IPAM_days.pdf", width = 12, height = 5)
days_fvfm_data %>%
filter(Species == "Acropora cervicornis" & Treatment == "Untreated") %>%
lm(fvfm ~ days_to_removed, data = .) %>%
summary()
days_fvfm_data %>%
filter(Species == "Acropora cervicornis" & Treatment == "Treated") %>%
lm(fvfm ~ days_to_removed, data = .) %>%
summary()
days_fvfm_data %>%
filter(Species == "Pseudodiploria clivosa" & Treatment == "Untreated") %>%
lm(fvfm ~ days_to_removed, data = .) %>%
summary()
days_fvfm_data %>%
filter(Species == "Pseudodiploria clivosa" & Treatment == "Treated") %>%
lm(fvfm ~ days_to_removed, data = .) %>%
summary()
days_fvfm_data %>%
filter(Species == "Pseudodiploria clivosa" & Treatment == "Untreated") %>%
lm(fvfm ~ days_to_removed, data = .) %>%
summary()
days_ed50_acer_data %>%
filter(Species == "Acropora cervicornis" & Treatment == "Untreated") %>%
lm(ED50 ~ days_to_removed, data = .) %>%
summary()
days_ed50_acer_data %>%
filter(Species == "Acropora cervicornis" & Treatment == "Treated") %>%
lm(ED50 ~ days_to_removed, data = .) %>%
summary()
days_ed50_Pcli_data %>%
filter(Species == "Pseudodiploria clivosa" & Treatment == "Untreated") %>%
lm(ED50 ~ days_to_removed, data = .) %>%
summary()
days_ed50_Pcli_data %>%
filter(Species == "Pseudodiploria clivosa" & Treatment == "Treated") %>%
lm(ED50 ~ days_to_removed, data = .) %>%
summary()
days_fvfm_data %>%
filter(Species == "Acropora cervicornis" & Treatment == "Untreated") %>%
lm(fvfm ~ days_to_removed, data = .) %>%
summary()
days_fvfm_data %>%
filter(Species == "Acropora cervicornis" & Treatment == "Treated") %>%
lm(fvfm ~ days_to_removed, data = .) %>%
summary()
days_fvfm_data %>%
filter(Species == "Pseudodiploria clivosa" & Treatment == "Untreated") %>%
lm(fvfm ~ days_to_removed, data = .) %>%
summary()
days_fvfm_data %>%
filter(Species == "Pseudodiploria clivosa" & Treatment == "Treated") %>%
lm(fvfm ~ days_to_removed, data = .) %>%
summary()
days_ed50_acer_data %>%
filter(Species == "Acropora cervicornis" & Treatment == "Untreated") %>%
lm(ED50 ~ days_to_removed, data = .) %>%
summary()
days_ed50_acer_data %>%
filter(Species == "Acropora cervicornis" & Treatment == "Treated") %>%
lm(ED50 ~ days_to_removed, data = .) %>%
summary()
days_ed50_Pcli_data %>%
filter(Species == "Pseudodiploria clivosa" & Treatment == "Untreated") %>%
lm(ED50 ~ days_to_removed, data = .) %>%
summary()
days_ed50_Pcli_data
days_ed50_Pcli_data %>%
filter(Species == "Pseudodiploria clivosa" & Treatment == "Treated")
days_ed50_Pcli_data %>%
filter(Species == "Pseudodiploria clivosa" & Treatment == "Untreated") %>%
lm(ED50 ~ days_to_removed, data = .) %>%
summary()
days_ed50_Pcli_data %>%
filter(Species == "Pseudodiploria clivosa" & Treatment == "Treated") %>%
lm(ED50 ~ days_to_removed, data = .) %>%
summary()
library(tidyverse)
library(janitor)
library(rstatix)
library(cowplot)
library(plotrix)
metadata <- readxl::read_xlsx("../metadata.xlsx", sheet = "tidy_data")
str(metadata) #295 corals
# metadata %>%
#   filter(!Removed_Date == "unknown") -> metadata #244 corals...
metadata$Removed_Date <- as.numeric(metadata$Removed_Date)
metadata$Removed_Date <- as.Date(metadata$Removed_Date, origin = "1899-12-30")
metadata$mortality_date <- as.numeric(metadata$mortality_date)
metadata$mortality_date <- as.Date(metadata$mortality_date, origin = "1899-12-30")
metadata %>%
mutate(CBASS_temp = case_when(CBASS_tank == "1" ~ "36",
CBASS_tank == "2" ~ "37",
CBASS_tank == "3" ~ "32",
CBASS_tank == "4" ~ "33",
CBASS_tank == "5" ~ "35",
CBASS_tank == "6" ~ "30",
CBASS_tank == "7" ~ "34",
CBASS_tank == "8" ~ "28")) -> tidy_metadata
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL) %>%
select(!count_total)
CBASS_mortality %>%
mutate(Reason_removed = case_when(Reason_removed == "dead" ~ "RTL",
Reason_removed == "post-CBASS RTL" ~ "RTL",
Reason_removed == "RTL" ~ "RTL")) %>%
drop_na(Species, Treatment) %>%
group_by(Species, Treatment) %>%
summarize(count_RTL = n()) -> RTL_species_treatment_count
tidy_metadata %>%
filter(Removed_Date < "2022-05-20") %>%
arrange(desc(Removed_Date))
#April 26 was the last coral reported with a mortality date until the slow burn heat stress started. So have April 26 be the cut-off point for CBASS mortality plots.
ggplot(tidy_metadata, aes(x=Removed_Date, fill = Treatment)) +
geom_bar() +
facet_wrap(~Species)
ggplot(tidy_metadata, aes(x=mortality_date, fill = Treatment)) +
geom_bar() +
facet_wrap(~Species)
CBASS_mortality <- tidy_metadata %>%
dplyr::filter(Removed_Date >= "2022-04-20" & Removed_Date <= "2022-04-26")
#for this time period, Removed_Date and mortality_date match up so there's no need to use the coalesce function
tidy_metadata %>%
dplyr::filter(Removed_Date >= "2022-04-20" & Removed_Date <= "2022-04-26") %>%
drop_na(Species, Treatment, Reason_removed) %>%
group_by(Reason_removed, Species, Treatment) %>%
summarize(count = n()) %>%
ggplot(., aes(x=Reason_removed, y=count, fill = Treatment)) +
geom_col(position = position_dodge()) +
theme_classic() +
facet_wrap(~Species)  +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 15)) +
labs(x="Category", y="Number of corals") +
coord_flip()
CBASS_mortality %>%
mutate(Reason_removed = case_when(Reason_removed == "dead" ~ "RTL",
Reason_removed == "post-CBASS RTL" ~ "RTL",
Reason_removed == "RTL" ~ "RTL")) %>%
drop_na(Species, Treatment) %>%
group_by(Species, Treatment) %>%
summarize(count_RTL = n()) -> RTL_species_treatment_count
CBASS_mortality %>%
mutate(Reason_removed = case_when(Reason_removed == "dead" ~ "RTL",
Reason_removed == "post-CBASS RTL" ~ "RTL",
Reason_removed == "RTL" ~ "RTL")) %>%
drop_na(Species, Treatment) %>%
group_by(Species, Treatment, CBASS_temp) %>%
summarize(count_RTL = n()) -> RTL_species_treatment_CBASStemps
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL) %>%
select(!count_total) %>%
pivot_longer(count_RTL:count_survived, names_to="label", values_to="count") %>%
ggplot(., aes(x=Treatment, y=count, fill = label)) +
geom_col() +
theme_classic() +
scale_fill_manual(labels=c("RTL", "Survived"), values = c("black", "grey"))  +
theme(text = element_text(size = 12)) +
facet_wrap(~Species, scales = "free_x") +
labs(y="Count", fill = "Category")
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment) %>%
summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_count) %>%
mutate(count_survived = count_total-count_RTL) %>%
select(!count_total)
tidy_metadata %>%
dplyr::filter(!Removed_Date <= "2022-04-20" | is.na(Removed_Date)) %>% #remove everything that was removed before CBASS so you only account for RTL due to CBASS
group_by(Species, Treatment, CBASS_temp) %>%
summarize(count_total = n()) %>%
full_join(., RTL_species_treatment_CBASStemps) %>%
drop_na(CBASS_temp) %>%
mutate(count_RTL = if_else(is.na(count_RTL),0,count_RTL)) %>%
mutate(count_survived = count_total-count_RTL) %>%
mutate(count_survived = if_else(is.na(count_survived),0,count_survived)) %>%
select(!count_total) %>%
pivot_longer(count_RTL:count_survived, names_to="label", values_to="count") %>%
ggplot(., aes(x=CBASS_temp, y=count, fill = label)) +
geom_col() +
theme_classic() +
scale_fill_manual(labels=c("RTL", "Survived"), values = c("black", "grey"))  +
theme(text = element_text(size = 12)) +
facet_wrap(~Species*Treatment, scales = "free_x") +
labs(y="Count", fill = "Category")
metadata %>%
filter(!is.na(slowburn_heatstress_tank)) #163 corals
metadata %>%
filter(!is.na(slowburn_heatstress_tank)) %>%
select(Species:heatstress_recovery_tank) %>%
mutate(CBASS_temp = case_when(CBASS_tank == "1" ~ "36",
CBASS_tank == "2" ~ "37",
CBASS_tank == "3" ~ "32",
CBASS_tank == "4" ~ "33",
CBASS_tank == "5" ~ "35",
CBASS_tank == "6" ~ "30",
CBASS_tank == "7" ~ "34",
CBASS_tank == "8" ~ "28")) %>%
mutate(slowburn= case_when(slowburn_heatstress_tank == "7" ~ "ambient",
TRUE ~ "heatstress_32")) -> slowburn_metadata
#calculate sample sizes for methods
slowburn_metadata %>%
group_by(Species, Colony, Treatment, Reason_removed)
#calculate sample sizes for methods
slowburn_metadata %>%
group_by(Species, Colony, Treatment, Reason_removed) %>%
summarise(count = n())
slowburn_metadata %>%
filter(slowburn == "heatstress_32") %>%
filter(Removed_Date >= "2022-06-25") %>%
mutate(start_date="2022-06-25") %>%
mutate(start_date = ymd(start_date)) %>%
mutate(Removed_Date = ymd(Removed_Date)) %>%
mutate(days_to_removed = Removed_Date - start_date) %>%
mutate(days_to_removed = as.numeric(days_to_removed)) %>%
group_by(Species, Treatment) %>%
summarise(mean=mean(days_to_removed), sd = sd(days_to_removed)) %>%
as.data.frame()
slowburn_metadata %>%
filter(slowburn == "heatstress_32") %>%
filter(Removed_Date >= "2022-06-25") %>%
mutate(start_date="2022-06-25") %>%
mutate(start_date = ymd(start_date)) %>%
mutate(Removed_Date = ymd(Removed_Date)) %>%
mutate(days_to_removed = Removed_Date - start_date) %>%
mutate(days_to_removed = as.numeric(days_to_removed)) %>%
group_by(Species, Treatment) %>%
summarise(mean=mean(days_to_removed), sd = sd(days_to_removed)) %>%
as.data.frame()
slowburn_metadata %>%
filter(Removed_Date >= "2022-06-25" | is.na(Removed_Date)) %>%
mutate(Removed_Date = ymd(Removed_Date)) %>%
mutate(mortality_date = ymd(mortality_date)) %>%
mutate(end_date = coalesce(Removed_Date, mortality_date)) %>% #if removed_date is NA, then look and use the date from mortality date
mutate(start_date="2022-06-25") %>%
mutate(start_date = ymd(start_date)) %>%
mutate(days_to_removed = end_date - start_date)
slowburn_metadata %>%
filter(Removed_Date >= "2022-06-25" | is.na(Removed_Date)) %>%
mutate(Removed_Date = ymd(Removed_Date)) %>%
mutate(mortality_date = ymd(mortality_date)) %>%
mutate(end_date = coalesce(Removed_Date, mortality_date)) %>% #if removed_date is NA, then look and use the date from mortality date
mutate(start_date="2022-06-25") %>%
mutate(start_date = ymd(start_date)) %>%
mutate(days_to_removed = end_date - start_date) %>%
group_by(Species, Reason_removed) %>%
summarise(count = n())
slowburn_metadata %>%
filter(Removed_Date >= "2022-06-25" | is.na(Removed_Date)) %>%
mutate(Removed_Date = ymd(Removed_Date)) %>%
mutate(mortality_date = ymd(mortality_date)) %>%
mutate(end_date = coalesce(Removed_Date, mortality_date)) %>% #if removed_date is NA, then look and use the date from mortality date
mutate(start_date="2022-06-25") %>%
mutate(start_date = ymd(start_date)) %>%
mutate(days_to_removed = end_date - start_date) %>%
mutate(Reason_removed = case_when(Reason_removed == "dead" ~ "RTL",
Reason_removed == "RTL" ~ "RTL",
Reason_removed == "paling" ~ "bleached",
Reason_removed == "bleaching" ~ "bleached"))  %>%
group_by(Species, Reason_removed) %>%
summarise(count = n())
slowburn_metadata %>%
filter(Removed_Date >= "2022-06-25" | is.na(Removed_Date)) %>%
mutate(Removed_Date = ymd(Removed_Date)) %>%
mutate(mortality_date = ymd(mortality_date)) %>%
mutate(end_date = coalesce(Removed_Date, mortality_date)) %>% #if removed_date is NA, then look and use the date from mortality date
mutate(start_date="2022-06-25") %>%
mutate(start_date = ymd(start_date)) %>%
mutate(days_to_removed = end_date - start_date) %>%
mutate(Reason_removed = case_when(Reason_removed == "dead" ~ "RTL",
Reason_removed == "RTL" ~ "RTL",
Reason_removed == "paling" ~ "bleached",
Reason_removed == "bleaching" ~ "bleached"))  %>%
group_by(Species) %>%
summarise(count = n())
ggplot(tidy_metadata, aes(x=mortality_date, fill = Treatment)) +
geom_bar() +
facet_wrap(~Species)
ggplot(tidy_metadata, aes(x=Removed_Date, fill = Treatment)) +
geom_bar() +
facet_wrap(~Species)
slowburn_metadata %>%
filter(Removed_Date >= "2022-06-20" | is.na(Removed_Date)) %>%
mutate(Removed_Date = ymd(Removed_Date)) %>%
mutate(mortality_date = ymd(mortality_date)) %>%
mutate(end_date = coalesce(Removed_Date, mortality_date)) %>% #if removed_date is NA, then look and use the date from mortality date
mutate(start_date="2022-06-25") %>%
mutate(start_date = ymd(start_date)) %>%
mutate(days_to_removed = end_date - start_date) %>%
mutate(Reason_removed = case_when(Reason_removed == "dead" ~ "RTL",
Reason_removed == "RTL" ~ "RTL",
Reason_removed == "paling" ~ "bleached",
Reason_removed == "bleaching" ~ "bleached"))  %>%
group_by(Species) %>%
summarise(count = n())
slowburn_metadata %>%
filter(Removed_Date >= "2022-06-21" | is.na(Removed_Date)) %>%
mutate(Removed_Date = ymd(Removed_Date)) %>%
mutate(mortality_date = ymd(mortality_date)) %>%
mutate(end_date = coalesce(Removed_Date, mortality_date)) %>% #if removed_date is NA, then look and use the date from mortality date
mutate(start_date="2022-06-25") %>%
mutate(start_date = ymd(start_date)) %>%
mutate(days_to_removed = end_date - start_date) %>%
mutate(Reason_removed = case_when(Reason_removed == "dead" ~ "RTL",
Reason_removed == "RTL" ~ "RTL",
Reason_removed == "paling" ~ "bleached",
Reason_removed == "bleaching" ~ "bleached"))  %>%
group_by(Species) %>%
summarise(count = n())
slowburn_metadata %>%
filter(Removed_Date >= "2022-06-21" | is.na(Removed_Date)) %>%
mutate(Removed_Date = ymd(Removed_Date)) %>%
mutate(mortality_date = ymd(mortality_date)) %>%
mutate(end_date = coalesce(Removed_Date, mortality_date)) %>% #if removed_date is NA, then look and use the date from mortality date
mutate(start_date="2022-06-25") %>%
mutate(start_date = ymd(start_date)) %>%
mutate(days_to_removed = end_date - start_date) %>%
mutate(Reason_removed = case_when(Reason_removed == "dead" ~ "RTL",
Reason_removed == "RTL" ~ "RTL",
Reason_removed == "paling" ~ "bleached",
Reason_removed == "bleaching" ~ "bleached"))  %>%
group_by(Species, Reason_removed) %>%
summarise(count = n())
slowburn_metadata %>%
filter(Removed_Date >= "2022-06-21" | is.na(Removed_Date)) %>%
mutate(Removed_Date = ymd(Removed_Date)) %>%
mutate(mortality_date = ymd(mortality_date)) %>%
mutate(end_date = coalesce(Removed_Date, mortality_date)) %>% #if removed_date is NA, then look and use the date from mortality date
mutate(start_date="2022-06-25") %>%
mutate(start_date = ymd(start_date)) %>%
mutate(days_to_removed = end_date - start_date) %>%
mutate(Reason_removed = case_when(Reason_removed == "dead" ~ "RTL",
Reason_removed == "RTL" ~ "RTL",
Reason_removed == "paling" ~ "bleached",
Reason_removed == "bleaching" ~ "bleached"))  %>%
group_by(Species, Treatment, Reason_removed) %>%
summarise(count = n())
