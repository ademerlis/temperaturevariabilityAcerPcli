# Basic PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_text(vjust = 2) +
xlab("Principal Component 1") +
ylab("Principal Component 2") +
ggtitle("PCA Plot")
pca_data
# Basic PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, label=Sample.ID, color = Treatment)) +
geom_point() +
geom_text(vjust = 2) +
xlab("Principal Component 1") +
ylab("Principal Component 2") +
ggtitle("PCA Plot")
# Basic PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, label=NA, color = Treatment)) +
geom_point() +
geom_text(vjust = 2) +
xlab("Principal Component 1") +
ylab("Principal Component 2") +
ggtitle("PCA Plot")
# Basic PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, label=NA, color = Treatment)) +
geom_point() +
geom_text(vjust = 2) +
xlab("Principal Component 1") +
ylab("Principal Component 2") +
theme_classic()
# Basic PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, label=NA, color = Treatment)) +
geom_point() +
geom_text(vjust = 2) +
theme_classic()
summary(pca_result)
pca_summary<-summary(pca_result)
percentVar_PC1 <- pca_summary$importance[2, "PC1"] * 100  # Proportion of variance for PC1
percentVar_PC2 <- pca_summary$importance[2, "PC2"] * 100  # Proportion of variance for PC2
percentVar_PC1_rounded <- round(percentVar_PC1, digits = 2)
percentVar_PC2_rounded <- round(percentVar_PC2, digits = 2)
# Basic PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, label=NA, color = Treatment)) +
geom_point(size=3) +
xlab(paste0("PC2: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC3: ",percentVar_PC2_rounded[2],"% variance")) +
ggtitle("Acervicornis") +
theme_classic() +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333"))
# Basic PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, label=NA, color = Treatment)) +
geom_point(size=3) +
xlab(paste0("PC2: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC3: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis") +
theme_classic() +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333"))
# Round the percentages for better readability
percentVar_PC1_rounded <- round(percentVar_PC1, digits = 2)
percentVar_PC1_rounded
# Round the percentages for better readability
percentVar_PC1_rounded <- round(percentVar_PC1, digits = 1)
percentVar_PC2_rounded <- round(percentVar_PC2, digits = 1)
# Basic PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, label=NA, color = Treatment)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis") +
theme_classic() +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333"))
# Round the percentages for better readability
percentVar_PC1_rounded <- round(percentVar_PC1)
percentVar_PC2_rounded <- round(percentVar_PC2)
# Basic PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, label=NA, color = Treatment)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis") +
theme_classic() +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333"))
ggsave("PCA_Acer_removebatcheffect.pdf")
# Calculate group centroids for polygons
centroids <- pca_data %>%
group_by(Treatment) %>%
summarise(PC1 = mean(PC1), PC2 = mean(PC2))
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_polygon(data = centroids, aes(x = PC1, y = PC2, fill = Treatment, group = Treatment),
alpha = 0.2, color = "black") +  # Draw polygons
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
theme_minimal() +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
pca_data
centroids
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point()
# Calculate group centroids for polygons
centroids <- pca_data %>%
group_by(Treatment) %>%
mutate(PC1 = mean(PC1), PC2 = mean(PC2))
centroids
# Calculate group centroids for polygons
centroids <- pca_data %>%
group_by(Treatment) %>%
mutate(PC1_centroid = mean(PC1), PC2_centroid = mean(PC2))
geom_polygon(data = centroids, aes(x = PC1_centroid, y = PC2_centroid, fill = Treatment, group = Treatment),
alpha = 0.2, color = "black") +  # Draw polygons
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
theme_minimal() +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_polygon(data = centroids, aes(x = PC1_centroid, y = PC2_centroid, fill = Treatment, group = Treatment),
alpha = 0.2, color = "black") +  # Draw polygons
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
theme_minimal() +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
# Calculate group centroids for polygons
centroids <- pca_data %>%
group_by(Treatment) %>%
summarise(PC1_centroid = mean(PC1), PC2_centroid = mean(PC2))
centroids
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_polygon(data = centroids, aes(x = PC1_centroid, y = PC2_centroid, fill = Treatment, group = Treatment),
alpha = 0.2, color = "black") +  # Draw polygons
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
theme_classic() +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_polygon(data = centroids, aes(x = PC1_centroid, y = PC2_centroid),
alpha = 0.2, color = "black") +  # Draw polygons
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
theme_classic() +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_polygon(data = centroids, aes(x = PC1_centroid, y = PC2_centroid),
alpha = 1, color = "black") +  # Draw polygons
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
theme_classic() +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
library(ggforce)
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_mark_hull(aes(fill=Treatment)) +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
theme_classic() +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_mark_hull(aes(fill=Treatment), expand = 0.1, alpha = 0.2) +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
theme_classic() +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_ellipse()
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_ellipse() +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
theme_classic() +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
stat_ellipse(aes(PC1, PC2, group=Treatment, lty = Treatment), type = "norm") +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
theme_classic() +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
theme_classic() +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_polygon(data = centroids, alpha = 0.2) +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
theme_classic() +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
centroids
# Calculate group centroids for polygons
centroids <- pca_data %>%
group_by(Treatment) %>%
summarise(PC1 = mean(PC1), PC1 = mean(PC2))
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_polygon(data = centroids, alpha = 0.2) +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
theme_classic() +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
# Calculate group centroids for polygons
centroids <- pca_data %>%
group_by(Treatment) %>%
summarise(PC1_centroid = mean(PC1), PC2_centroid = mean(PC2))
centroids
# Calculate group centroids for polygons
centroids <- pca_data %>%
group_by(Treatment) %>%
dplyr::summarise(PC1_centroid = mean(PC1), PC2_centroid = mean(PC2))
centroids
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_polygon(data = centroids, alpha = 0.2, aes(color=Treatment, fill=Treatment)) +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
theme_classic() +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
pca_data
centroids
# Calculate group centroids for polygons
centroids <- pca_data %>%
group_by(Treatment) %>%
dplyr::summarise(PC1 = mean(PC1), PC2 = mean(PC2))
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_polygon(data = centroids, alpha = 0.2, aes(color=Treatment, fill=Treatment)) +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
theme_classic() +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_polygon(data = centroids, alpha = 0.2, aes(color=Treatment, fill=Treatment)) +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_polygon(data = centroids) +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
# Calculate group centroids for polygons
centroids <- pca_data %>%
group_by(Treatment) %>%
dplyr::summarise(PC1.mean = mean(PC1), PC2.mean = mean(PC2))
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_polygon(data = centroids, alpha = 0.2, aes(color=Treatment, fill=Treatment)) +
geom_point(aes(x=PC1.mean, y=PC2.mean,color=Treatment), data=centroids, size=4, show.legend=FALSE) +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
#setting up data to add polygons
find_hull <- function(pca_data) pca_data[chull(pca_data$PC1, pca_data$PC2), ]
hulls <- ddply(pca_data, "Treatment", find_hull)
hulls
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_polygon(data = hulls, alpha = 0.2, aes(color=Treatment, fill=Treatment)) +
geom_point(aes(x=PC1.mean, y=PC2.mean,color=Treatment), data=centroids, size=4, show.legend=FALSE) +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_polygon(data = hulls, alpha = 0.2, aes(color=Treatment, fill=Treatment)) +
geom_point(aes(x=PC1.mean, y=PC2.mean,color=Treatment), data=centroids, show.legend=FALSE) +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis")
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_polygon(data = hulls, alpha = 0.2, aes(color=Treatment, fill=Treatment)) +
geom_point(aes(x=PC1.mean, y=PC2.mean,color=Treatment), data=centroids, show.legend=FALSE) +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis") +
theme_classic()
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
stat_ellipse(aes(PC1, PC2, group=Treatment, lty = Treatment), type = "norm") +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis") +
theme_classic()
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
stat_ellipse(aes(PC1, PC2, group=Treatment, lty = Treatment), type = "norm") +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis") +
theme_classic()
ggsave("PCA_Acer_removebatcheffect_withellipses.pdf", width = 10, height = 7)
ggplot(pca_data, aes(x = PC1, y = PC2, label=NA, color = Treatment)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis") +
theme_classic() +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333"))
ggsave("PCA_Acer_removebatcheffect.pdf",  width = 10, height = 7)
plotPCA(Vsd, intgroup = c("Treatment"))
plotPCA(Vsd, intgroup = c("Genotype"))
plotPCA(Vsd, intgroup = c("Treatment", "Genotype"))
vst_PCAdata <- plotPCA(Vsd, intgroup = c("Treatment", "Genotype"), returnData = TRUE)
percentVar <- round(100*attr(vst_PCAdata, "percentVar"))
g1 <- ggplot(vst_PCAdata, aes(PC1, PC2, color=Treatment, shape=Genotype)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("A.cervicornis") +
theme_classic() + #Set background color
theme(panel.border = element_blank(), # Set border
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) +
scale_color_manual(values = c("grey", "#FF3333", "#00CCCC"))
#ggsave("PCA_allgenets.pdf")
g1
# Basic PCA plot
g2<- ggplot(pca_data, aes(x = PC1, y = PC2, label=NA, color = Treatment)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis") +
theme_classic() +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333"))
combined_plot <- plot_grid(g1, g2 nrow = 2, ncol = 2)
combined_plot <- plot_grid(g1, g2)
print(combined_plot)
ggsave("combined_PCA_plot_batcheffect.pdf", combined_plot, width = 10, height = 7)
library(DESeq2)
library(tidyverse)
library(factoextra)
library(cowplot)
library(limma)
library(ggforce)
load("RData_files/initial_fullddsdesigncountsVsdcountsWGCNA.RData")
View(countData)
plotPCA(Vsd, intgroup = c("Treatment"))
plotPCA(Vsd, intgroup = c("Genotype"))
plotPCA(Vsd, intgroup = c("Treatment", "Genotype"))
vst_PCAdata <- plotPCA(Vsd, intgroup = c("Treatment", "Genotype"), returnData = TRUE)
percentVar <- round(100*attr(vst_PCAdata, "percentVar"))
g1 <- ggplot(vst_PCAdata, aes(PC1, PC2, color=Treatment, shape=Genotype)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("P. clivosa") +
theme_bw() + #Set background color
theme(panel.border = element_blank(), # Set border
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333"))
#ggsave("PCA_allgenets.pdf")
g1
g1 <- ggplot(vst_PCAdata, aes(PC1, PC2, color=Treatment, shape=Genotype)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("P. clivosa") +
theme_classic() + #Set background color
theme(panel.border = element_blank(), # Set border
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333"))
g1
vsd2 <- removeBatchEffect(assay(Vsd), batch = Vsd$Genotype)
pca_result <- prcomp(t(vsd2))  # Transpose matrix because prcomp expects observations in rows
pca_summary<-summary(pca_result)
percentVar_PC1 <- pca_summary$importance[2, "PC1"] * 100  # Proportion of variance for PC1
percentVar_PC2 <- pca_summary$importance[2, "PC2"] * 100  # Proportion of variance for PC2
# Round the percentages for better readability
percentVar_PC1_rounded <- round(percentVar_PC1)
percentVar_PC2_rounded <- round(percentVar_PC2)
# Create a data frame for ggplot
pca_data <- data.frame(PC1 = pca_result$x[,1], PC2 = pca_result$x[,2], Sample = rownames(pca_result$x))
design %>%
rownames_to_column("Sample") %>%
full_join(pca_data, design, by = "Sample") -> pca_data
pca_data
View(design)
ggplot(pca_data, aes(x = PC1, y = PC2, label=NA, color = Treatment)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis") +
theme_classic() +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333"))
# Basic PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, label=NA, color = Treatment)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Pclivosa") +
theme_classic() +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333"))
ggsave("PCA_Pclivosa_removebatcheffect.pdf",  width = 10, height = 7)
# Basic PCA plot
g2<-ggplot(pca_data, aes(x = PC1, y = PC2, label=NA, color = Treatment)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Pclivosa") +
theme_classic() +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333"))
#setting up data to add polygons
find_hull <- function(pca_data) pca_data[chull(pca_data$PC1, pca_data$PC2), ]
hulls <- ddply(pca_data, "Treatment", find_hull)
# Calculate group centroids for polygons
centroids <- pca_data %>%
group_by(Treatment) %>%
dplyr::summarise(PC1.mean = mean(PC1), PC2.mean = mean(PC2))
# Create the PCA plot
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
geom_polygon(data = hulls, alpha = 0.2, aes(color=Treatment, fill=Treatment)) +
geom_point(aes(x=PC1.mean, y=PC2.mean,color=Treatment), data=centroids, show.legend=FALSE) +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Pclivosa") +
theme_classic()
ggplot(pca_data, aes(x = PC1, y = PC2, color = Treatment)) +
geom_point() +
stat_ellipse(aes(PC1, PC2, group=Treatment, lty = Treatment), type = "norm") +
scale_fill_manual(values = c("grey", "#00CCCC", "#FF3333")) +
scale_color_manual(values = c("grey", "#00CCCC", "#FF3333")) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Pclivosa") +
theme_classic()
ggsave("PCA_Pclivosa_removebatcheffect_withellipses.pdf", width = 10, height = 7)
combined_plot <- plot_grid(g1, g2)
print(combined_plot)
ggsave("combined_PCA_plot_batcheffect.pdf", combined_plot, width = 10, height = 7)
