plot(scores[,1], scores[,2],col=c("grey","red","blue")[as.numeric(as.factor(conditions$Treatment))],pch=c(1,2,19)[as.numeric((as.factor(conditions$Genotype)))], xlab="Coordinate 1", ylab="Coordinate 2", main="Treatment")
ordispider(scores, conditions$Treatment, label=F, col=c("grey","red","blue"))
pdf(file="PCoA.pdf", width=12, height=6)
par(mfrow=c(1,2))
plot(scores[,1], scores[,2],col=c("grey","red","blue")[as.numeric(as.factor(conditions$Treatment))],pch=c(1,2,19)[as.numeric((as.factor(conditions$Genotype)))], xlab="Coordinate 1", ylab="Coordinate 2", main="Treatment")
ordispider(scores, conditions$Treatment, label=F, col=c("grey","red","blue"))
legend("topright", legend=c("Initial", "Treated", "Untreated"), fill = c("red","blue"), bty="n")
legend("topleft", legend=c("Day_0", "Day_29"), pch=c(1,19), bty="n")
plot(scores[,1], scores[,2],col=c("grey","black")[as.numeric(as.factor(conditions$time_point))],pch=c(15,17,25)[as.numeric((as.factor(conditions$Treatment)))], xlab="Coordinate 1", ylab="Coordinate 2", main="Time")
ordispider(scores, conditions$time, label=F, col=c("grey","black"))
legend("topleft", legend=c("Day_0", "Day_29"), fill = c("grey","black"), bty="n")
legend("topright", legend=c("Control", "Variable"), pch=c(15,17,25), bty="n")
dev.off()
pdf(file="PCoA.pdf", width=12, height=6)
par(mfrow=c(1,2))
plot(scores[,1], scores[,2],col=c("grey","red","blue")[as.numeric(as.factor(conditions$Treatment))],pch=c(15,17,25)[as.numeric((as.factor(conditions$Genotype)))], xlab="Coordinate 1", ylab="Coordinate 2", main="Treatment")
ordispider(scores, conditions$Treatment, label=F, col=c("grey","red","blue"))
legend("topright", legend=c("Initial", "Treated", "Untreated"), fill = c("grey","red","blue"), bty="n")
legend("topleft", legend=c("BC-8b", "MB-B", "SI-C"), pch=c(15,17,25), bty="n")
plot(scores[,1], scores[,2],col=c("darkgreen","orange", "black")[as.numeric(as.factor(conditions$Genotype))],pch=c(15,17,25)[as.numeric((as.factor(conditions$Treatment)))], xlab="Coordinate 1", ylab="Coordinate 2", main="Genotype")
ordispider(scores, conditions$Genotype, label=F, col=c("darkgreen","orange", "black"))
legend("topleft", legend=c("BC-8b", "MB-B", "SI-C"), fill = c("darkgreen","orange", "black"), bty="n")
legend("topright", legend=c("Initial", "Treated", "Untreated"), pch=c(15,17,25), bty="n")
dev.off()
pdf(file="PCoA_axes23.pdf", width=12, height=6)
par(mfrow=c(1,2))
plot(scores[,2], scores[,3],col=c("grey","red","blue")[as.numeric(as.factor(conditions$Treatment))],pch=c(15,17,25)[as.numeric((as.factor(conditions$Genotype)))], xlab="Coordinate 1", ylab="Coordinate 2", main="Treatment")
ordispider(scores[,2:3], conditions$Treatment, label=F, col=c("grey","red","blue"))
legend("topright", legend=c("Initial", "Treated", "Untreated"), fill = c("grey","red","blue"), bty="n")
legend("topleft", legend=c("BC-8b", "MB-B", "SI-C"), pch=c(15,17,25), bty="n")
plot(scores[,2], scores[,3],col=c("darkgreen","orange", "black")[as.numeric(as.factor(conditions$Genotype))],pch=c(15,17,25)[as.numeric((as.factor(conditions$Treatment)))], xlab="Coordinate 1", ylab="Coordinate 2", main="Genotype")
ordispider(scores[,2:3], conditions$Genotype, label=F, col=c("darkgreen","orange", "black"))
legend("topleft", legend=c("BC-8b", "MB-B", "SI-C"), fill = c("darkgreen","orange", "black"), bty="n")
legend("topright", legend=c("Initial", "Treated", "Untreated"), pch=c(15,17,25), bty="n")
dev.off()
pdf(file="PCoA_tree.pdf", width=10, height=10)
tre=nj(dist(scores[,1:4]))
plot(tre,cex=0.8)
dev.off()
rownames(conditions) = snames
rownames(conditions)
conditions
ad=adonis2(t(vsd)~Genotype + Treatment,data=conditions,method="manhattan",permutations=1e6)
ad
summary(ad)
as.data.frame(ad)
ad
as.data.frame(ad)
cols=c("blue","orange","lightblue","grey80")
pdf(file="ANOVA_pie.pdf", width=6, height=6)
pie(ad$R2[1:4],labels=row.names(as.data.frame(ad)),col=cols,main="Genotype vs treatment")
dev.off()
library(BiocParallel)
rownames(design)
colnames(countData)
dds=DESeq(dds, parallel=TRUE)
# saving all models
save(dds,file="Rdata_files/realModels_Acer.RData")
# treatment
Treatment=results(dds)
summary(Treatment)
resultsNames(dds)
degs_treatment=row.names(Treatment)[Treatment$padj<0.1 & !(is.na(Treatment$padj))]
#list of gene names that are significant at p < 0.1
length(degs_treatment_time) #12,836 genes
#list of gene names that are significant at p < 0.1
length(degs_treatment) #12,836 genes
# Treated vs. Untreated
treated_v_untreated=results(dds, contrast=c("Treatment", "Treated", "Untreated"))
summary(treated_v_untreated)
summary(Treatment)
summary(treated_v_untreated)
treated_v_initial=results(dds, contrast=c("Treatment", "Treated", "Initial"))
summary(treated_v_initial)
# Untreated vs. Initial
untreated_v_initial=results(dds, contrast=c("Treatment", "Untreated", "Initial"))
summary(untreated_v_initial)
# Untreated vs. Initial
Treatment_Untreated_vs_Initial=results(dds,contrast=c("Treatment","Untreated","Initial"))
summary(Treatment_Untreated_vs_Initial)
degs_Treatment_Untreated_vs_Initial=row.names(Treatment_Untreated_vs_Initial)[Treatment_Untreated_vs_Initial$padj<0.1 & !(is.na(Treatment_Untreated_vs_Initial$padj))]
length(degs_Treatment_Untreated_vs_Initial)
# Treated vs. Initial
Treatment_Treated_vs_Initial=results(dds,contrast=c("Treatment","Treated","Initial"))
summary(Treatment_Treated_vs_Initial)
degs_Treatment_Treated_vs_Initial=row.names(Treatment_Treated_vs_Initial)[Treatment_Treated_vs_Initial$padj<0.1 & !(is.na(Treatment_Treated_vs_Initial$padj))]
length(degs_Treatment_Treated_vs_Initial)
# Treated vs. Untreated
Treatment_Treated_vs_Untreated=results(dds,contrast=c("Treatment","Treated","Untreated"))
summary(Treatment_Treated_vs_Untreated)
degs_Treatment_Treated_vs_Untreated=row.names(Treatment_Treated_vs_Untreated)[Treatment_Treated_vs_Untreated$padj<0.1 & !(is.na(Treatment_Treated_vs_Untreated$padj))]
length(degs_Treatment_Treated_vs_Untreated)
save(Treatment,Treatment_Untreated_vs_Initial,Treatment_Treated_vs_Initial,Treatment_Treated_vs_Untreated, degs_Treatment_Untreated_vs_Initial,degs_Treatment_Treated_vs_Initial, degs_Treatment_Treated_vs_Untreated, file="Rdata_files/pvals.RData")
means=apply(vsd,1,mean)
pdf(file="DEG_density_Treatment.pdf", height=5, width=5)
plot(density(means))
lines(density(means[degs_Treatment_Untreated_vs_Initial]),col="blue")
lines(density(means[degs_Treatment_Treated_vs_Initial]),col="orange")
lines(density(means[degs_Treatment_Treated_vs_Untreated]),col="lightblue")
legend("topright", title = "Factor",
legend=c("Untreated_vs_Initial","variable0_control0","variable0_variable29","control0_control29"),
fill = c("blue","orange","lightblue"))
dev.off()
dev.off()
dev.off()
dev.off()
pdf(file="DEG_density_Treatment.pdf", height=5, width=5)
plot(density(means))
lines(density(means[degs_Treatment_Untreated_vs_Initial]),col="blue")
lines(density(means[degs_Treatment_Treated_vs_Initial]),col="orange")
lines(density(means[degs_Treatment_Treated_vs_Untreated]),col="lightblue")
legend("topright", title = "Factor",
legend=c("Untreated_vs_Initial","Treated_vs_Initial","Treated_vs_Untreated"),
fill = c("blue","orange","lightblue"))
dev.off()
pairwise=list("Untreated vs. Initial"=degs_Treatment_Untreated_vs_Initial, "Treated vs. Initial"=degs_Treatment_Treated_vs_Initial,"Treated vs. Untreated"=degs_Treatment_Treated_vs_Untreated)
# install.packages("VennDiagram")
library(VennDiagram)
# treatment/time contrasts
venn = venn.diagram(
x = pairwise,  # make sure this contains only three sets
filename = NULL,
col = "transparent",
fill = c("#ca0020", "#0571b0", "#f4a582"),  # three colors, one for each set
alpha = 0.5,
label.col = c("red3", "white", "cornflowerblue", "black", "white", "white", "black"),  # colors for each of the 7 regions
cex = 3.5,
fontfamily = "sans",
fontface = "bold",
cat.default.pos = "text",
cat.col = c("darkred", "darkblue", "red3"),  # three category colors
cat.cex = 3.5,
cat.fontfamily = "sans",
cat.just = list(c(0, 0.5), c(0.75, 0.5), c(0.5, 0.5))  # adjust positions for three categories
)
pdf(file="Venn_Acer.pdf", height=10, width=12)
grid.draw(venn)
dev.off()
library(ggvenn)
ggvenn(pairwise) +
scale_fill_manual(values = c("#ca0020", "#0571b0", "#f4a582"))
source=Treatment_Untreated_vs_Initial[!is.na(Treatment_Untreated_vs_Initial$padj),]
Untreated_vs_Initial.fc=data.frame("gene"=row.names(source))
Untreated_vs_Initial.fc$lfc=source[,"log2FoldChange"]
head(Untreated_vs_Initial.fc)
write.csv(Untreated_vs_Initial.fc,file="results_csv/Untreated_vs_Initial_fc.csv",row.names=F,quote=F)
source=Treatment_Untreated_vs_Initial[!is.na(Treatment_Untreated_vs_Initial$padj),]
Untreated_vs_Initial.fc=data.frame("gene"=row.names(source))
Untreated_vs_Initial.fc$lfc=source[,"log2FoldChange"]
head(Untreated_vs_Initial.fc)
write.csv(Untreated_vs_Initial.fc,file="Untreated_vs_Initial_fc.csv",row.names=F,quote=F)
save(Untreated_vs_Initial.fc,file="Rdata_files/Untreated_vs_Initial.fc.RData")
Untreated_vs_Initial.p=data.frame("gene"=row.names(source))
Untreated_vs_Initial.p$lpv=-log(source[,"padj"],10)
Untreated_vs_Initial.p$lpv[source$stat<0]=Untreated_vs_Initial.p$lpv[source$stat<0]*-1
head(Untreated_vs_Initial.p)
write.csv(Untreated_vs_Initial.p,file="Untreated_vs_Initial_lpv.csv",row.names=F,quote=F)
save(Untreated_vs_Initial.p,file="Rdata_files/Untreated_vs_Initial_lpv.RData")
source=Treatment_Treated_vs_Initial[!is.na(Treatment_Treated_vs_Initial$padj),]
Treated_vs_Initial.fc=data.frame("gene"=row.names(source))
Treated_vs_Initial.fc$lfc=source[,"log2FoldChange"]
head(Treated_vs_Initial.fc)
write.csv(Treated_vs_Initial.fc,file="Treated_vs_Initial_fc.csv",row.names=F,quote=F)
save(Treated_vs_Initial.fc,file="Rdata_files/Treated_vs_Initial_fc.RData")
Treated_vs_Initial.p=data.frame("gene"=row.names(source))
Treated_vs_Initial.p$lpv=-log(source[,"padj"],10)
Treated_vs_Initial.p$lpv[source$stat<0]=Treated_vs_Initial.p$lpv[source$stat<0]*-1
head(Treated_vs_Initial.p)
write.csv(Treated_vs_Initial.p,file="Treated_vs_Initial_lpv.csv",row.names=F,quote=F)
save(Treated_vs_Initial.p,file="Rdata_files/Treated_vs_Initial_lpv.RData")
source=Treatment_Treated_vs_Untreated[!is.na(Treatment_Treated_vs_Untreated$padj),]
Treated_vs_Untreated.fc=data.frame("gene"=row.names(source))
Treated_vs_Untreated.fc$lfc=source[,"log2FoldChange"]
head(Treated_vs_Untreated.fc)
write.csv(Treated_vs_Untreated.fc,file="Treated_vs_Untreated_fc.csv",row.names=F,quote=F)
save(Treated_vs_Untreated.fc,file="Rdata_files/Treated_vs_Untreated_fc.RData")
Treated_vs_Untreated.p=data.frame("gene"=row.names(source))
Treated_vs_Untreated.p$lpv=-log(source[,"padj"],10)
Treated_vs_Untreated.p$lpv[source$stat<0]=Treated_vs_Untreated.p$lpv[source$stat<0]*-1
head(Treated_vs_Untreated.p)
write.csv(Treated_vs_Untreated.p,file="Treated_vs_Untreated_lpv.csv",row.names=F,quote=F)
save(Treated_vs_Untreated.p,file="Rdata_files/Treated_vs_Untreated_lpv.RData")
#install.packages("KOGMWU")
library(KOGMWU)
# loading KOG annotations
gene2kog=read.table("bioinformatics/Acervicornis_iso2kogClass.tab",sep="\t", fill=T) #iso2kogClass.tab not iso2kogClass1.tab because that file has an "error" when you try to view it using the terminal
# loading KOG annotations
gene2kog=read.table("bioinformatics/Acervicornis_iso2kogClass.tab",sep="\t", fill=T) #iso2kogClass.tab not iso2kogClass1.tab because that file has an "error" when you try to view it using the terminal
head(gene2kog)
load("RData_files/pvals.RData")
load("RData_files/Treated_vs_Initial_lpv.RData") #Treated_vs_Initial.p dataset
lpv.Treated_vs_Initial=kog.mwu(Treated_vs_Initial.p,gene2kog)
load("RData_files/Treated_vs_Untreated_lpv.RData") #Treated_vs_Untreated.p dataset
lpv.Treated_vs_Untreated=kog.mwu(Treated_vs_Untreated.p,gene2kog)
load("RData_files/Untreated_vs_Initial_lpv.RData") #Treated_vs_Untreated.p dataset
lpv.Untreated_vs_Initial=kog.mwu(Untreated_vs_Initial.p,gene2kog)
# compiling a table of delta-ranks to compare these results:
ktable=makeDeltaRanksTable(list("Treated_vs_Initial"=lpv.Treated_vs_Initial, "Treated_vs_Untreated"=lpv.Treated_vs_Untreated, "Untreated_vs_Initial"=lpv.Untreated_vs_Initial))
library(RColorBrewer)
color = colorRampPalette(rev(c(brewer.pal(n = 7, name ="RdBu"),"royalblue","darkblue")))(100)
# Making a heatmap with hierarchical clustering trees:
pdf(file="plots/KOG_Acer_host_lpv.pdf", width=7, height=8)
pheatmap(as.matrix(ktable),clustering_distance_cols="correlation",color=color, cellwidth=15, cellheight=15, border_color="white")
while (!is.null(dev.list()))  dev.off()
pairs(ktable, lower.panel = panel.smooth, upper.panel = panel.cor)
#scatterplots between pairs
# p-values of these correlations in the upper panel:
pairs(ktable, lower.panel = panel.smooth, upper.panel = panel.cor.pval)
load("RData_files/Treated_vs_Initial_fc.RData")
fc.Treated_vs_Initial=kog.mwu(Treated_vs_Initial.fc,gene2kog)
load("RData_files/Treated_vs_Untreated_fc.RData")
fc.Treated_vs_Untreated=kog.mwu(Treated_vs_Untreated.fc,gene2kog)
load("RData_files/Untreated_vs_Initial.fc.RData")
fc.Untreated_vs_Initial=kog.mwu(Untreated_vs_Initial.fc,gene2kog)
# compiling a table of delta-ranks to compare these results:
ktable=makeDeltaRanksTable(list("Treated_vs_Initial"=fc.Treated_vs_Initial, "Treated_vs_Untreated"=fc.Treated_vs_Untreated, "Untreated_vs_Initial"=fc.Untreated_vs_Initial))
color = colorRampPalette(rev(c(brewer.pal(n = 7, name ="RdBu"),"royalblue","darkblue")))(100)
pdf(file="KOG_Acer_host_fc.pdf", width=7, height=8)
pheatmap(as.matrix(ktable),clustering_distance_cols="correlation",color=color, cellwidth=15, cellheight=15, border_color="white")
while (!is.null(dev.list()))  dev.off()
pheatmap(as.matrix(ktable),clustering_distance_cols="correlation",color=color, cellwidth=15, cellheight=15, border_color="white")
library(tidyverse)
library(VennDiagram)
library(pheatmap)
library(reshape2)
library(RColorBrewer)
load("RData_files/pvals.RData")
load("RData_files/Treated_vs_Initial_lpv.RData")
Treated_vs_Initial.p <- Treated_vs_Initial.p %>% dplyr::rename("lpv_Treated_vs_Initial" = lpv)
str(Treated_vs_Initial.p) #16,333 genes
load("RData_files/Untreated_vs_Initial_lpv.RData")
Untreated_vs_Initial.p <- Untreated_vs_Initial.p %>% dplyr::rename("lpv_Untreated_vs_Initial" = lpv)
str(Untreated_vs_Initial.p)
load("RData_files/Treated_vs_Untreated_lpv.RData")
Treated_vs_Untreated.p <- Treated_vs_Untreated.p %>% dplyr::rename("lpv_Treated_vs_Untreated" = lpv)
str(Treated_vs_Untreated.p)
# first see if there are any shared genes with Treated_vs_Initial and Untreated_vs_Initial
Treated_vs_Initial.p %>%
inner_join(Untreated_vs_Initial.p, by = "gene") %>%
filter(abs(lpv_Treated_vs_Initial) >= 1 & abs(lpv_Untreated_vs_Initial) >= 1) %>%
left_join(read.table(file = "bioinformatics/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = "gene") %>%
left_join(read.table(file = "bioinformatics/Acervicornis_iso2kogClass.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> TreatedvInitial_vs_UntreatedvInitial
str(TreatedvInitial_vs_UntreatedvInitial)
unique_sig_TreatedvInitial <- Treated_vs_Initial.p %>% filter(abs(lpv_Treated_vs_Initial) >= 1) %>% anti_join(., Untreated_vs_Initial.p)
str(unique_sig_TreatedvInitial) #0 genes
unique_sig_Untreated_vs_Initial <- Untreated_vs_Initial.p %>% filter(abs(lpv_Untreated_vs_Initial) >= 1) %>% anti_join(., Treated_vs_Initial.p)
str(unique_sig_Untreated_vs_Initial )#4 genes
Treated_vs_Untreated.p %>%
inner_join(Untreated_vs_Initial.p, by = "gene") %>%
filter(abs(lpv_Treated_vs_Untreated) >= 1 & abs(lpv_Untreated_vs_Initial) >= 1) %>%
left_join(read.table(file = "bioinformatics/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = "gene") %>%
left_join(read.table(file = "bioinformatics/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> TreatedvUntreated_vs_UntreatedvInitial
str(TreatedvUntreated_vs_UntreatedvInitial)
unique_sig_TreatedvUntreated <- Treated_vs_Untreated.p %>% filter(abs(lpv_Treated_vs_Untreated) >= 1) %>% anti_join(., Untreated_vs_Initial.p)
str(unique_sig_TreatedvUntreated) #0 genes
unique_sig_UntreatedvInitial <- Untreated_vs_Initial.p %>% filter(abs(lpv_Untreated_vs_Initial) >= 1) %>% anti_join(., Treated_vs_Untreated.p)
str(unique_sig_UntreatedvInitial )#0 genes
Untreated_vs_Initial.p %>%
filter(abs(lpv_Untreated_vs_Initial) >= 1) %>%
select(gene) -> Untreated_vs_Initial_sig
Treated_vs_Initial.p %>%
filter(abs(lpv_Treated_vs_Initial) >= 1)  %>%
select(gene)-> Treated_vs_Initial_sig
Treated_vs_Untreated.p %>%
filter(abs(lpv_Treated_vs_Untreated) >= 1)  %>%
select(gene)-> Treated_vs_Untreated_sig
pairwise=list("Untreated_vs_Initial"=Untreated_vs_Initial_sig, "Treated_vs_Initial"=Treated_vs_Initial_sig,"Treated_vs_Untreated"=Treated_vs_Untreated_sig)
find_common_elements <- function(lst) {
common_elements <- lst[[1]]
for (vec in lst[-1]) {
common_elements <- intersect(common_elements, vec)
}
return(common_elements)
}
# Find common elements
common_elements <- find_common_elements(pairwise)
common_elements
str(common_elements)
library(ggvenn)
ggvenn(pairwise) +
scale_fill_manual(values = c("#ca0020", "#0571b0", "#f4a582"))
Treated_vs_Untreated_sig
pairwise=list("Untreated_vs_Initial"=Untreated_vs_Initial.p, "Treated_vs_Initial"=Treated_vs_Initial.p,"Treated_vs_Untreated"=Treated_vs_Untreated.p)
ggvenn(pairwise) +
scale_fill_manual(values = c("#ca0020", "#0571b0", "#f4a582"))
View(pairwise)
find_common_elements <- function(lst) {
common_elements <- lst[[1]]
for (vec in lst[-1]) {
common_elements <- intersect(common_elements, vec)
}
return(common_elements)
}
# Find common elements
common_elements <- find_common_elements(pairwise)
load("RData_files/pvals.RData")
pairwise=list("Untreated vs. Initial"=degs_Treatment_Untreated_vs_Initial, "Treated vs. Initial"=degs_Treatment_Treated_vs_Initial,"Treated vs. Untreated"=degs_Treatment_Treated_vs_Untreated)
ggvenn(pairwise) +
scale_fill_manual(values = c("#ca0020", "#0571b0", "#f4a582"))
degs_Treatment_Untreated_vs_Initial
Treated_vs_Untreated.p %>% filter(abs(lpv_Treated_vs_Untreated) >= 1)
quote="", fill=FALSE)
common_elements %>%
left_join(read.table(file = "bioinformatics/Acervicornis_iso2kogClass.tab",
sep = "\t",
quote="", fill=FALSE))
common_elements
common_elements %>%
left_join(read.table(file = "bioinformatics/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene")
common_elements %>%
left_join(read.table(file = "bioinformatics/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> common_genes_KOG_annotations
View(common_genes_KOG_annotations)
write_csv(common_genes_KOG_annotations, "common_genes_KOG_annotations.csv")
write_csv(TreatedvInitial_vs_UntreatedvInitial, "TreatedvInitial_vs_UntreatedvInitial_sharedgenes.csv")
Treated_vs_Initial.p %>% anti_join(., Untreated_vs_Initial.p)
View(Treated_vs_Initial.p)
View(Treated_vs_Initial_sig)
write_csv(TreatedvUntreated_vs_UntreatedvInitial, "TreatedvUntreated_vs_UntreatedvInitial_common_genes.csv")
View(pairwise)
pairwise=list("Untreated_vs_Initial"=Untreated_vs_Initial_sig, "Treated_vs_Initial"=Treated_vs_Initial_sig,"Treated_vs_Untreated"=Treated_vs_Untreated_sig)
# Find common elements
common_elements <- find_common_elements(pairwise)
str(common_elements) #640 genes
find_unique_elements <- function(lst) {
# Combine all elements from all vectors into one vector
all_elements <- unlist(lst)
# Find unique elements by checking if each element appears exactly once
unique_elements <- all_elements[!duplicated(all_elements) & !duplicated(all_elements, fromLast = TRUE)]
return(unique_elements)
}
unqiue_elements <- find_unique_elements(pairwise)
str(unqiue_elements)
UntreatedvsInitial_vs_TreatedvsInitial=list("Untreated_vs_Initial"=Untreated_vs_Initial_sig, "Treated_vs_Initial"=Treated_vs_Initial_sig)
unqiue_elements <- find_unique_elements(UntreatedvsInitial_vs_TreatedvsInitial)
str(unqiue_elements)
unique_Untreated_vs_Initial <- setdiff(Untreated_vs_Initial_sig, Treated_vs_Initial_sig)
View(unique_Untreated_vs_Initial)
unique_Untreated_vs_Initial <- setdiff(unique_Untreated_vs_Initial, Treated_vs_Untreated_sig)
unique_Untreated_vs_Initial %>%
left_join(read.table(file = "bioinformatics/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> unique_Untreated_vs_Initial_annotated
View(unique_Untreated_vs_Initial_annotated)
write_csv(unique_Untreated_vs_Initial_annotated, "unique_Untreated_vs_Initial_annotated.csv")
unique_Treated_vs_Initial <- setdiff(Treated_vs_Initial_sig, Treated_vs_Initial_sig)
unique_Treated_vs_Initial <- setdiff(unique_Treated_vs_Initial, Treated_vs_Untreated_sig)
unique_Treated_vs_Initial <- setdiff(Treated_vs_Initial_sig, Untreated_vs_Initial_sig)
unique_Treated_vs_Initial <- setdiff(unique_Treated_vs_Initial, Treated_vs_Untreated_sig)
unique_Treated_vs_Initial %>%
left_join(read.table(file = "bioinformatics/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> unique_Treated_vs_Initial_annotated
write_csv(unique_Treated_vs_Initial_annotated, "unique_Treated_vs_Initial_annotated.csv")
View(unique_Treated_vs_Initial)
View(unique_Treated_vs_Initial)
unique_Treated_vs_Untreated <- setdiff(Treated_vs_Untreated_sig, Untreated_vs_Initial_sig)
unique_Treated_vs_Untreated <- setdiff(unique_Treated_vs_Untreated, Treated_vs_Initial_sig)
unique_Treated_vs_Untreated %>%
left_join(read.table(file = "bioinformatics/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> unique_Treated_vs_Untreated_annotated
write_csv(unique_Treated_vs_Untreated_annotated, "unique_Treated_vs_Untreated_annotated.csv")
setwd("~/Library/CloudStorage/OneDrive-UniversityofMiami/GitHub/Ch2_temperaturevariability2023/gene_expression/Pclivosa")
load("Rdata_files/pvals.RData")
pairwise=list("Untreated_vs_Initial"=degs_Treatment_Untreated_vs_Initial, "Treated_vs_Initial"=degs_Treatment_Treated_vs_Initial,"Treated_vs_Untreated"=degs_Treatment_Treated_vs_Untreated)
ggvenn(pairwise) +
scale_fill_manual(values = c("#ca0020", "#0571b0", "#f4a582"))
#13 shared genes
write_csv(TreatedvUntreated_vs_UntreatedvInitial, "TreatedvUntreated_vs_UntreatedvInitial_sharedgenes.csv")
library(tidyverse)
library(VennDiagram)
library(pheatmap)
library(reshape2)
library(RColorBrewer)
#### DESEQ IMPORT ####
load("RData_files/pvals.RData")
load("RData_files/Treated_vs_Initial_lpv.RData")
Treated_vs_Initial.p <- Treated_vs_Initial.p %>% dplyr::rename("lpv_Treated_vs_Initial" = lpv)
str(Treated_vs_Initial.p) #16,333 genes
load("RData_files/Untreated_vs_Initial_lpv.RData")
Untreated_vs_Initial.p <- Untreated_vs_Initial.p %>% dplyr::rename("lpv_Untreated_vs_Initial" = lpv)
str(Untreated_vs_Initial.p) #17,662 genes
load("RData_files/Treated_vs_Untreated_lpv.RData")
Treated_vs_Untreated.p <- Treated_vs_Untreated.p %>% dplyr::rename("lpv_Treated_vs_Untreated" = lpv)
str(Treated_vs_Untreated.p) #17,662 genes
# first see if there are any shared genes with Treated_vs_Initial and Untreated_vs_Initial
Treated_vs_Initial.p %>%
inner_join(Untreated_vs_Initial.p, by = "gene") %>%
filter(abs(lpv_Treated_vs_Initial) >= 1 & abs(lpv_Untreated_vs_Initial) >= 1) %>%
left_join(read.table(file = "bioinformatics/Pclivosa_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = "gene") %>%
left_join(read.table(file = "bioinformatics/Pclivosa_iso2kogClass.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> TreatedvInitial_vs_UntreatedvInitial
str(TreatedvInitial_vs_UntreatedvInitial)
#there are 58 shared genes (cut-off is p-adj of 0.1)
write_csv(TreatedvInitial_vs_UntreatedvInitial, "TreatedvInitial_vs_UntreatedvInitial_sharedgenes.csv")
Treated_vs_Untreated.p %>%
inner_join(Untreated_vs_Initial.p, by = "gene") %>%
filter(abs(lpv_Treated_vs_Untreated) >= 1 & abs(lpv_Untreated_vs_Initial) >= 1) %>%
left_join(read.table(file = "bioinformatics/Pclivosa_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = "gene") %>%
left_join(read.table(file = "bioinformatics/Pclivosa_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> TreatedvUntreated_vs_UntreatedvInitial
str(TreatedvUntreated_vs_UntreatedvInitial)
#13 shared genes
write_csv(TreatedvUntreated_vs_UntreatedvInitial, "TreatedvUntreated_vs_UntreatedvInitial_sharedgenes.csv")
Untreated_vs_Initial.p %>%
filter(abs(lpv_Untreated_vs_Initial) >= 1) %>%
select(gene) -> Untreated_vs_Initial_sig
Treated_vs_Initial.p %>%
filter(abs(lpv_Treated_vs_Initial) >= 1)  %>%
select(gene)-> Treated_vs_Initial_sig
Treated_vs_Untreated.p %>%
filter(abs(lpv_Treated_vs_Untreated) >= 1)  %>%
select(gene)-> Treated_vs_Untreated_sig
pairwise=list("Untreated_vs_Initial"=Untreated_vs_Initial_sig, "Treated_vs_Initial"=Treated_vs_Initial_sig,"Treated_vs_Untreated"=Treated_vs_Untreated_sig)
# Function to find common elements in a list of vectors
find_common_elements <- function(lst) {
common_elements <- lst[[1]]
for (vec in lst[-1]) {
common_elements <- intersect(common_elements, vec)
}
return(common_elements)
}
# Find common elements
common_elements <- find_common_elements(pairwise)
common_elements
unique_Untreated_vs_Initial <- setdiff(Untreated_vs_Initial_sig, Treated_vs_Initial_sig)
unique_Untreated_vs_Initial <- setdiff(unique_Untreated_vs_Initial, Treated_vs_Untreated_sig)
unique_Untreated_vs_Initial %>%
left_join(read.table(file = "bioinformatics/Pclivosa_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> unique_Untreated_vs_Initial_annotated
write_csv(unique_Untreated_vs_Initial_annotated, "unique_Untreated_vs_Initial_annotated.csv")
unique_Treated_vs_Initial <- setdiff(Treated_vs_Initial_sig, Untreated_vs_Initial_sig)
unique_Treated_vs_Initial <- setdiff(unique_Treated_vs_Initial, Treated_vs_Untreated_sig)
unique_Treated_vs_Initial %>%
left_join(read.table(file = "bioinformatics/Pclivosa_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> unique_Treated_vs_Initial_annotated
write_csv(unique_Treated_vs_Initial_annotated, "unique_Treated_vs_Initial_annotated.csv")
unique_Treated_vs_Untreated <- setdiff(Treated_vs_Untreated_sig, Untreated_vs_Initial_sig)
unique_Treated_vs_Untreated <- setdiff(unique_Treated_vs_Untreated, Treated_vs_Initial_sig)
unique_Treated_vs_Untreated %>%
left_join(read.table(file = "bioinformatics/Pclivosa_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> unique_Treated_vs_Untreated_annotated
write_csv(unique_Treated_vs_Untreated_annotated, "unique_Treated_vs_Untreated_annotated.csv")
