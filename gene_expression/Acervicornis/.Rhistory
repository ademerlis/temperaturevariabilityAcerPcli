#read in counts
counts = read.delim("final_counts_matrix.txt")
View(counts)
library(DESeq2)
library(arrayQualityMetrics)
library(tidyverse)
column_to_rownames(counts, var ="X") -> counts
View(counts)
# how many genes we have total?
nrow(counts) #57358
ncol(counts) #48 samples
# how does the data look?
head(counts)
counts %>%
select(!X.1) -> counts
# how does the data look?
head(counts)
colnames(counts) # sample IDs (i.e. Acer-005). You need to keep track of column names and row names of data frames throughout this analysis because they MUST MATCH
rownames(counts) #gene names (but not actual gene names, arbitrary gene names like Acropora000001. To get "actual" gene names, need annotation files)
# filtering out low-count genes
keep <- rowSums(counts) >= 10
countData <- counts[keep,]
nrow(countData) #47882
ncol(countData) #48
write.csv(countData, file = "Acer_countdata.csv")
# for WCGNA: removing all genes with counts of <10 in more than 90 % of samples
counts4wgcna = counts[apply(counts,1,function(x) sum(x<10))<ncol(counts)*0.9,]
nrow(counts4wgcna) #27829
ncol(counts4wgcna) #48
write.csv(counts4wgcna, file="Acer_counts4wgcna.csv")
colnames(counts4wgcna) #still same sample ID names "Acer-005" etc
# importing a design .csv file
design = read.csv("../treatment_metadata.csv", head=TRUE)
View(design)
column_to_rownames(design, var="Sample_ID") -> design
design$Genotype <- as.factor(design$Genotype)
design$Genotype <- factor(gsub("-", "_", design$Genotype)) #DESeq2 does not like hyphens in factor names
design$Treatment <- as.factor(design$Treatment)
colnames(design) #"Species"   "Genotype"   "Sample.ID"  "Date.Sampled" "Experiment.phase" "Treatment"   "time_point"  "group"
# make big dataframe including all factors and interaction, getting normalized data for outlier detection
dds = DESeqDataSetFromMatrix(countData=countData, colData=design, design=~ Genotype + Treatment)
View(design)
design %>%
filter(Species == "Acervicornis") -> design
# importing a design .csv file
design = read.csv("../treatment_metadata.csv", head=TRUE)
design %>%
filter(Species == "Acer") -> design
design %>%
select(!Species) -> design
column_to_rownames(design, var="Sample_ID") -> design
design$Genotype <- as.factor(design$Genotype)
design$Genotype <- factor(gsub("-", "_", design$Genotype)) #DESeq2 does not like hyphens in factor names
design$Treatment <- as.factor(design$Treatment)
# make big dataframe including all factors and interaction, getting normalized data for outlier detection
dds = DESeqDataSetFromMatrix(countData=countData, colData=design, design=~ Genotype + Treatment)
# importing a design .csv file
design = read.csv("../treatment_metadata.csv", head=TRUE)
View(design)
# importing a design .csv file
design = read.csv("../treatment_metadata.csv", head=TRUE)
View(design)
