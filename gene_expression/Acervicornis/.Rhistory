scale_colour_gradient(low="blue", high="red") +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
plot_grid(p1, p2, p3, ncol = 1)
knitr::opts_chunk$set(echo = TRUE)
library(KEGGREST)
library(tidyverse)
library(pathview)
library(clusterProfiler)
library(enrichplot)
library(cowplot)
library(DESeq2)
library(arrayQualityMetrics)
library(tidyverse)
#read in counts
counts = read.delim("final_counts_matrix.txt")
library(EnhancedVolcano)
library(tidyverse)
load("../RData_files/pvals.RData")
unique_TU <- read_csv("../results_csv/unique_Treated_vs_Untreated_annotated_05.csv")
unique_TU
as.data.frame(Treatment_Treated_vs_Untreated) %>%
rownames_to_column(var="gene")
unique_TU
as.data.frame(Treatment_Treated_vs_Untreated) %>%
rownames_to_column(var="gene") %>%
right_join(., unique_TU)
as.data.frame(Treatment_Treated_vs_Untreated) %>%
rownames_to_column(var="gene") %>%
right_join(., unique_TU) -> unique_TU_allinfo
keyvals <- ifelse(
unique_TU_allinfo$log2FoldChange < 0 & unique_TU_allinfo$padj < 0.05, 'royalblue',
ifelse(unique_TU_allinfo$log2FoldChange > 0 & unique_TU_allinfo$padj < 0.05, 'red',
'grey'))
keyvals[is.na(keyvals)] <- 'grey'
names(keyvals)[keyvals == 'red'] <- 'significantly high (padj < 0.05 and L2FC > 0)'
names(keyvals)[keyvals == 'grey'] <- 'L2FC=0 and padj > 0.05'
names(keyvals)[keyvals == 'royalblue'] <- 'significantly low (padj < 0.05 and L2FC < 0)'
EnhancedVolcano(unique_TU_allinfo,
title = "Untreated vs. Treated",
lab = NA,
x = 'log2FoldChange',
y = 'padj',
ylab = bquote(~-Log[10]~ 'FDR P-adjusted'),
legendPosition = 'right',
pCutoff = 10e-2,
FCcutoff = 0.25,
legendIconSize = 5.0,
labSize = 6.0,
colCustom = keyvals,
colAlpha = 0.5)
pdf(file="volcano_Untreated_vs_Treated_unique.pdf", width = 12, height = 6)
EnhancedVolcano(unique_TU_allinfo,
title = "Untreated vs. Treated",
lab = NA,
x = 'log2FoldChange',
y = 'padj',
ylab = bquote(~-Log[10]~ 'FDR P-adjusted'),
legendPosition = 'right',
pCutoff = 10e-2,
FCcutoff = 0.25,
legendIconSize = 5.0,
labSize = 6.0,
colCustom = keyvals,
colAlpha = 0.5)
unique_TU <- read_csv("../results_csv/unique_Treated_vs_Untreated_annotated.csv")
unique_TU
library(DESeq2)
library(tidyverse)
library(factoextra)
library(cowplot)
library(limma)
library(ggforce)
load("RData_files/initial_fullddsdesigncountsVsdcountsWGCNA.RData")
pca <- prcomp(t(assay(Vsd)))
summary(pca)
fviz_eig(pca)
plotPCA(Vsd, intgroup = c("Treatment"))
plotPCA(Vsd, intgroup = c("Genotype"))
plotPCA(Vsd, intgroup = c("Treatment", "Genotype"))
vst_PCAdata <- plotPCA(Vsd, intgroup = c("Treatment", "Genotype"), returnData = TRUE)
percentVar <- round(100*attr(vst_PCAdata, "percentVar"))
g1 <- ggplot(vst_PCAdata, aes(PC1, PC2, color=Treatment, shape=Genotype)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("A.cervicornis") +
theme_classic() + #Set background color
theme(panel.border = element_blank(), # Set border
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) +
scale_color_manual(values = c("grey", "#FF3333", "#00CCCC"))
#ggsave("PCA_allgenets.pdf")
g1
vsd2 <- removeBatchEffect(assay(Vsd), batch = Vsd$Genotype)
pca_result <- prcomp(t(vsd2))  # Transpose matrix because prcomp expects observations in rows
pca_summary<-summary(pca_result)
# Extract the proportion of variance explained by PC1 and PC2
percentVar_PC1 <- pca_summary$importance[2, "PC1"] * 100  # Proportion of variance for PC1
percentVar_PC2 <- pca_summary$importance[2, "PC2"] * 100  # Proportion of variance for PC2
# Round the percentages for better readability
percentVar_PC1_rounded <- round(percentVar_PC1)
percentVar_PC2_rounded <- round(percentVar_PC2)
# Create a data frame for ggplot
pca_data <- data.frame(PC1 = pca_result$x[,1], PC2 = pca_result$x[,2], Sample = rownames(pca_result$x))
design %>%
rownames_to_column("Sample") %>%
full_join(pca_data, design, by = "Sample") -> pca_data
# Basic PCA plot
g2<- ggplot(pca_data, aes(x = PC1, y = PC2, label=NA, color = Treatment)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis") +
theme_classic() +
scale_color_manual(values = c("grey", "#FF3333", "#00CCCC"))
#ggsave("PCA_Acer_removebatcheffect.pdf",  width = 10, height = 7)
#setting up data to add polygons
find_hull <- function(pca_data) pca_data[chull(pca_data$PC1, pca_data$PC2), ]
hulls <- ddply(pca_data, "Treatment", find_hull)
combined_plot <- plot_grid(g1, g2, nrow = 2)
print(combined_plot)
combined_plot <- plot_grid(g1, g2, nrow = 1)
print(combined_plot)
ggplot(pca_data, aes(x = PC1, y = PC2, label=NA, color = Treatment)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis") +
theme_classic() +
scale_color_manual(values = c("grey", "#FF3333", "#00CCCC")) +
stat_ellipse(aes(PC1, PC2, group=Treatment, lty = Treatment), type = "norm")
# Basic PCA plot
g2<- ggplot(pca_data, aes(x = PC1, y = PC2, label=NA, color = Treatment)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis") +
theme_classic() +
scale_color_manual(values = c("grey", "#FF3333", "#00CCCC")) +
stat_ellipse(aes(PC1, PC2, group=Treatment, lty = Treatment), type = "norm")
combined_plot <- plot_grid(g1, g2, nrow = 1)
print(combined_plot)
ggsave("combined_PCA_plot_batcheffect.pdf", combined_plot, width = 10, height = 7)
ggsave("combined_PCA_plot_batcheffect.pdf", combined_plot, width = 8, height = 7)
print(combined_plot)
ggsave("combined_PCA_plot_batcheffect.pdf", combined_plot, width = 8, height = 7)
print(combined_plot)
ggsave("combined_PCA_plot_batcheffect.pdf", combined_plot, width = 15, height = 7)
ggsave("combined_PCA_plot_batcheffect.pdf", combined_plot)
# Basic PCA plot
g2<- ggplot(pca_data, aes(x = PC1, y = PC2, label=NA, color = Treatment)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("Acervicornis") +
theme_classic() +
scale_color_manual(values = c("grey", "#FF3333", "#00CCCC")) +
stat_ellipse(aes(PC1, PC2, group=Treatment, lty = Treatment), type = "norm") +
theme(text = element_text(size = 15))
#ggsave("PCA_allgenets.pdf")
```
g1 <- ggplot(vst_PCAdata, aes(PC1, PC2, color=Treatment, shape=Genotype)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("A.cervicornis") +
theme_classic() + #Set background color
theme(panel.border = element_blank(), # Set border
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) +
scale_color_manual(values = c("grey", "#FF3333", "#00CCCC"))  +
theme(text = element_text(size = 15))
combined_plot <- plot_grid(g1, g2, nrow = 1)
print(combined_plot)
ggsave("combined_PCA_plot_batcheffect.pdf", combined_plot, width = 15, height = 7)
ggsave("combined_PCA_plot_batcheffect.png", combined_plot, width = 15, height = 7)
# Basic PCA plot
g2<- ggplot(pca_data, aes(x = PC1, y = PC2, label=NA, color = Treatment)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar_PC1_rounded[1],"% variance")) +
ylab(paste0("PC2: ",percentVar_PC2_rounded[1],"% variance")) +
ggtitle("A. cervicornis") +
theme_classic() +
scale_color_manual(values = c("grey", "#FF3333", "#00CCCC")) +
stat_ellipse(aes(PC1, PC2, group=Treatment, lty = Treatment), type = "norm") +
theme(text = element_text(size = 15))
combined_plot <- plot_grid(g1, g2, nrow = 1)
print(combined_plot)
ggsave("combined_PCA_plot_batcheffect.png", combined_plot, width = 15, height = 7)
knitr::opts_chunk$set(echo = TRUE)
load("RData_files/Treated_vs_Initial_fc.RData")
TreatedvInitial_DGEs <- read_csv("results_csv/TreatedvInitial_annotDGEs.csv") #5,733 genes
Treated_vs_Initial.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvInitial_DGEs, by = "gene") %>%  #narrow down to only the DGEs
select(lfc, KO) %>%
na.omit() %>% #3,472 genes
distinct(KO, .keep_all = TRUE) %>% #2,578 distinct KEGG terms
column_to_rownames(var = "KO") -> TreatedvInitial_KEGG_DGEs
library(KEGGREST)
library(tidyverse)
library(pathview)
library(clusterProfiler)
library(enrichplot)
library(cowplot)
kegg.list <- read.table("bioinformatics/Acervicornis_iso2kegg.tab")
colnames(kegg.list) <- c("TranscriptID","KO")
dim(kegg.list)
kegg.list %>%
mutate(gene = str_replace(TranscriptID, "Acervicornis", "Acropora_")) %>%
select(!TranscriptID) -> kegg.list
load("RData_files/Treated_vs_Initial_fc.RData")
TreatedvInitial_DGEs <- read_csv("results_csv/TreatedvInitial_annotDGEs.csv") #5,733 genes
Treated_vs_Initial.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvInitial_DGEs, by = "gene") %>%  #narrow down to only the DGEs
select(lfc, KO) %>%
na.omit() %>% #3,472 genes
distinct(KO, .keep_all = TRUE) %>% #2,578 distinct KEGG terms
column_to_rownames(var = "KO") -> TreatedvInitial_KEGG_DGEs
load("RData_files/Treated_vs_Untreated_fc.RData")
TreatedvUntreated_DGEs <- read_csv("results_csv/TreatedvUntreated_annotDGEs.csv") #1587 genes
Treated_vs_Untreated.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvUntreated_DGEs, by = "gene") %>%  #narrow down to only the DGEs
select(lfc, KO) %>%
na.omit() %>% #987 genes
distinct(KO, .keep_all = TRUE) %>% #832 distinct KEGG terms
column_to_rownames(var = "KO") -> TreatedvUntreated_KEGG_DGEs
Treated_vs_Untreated.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvUntreated_DGEs, by = "gene") %>%
filter(gene == "Acropora_023112")
Treated_vs_Untreated.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvUntreated_DGEs, by = "gene") %>%
filter(gene == "Acropora_019471")
KEGG_enrich_TvU <- enrichKEGG(
gene = rownames(TreatedvUntreated_KEGG_DGEs),
organism = "ko",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
universe = kegg.list$KO
)
dotplot(KEGG_enrich_TvU)
length(unique(KEGG_enrich_TvU@result$Description)) #328 unique KEGG terms
KEGG_enrich_TvU@result$geneID
pathway_ids <- rownames(KEGG_enrich_TvU@result)
# Retrieve information for each pathway
pathway_info <- lapply(pathway_ids, keggGet)
# Extract pathway names and categories
pathway_details <- sapply(pathway_info, function(x) {
pathway_name <- x[[1]]$NAME
pathway_category <- x[[1]]$CLASS
return(c(Name = pathway_name, Category = pathway_category))
})
# Display the pathway names and categories
print(pathway_details)
pathway_categories_df <- tibble(
Pathway_ID = names(pathway_details),
Details = pathway_details
)
pathway_categories_df <- pathway_categories_df %>%
mutate(Description = sapply(Details, function(x) x[1]),
Category = sapply(Details, function(x) x[2])) %>%
select(-Details)
KEGG_enrich_TvU_categories <- left_join(KEGG_enrich_TvU@result, pathway_categories_df, by = "Description")
length(unique(KEGG_enrich_TvU_categories$Category)) #45 unique categories
length(unique(KEGG_enrich_TvU_categories$Category)) #45 unique categories
str(KEGG_enrich_TvU_categories) #242 KEGG terms
length(unique(KEGG_enrich_TvU_categories$Category)) #34 categories
KEGG_enrich_TvU_categories$GeneRatio <- sapply(KEGG_enrich_TvU_categories$GeneRatio, function(x) {
eval(parse(text=x))
})
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = GeneRatio)) +
geom_point(aes(size = Count, color = p.adjust)) +
theme_minimal() +
labs(x = "MAP Description", y = "Gene Ratio", title = "Treated vs. Untreated") +
coord_flip() +
scale_colour_gradient(low="blue", high="red") +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
ggsave("TreatedvsUntreated_KEGGenrichment_p0.05.pdf")
KEGG_enrich_TvU_categories %>%
filter(p.adjust<0.05) # only 3 categories and they all have different descriptions
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = GeneRatio)) +
geom_point(aes(size = Count, color = p.adjust)) +
theme_minimal() +
labs(x = "MAP Description", y = "KEGG Ratio", title = "Treated vs. Untreated") +
coord_flip() +
scale_colour_gradient(low="blue", high="red") +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
ggsave("TreatedvsUntreated_KEGGenrichment_p0.05.pdf")
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = GeneRatio)) +
geom_point(aes(size = Count, color = p.adjust)) +
theme_minimal() +
labs(x = "MAP Description", y = "KEGG Term Ratio", title = "Treated vs. Untreated") +
coord_flip() +
scale_colour_gradient(low="blue", high="red") +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
ggsave("TreatedvsUntreated_KEGGenrichment_p0.05.pdf")
blue_to_red <- colorRampPalette(c("blue", "red"))
# Generate n colors from this palette
n_colors <- blue_to_red(2)
# Set pathway of interest from above
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05)
# run pathview on a specific path
pv_path <- pathview(
gene.data = TreatedvUntreated_KEGG_DGEs,
pathway.id = map_id,
species = "ko",
out.suffix = "Pathwaysincancer_TreatedvUntreated",
limit = list(
gene = c(-1, 1), # upper and lower range of log2foldchange values
cpd = c(-4, 4)),
discrete = list(
gene = FALSE, # set this to true when working with discrete data
cpd = FALSE),
low = n_colors[1],
mid = n_colors[4],
high = n_colors[2],
kegg.native = T # T: outputs a traditional KEGG pathway map, F: outputs a different map style
)
map_id <- "05200"
# run pathview on a specific path
pv_path <- pathview(
gene.data = TreatedvUntreated_KEGG_DGEs,
pathway.id = map_id,
species = "ko",
out.suffix = "Pathwaysincancer_TreatedvUntreated",
limit = list(
gene = c(-1, 1), # upper and lower range of log2foldchange values
cpd = c(-4, 4)),
discrete = list(
gene = FALSE, # set this to true when working with discrete data
cpd = FALSE),
low = n_colors[1],
mid = n_colors[4],
high = n_colors[2],
kegg.native = T # T: outputs a traditional KEGG pathway map, F: outputs a different map style
)
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = GeneRatio)) +
geom_point(aes(size = Count, color = p.adjust)) +
theme_minimal() +
labs(x = "MAP Description", y = "KEGG Term Ratio", title = "Treated vs. Untreated") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = GeneRatio)) +
geom_point(aes(size = Count, color = Category)) +
theme_minimal() +
labs(x = "MAP Description", y = "KEGG Term Ratio", title = "Treated vs. Untreated") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point(aes(size = Count, color = GeneRatio)) +
theme_minimal() +
labs(x = "MAP Description", y = "KEGG Term Ratio", title = "Treated vs. Untreated") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point(aes(size = Count, color = GeneRatio)) +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "KEGG Term Ratio") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point(aes(size = Count, color = GeneRatio)) +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "Significant KEGG terms / Total terms") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point()) +
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point() +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "Significant KEGG terms / Total terms") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point(aes(size = GeneRatio, color = GeneRatio)) +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "Significant KEGG terms / Total terms") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
Count
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point(aes(size = Count, color = GeneRatio)) +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "Significant KEGG terms / Total terms") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point(aes(size = Count, color = GeneRatio)) +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "Significant KEGG terms / Total terms", size = "# KEGG Terms") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = p.adjust)) +
geom_point(aes(size = Count, color = GeneRatio)) +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "Significant KEGG terms / Total terms", size = "# KEGG Terms") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point(aes(size = Count, color = GeneRatio)) +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "Significant KEGG terms / Total terms", size = "# KEGG Terms") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point(aes(size = Count)) +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "Significant KEGG terms / Total terms", size = "# KEGG Terms") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
ggsave("TreatedvsUntreated_KEGGenrichment_p0.05.pdf")
ggsave("TreatedvsUntreated_KEGGenrichment_p0.05.png")
