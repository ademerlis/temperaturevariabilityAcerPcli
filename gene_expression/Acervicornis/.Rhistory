ggplot(percentchange,aes(x = Species, y= percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
labs(y = "Percent Decline in Color Score") +
theme(text = element_text(size = 15))
ggplot(percentchange,aes(x = Species, y= percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
labs(y = "Percent Decline in Color Score") +
theme(text = element_text(size = 15)) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))
ggsave("percentdeclinecolorscore_species.pdf")
setwd("~/Library/CloudStorage/OneDrive-UniversityofMiami/GitHub/Ch2_temperaturevariability2023/physiology/3_photosynthetic_efficiency")
library(tidyverse)
library(plotrix)
library(ggpubr)
library(rstatix)
library(cowplot)
ipam_tidy_data <- read.csv("ipam_tidy_data.csv")
treatment_time_bothspecies <- ipam_tidy_data %>%
dplyr::filter(!Treatment_period == "CBASS") %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
dplyr::select(Date, Colony, Puck, Tank, fvfm, Treatment, Species) %>%
mutate(Date = mdy(Date)) %>%
dplyr::filter(Date <= "2022-04-20") %>%
pivot_wider(names_from = Date, values_from = fvfm) %>%
mutate(fvfm_t0 = case_when(Species == "Acervicornis" ~ `2022-03-16`,
Species == "Pclivosa" ~ `2022-03-21`)) %>%
mutate(fvfm_t1 = case_when(Species == "Acervicornis" ~ `2022-04-06`,
Species == "Pclivosa" ~ `2022-04-06`)) %>%
mutate(fvfm_t2 = case_when(Species == "Acervicornis" ~ `2022-04-20`,
Species == "Pclivosa" ~ `2022-04-20`)) %>%
pivot_longer(fvfm_t0:fvfm_t2, names_to = "fvfm_timepoint", values_to = "fvfm") %>%
mutate(numDays = case_when(fvfm_timepoint == "fvfm_t0" ~ 0,
Species == "Pclivosa" & fvfm_timepoint == "fvfm_t1" ~ 16,
Species == "Acervicornis" & fvfm_timepoint == "fvfm_t1" ~ 21,
Species == "Pclivosa" & fvfm_timepoint == "fvfm_t2" ~ 30,
Species == "Acervicornis" & fvfm_timepoint == "fvfm_t2" ~ 35,
Species == "Pclivosa" & fvfm_timepoint == "fvfm_t3" ~ 65,
Species == "Acervicornis" & fvfm_timepoint == "fvfm_t3" ~ 70))
treatment_normalized_bothspecies <- ipam_tidy_data %>%
dplyr::filter(!Treatment_period == "CBASS") %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
dplyr::select(Date, Colony, Puck, Tank, fvfm, Treatment, Species)  %>%
mutate(Date = mdy(Date)) %>%
dplyr::filter(Date <= "2022-04-20") %>% #pre-CBASS time points
pivot_wider(names_from = Date, values_from = fvfm) %>%
mutate(fvfm_loss = case_when(Species == "Acervicornis" ~ `2022-03-16` - `2022-04-20`,
Species == "Pclivosa" ~ `2022-03-21` - `2022-04-20`)) %>%
mutate(fvfm_loss_norm = case_when(Species == "Acervicornis" ~ (fvfm_loss/`2022-03-16`)*100,
Species == "Pclivosa" ~ (fvfm_loss/`2022-03-21`)*100))
#save data for WGCNA
treatment_normalized_bothspecies %>%
select(Colony, Puck, Treatment, Species, fvfm_loss, fvfm_loss_norm) %>%
write_csv("treatment_fvfm.csv")
treatment_normalized_bothspecies%>%
ggplot(., aes(x=Treatment, y= fvfm_loss_norm, fill= Treatment)) +
geom_boxplot() +
theme_classic() +
labs(y = "% Decline in Fv/Fm", x="Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15)) +
facet_wrap(~Species) +
theme(legend.position="none")
treatment_normalized_bothspecies <- ipam_tidy_data %>%
dplyr::filter(!Treatment_period == "CBASS") %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
dplyr::select(Date, Colony, Puck, Tank, fvfm, Treatment, Species)  %>%
mutate(Date = mdy(Date)) %>%
dplyr::filter(Date <= "2022-04-20") %>% #pre-CBASS time points
pivot_wider(names_from = Date, values_from = fvfm) %>%
mutate(fvfm_loss = case_when(Species == "Acervicornis" ~ `2022-04-20` - `2022-03-16`,
Species == "Pclivosa" ~ `2022-04-20` - `2022-03-21`)) %>%
mutate(fvfm_loss_norm = case_when(Species == "Acervicornis" ~ (fvfm_loss/`2022-03-16`)*100,
Species == "Pclivosa" ~ (fvfm_loss/`2022-03-21`)*100))
treatment_time_bothspecies%>%
dplyr::select(!c(`2022-04-06`:`2022-04-20`)) %>%
mutate(numDays = as.factor(numDays)) %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment)) +
geom_boxplot(color = "black") +
stat_summary(fun=mean, geom="line", aes(group=Treatment, color = Treatment), position = position_dodge(width = 0.5)) +
facet_wrap(~Species + Colony) +
theme_classic() +
labs(y = "Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14))
treatment_normalized_bothspecies%>%
ggplot(., aes(x=Treatment, y= fvfm_loss_norm, fill= Treatment)) +
geom_boxplot() +
theme_classic() +
labs(y = "% Decline in Fv/Fm", x="Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15)) +
facet_wrap(~Species) +
theme(legend.position="none")
treatment_normalized_bothspecies%>%
ggplot(., aes(x=Species, y= fvfm_loss_norm, fill= Treatment)) +
geom_boxplot() +
theme_classic() +
labs(y = "% Decline in Fv/Fm", x="Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15)) +
theme(legend.position="none")
ggsave("treatment_normalized_bothspecies_boxplot.pdf")
setwd("~/Library/CloudStorage/OneDrive-UniversityofMiami/GitHub/Ch2_temperaturevariability2023/physiology/5_immune_cell_assay")
library(tidyverse)
library(plotrix)
library(ggpubr)
library(rstatix)
library(cowplot)
library(dunn.test)
library(Rmisc)
library(plyr)
library(dplyr)
percent_cells_df <- read_csv("Grace_percentcells_alldata.csv")
percent_cells_df%>%
mutate(Treatment = case_when(Treatment == "Control" ~ "Untreated",
Treatment == "Variable" ~ "Treated")) -> percent_cells_df
#there's one outlier to remove right off the bat: T1	Pcli	B	P9	r2	Percent=111.50	T1	Untreated
percent_cells_df %>%
filter(!(TimePoint=="T1" & Species == "Pcli" & Genotype == "B" & Treatment == "Untreated" & ID == "P9" & Replicate == "r2")) -> percent_cells_df
#replicates are technical replicates of the same coral fragment
#time points:
#T0 = initial pre-treatment (March 22)
#T1 = one week into treatment (March 30)
#T2 = end of treatment (April 20)
#follow-up = post CBASS and treatment follow-up (June 1)
percent_cells_df %>%
mutate(num_days = case_when(TimePoint == "T0" ~ "0",
TimePoint == "T1" ~ "7",
TimePoint == "T2" ~ "28",
TimePoint == "FollowUp" ~ "71")) %>%
mutate(num_days = as.factor(num_days)) %>%
mutate(num_days = fct_relevel(num_days, "0", "7", "28", "71")) -> percent_cells_df
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent), se_replicate_percent_perID = std.error(Percent)) %>%
ungroup() %>%
select(Species, Genotype, ID, Tank, Treatment, num_days, mean_replicate_percent_perID) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28") -> percent_cells_speciestreatments
percent_cells_speciestreatments
percent_cells_speciestreatments %>%
ggplot(., aes(x=Species, y=mean_replicate_percent_perID, fill= Treatment)) +
geom_boxplot()
percent_cells_speciestreatments %>%
ggplot(., aes(x=num_days, y=mean_replicate_percent_perID, fill= Treatment)) +
geom_boxplot() +
facet_wrap(~Species)
percent_cells_speciestreatments %>%
ggplot(., aes(x=num_days, y=mean_replicate_percent_perID, fill= Treatment)) +
geom_boxplot() +
facet_wrap(~Species)  +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
xlab("Number of Days")+
ylab("% Phagocytic Activity")+
theme(text = element_text(size = 15))
percent_cells_speciestreatments %>%
ggplot(., aes(x=num_days, y=mean_replicate_percent_perID, fill= Treatment)) +
geom_boxplot() +
facet_wrap(~Species)  +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
xlab("Number of Days")+
ylab("% Phagocytic Activity")+
theme(text = element_text(size = 15)) +
theme_classic()
percent_cells_speciestreatments %>%
ggplot(., aes(x=num_days, y=mean_replicate_percent_perID, fill= Treatment)) +
geom_boxplot() +
facet_wrap(~Species)  +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
xlab("Number of Days")+
ylab("% Phagocytic Activity")+
theme_classic() +
theme(text = element_text(size = 15))
percent_cells_speciestreatments
percent_cells_speciestreatments %>%
select(!ID)
percent_cells_speciestreatments %>%
select(!ID) %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_perID")
percent_cells_speciestreatments %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_perID")
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, Tank, Treatment) %>%
dplyr::mutate(mean_replicate_percent_pertank = mean(Percent), se_replicate_percent_pertank = std.error(Percent)) %>%
ungroup() %>%
select(Species, Genotype, ID, Tank, Treatment, num_days, mean_replicate_percent_pertank) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28") %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_pertank")
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, Tank, Treatment) %>%
dplyr::mutate(mean_replicate_percent_pertank = mean(Percent), se_replicate_percent_pertank = std.error(Percent)) %>%
ungroup() %>%
select(Species, Genotype, ID, Tank, Treatment, num_days, mean_replicate_percent_pertank) %>%
distinct()
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, Tank, Treatment) %>%
dplyr::mutate(mean_replicate_percent_pertank = mean(Percent), se_replicate_percent_pertank = std.error(Percent)) %>%
ungroup() %>%
select(Species, Genotype, Tank, Treatment, num_days, mean_replicate_percent_pertank) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28") %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_pertank")
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, Tank, Treatment) %>%
dplyr::mutate(mean_replicate_percent_pertank = mean(Percent), se_replicate_percent_pertank = std.error(Percent)) %>%
ungroup() %>%
select(Species, Genotype, Tank, Treatment, num_days, mean_replicate_percent_pertank) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28") %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_pertank") %>%
mutate(percent_change = ((`28`-`0`)/`0`) *100)
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, Tank, Treatment) %>%
dplyr::mutate(mean_replicate_percent_pertank = mean(Percent), se_replicate_percent_pertank = std.error(Percent)) %>%
ungroup() %>%
select(Species, Genotype, Tank, Treatment, num_days, mean_replicate_percent_pertank) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28") %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_pertank") %>%
mutate(percent_change = ((`28`-`0`)/`0`) *100) %>%
ggplot(., aes(x=Species, y=percent_change, fill= Treatment)) +
geom_boxplot() +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
ylab("% Phagocytic Activity")+
theme_classic() +
theme(text = element_text(size = 15))
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, Tank, Treatment) %>%
dplyr::mutate(mean_replicate_percent_pertank = mean(Percent), se_replicate_percent_pertank = std.error(Percent)) %>%
ungroup() %>%
select(Species, Genotype, Tank, Treatment, num_days, mean_replicate_percent_pertank) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28") %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_pertank") %>%
mutate(percent_change = ((`28`-`0`)/`0`) *100)
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, Tank, Treatment) %>%
dplyr::mutate(mean_replicate_percent_pertank = mean(Percent), se_replicate_percent_pertank = std.error(Percent)) %>%
ungroup() %>%
select(Species, Genotype, Tank, Treatment, num_days, mean_replicate_percent_pertank) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28") %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_pertank") %>%
mutate(percent_change = ((`28`-`0`)/`0`) *100) %>%
ggplot(., aes(x=Species, y=percent_change, fill= Treatment)) +
geom_point() +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
ylab("% Phagocytic Activity")+
theme_classic() +
theme(text = element_text(size = 15))
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, Tank, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent)) %>%
ungroup() %>%
select(Species, Genotype, Tank, Treatment, num_days, mean_replicate_percent_perID) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28")
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent)) %>%
ungroup() %>%
select(Species, Genotype, Tank, Treatment, num_days, mean_replicate_percent_perID) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28") %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_pertank") %>%
mutate(percent_change = ((`28`-`0`)/`0`) *100) %>%
ggplot(., aes(x=Species, y=percent_change, fill= Treatment)) +
geom_point() +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
ylab("% Phagocytic Activity")+
theme_classic() +
theme(text = element_text(size = 15))
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent)) %>%
ungroup() %>%
select(Species, Genotype, Tank, Treatment, num_days, mean_replicate_percent_perID) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28")
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::filter(TimePoint == "T0" | TimePoint == "T2") %>%
dplyr::group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent), se_replicate_percent_perID = std.error(Percent)) %>%
ungroup() %>%
ggplot(., aes(x = num_days, y = mean_replicate_percent_perID, fill = Treatment))+
geom_boxplot() +
facet_wrap(~Species) +
theme_classic()+
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
xlab("Day")+
ylab("% Phagocytic Activity")+
theme(text = element_text(size = 15))
ggsave("percentcells_species_boxplots.pdf")
load("RData_files/wgcnaData.RData")
setwd("~/Library/CloudStorage/OneDrive-UniversityofMiami/GitHub/Ch2_temperaturevariability2023/gene_expression/Acervicornis")
load("RData_files/wgcnaData.RData")
View(traits)
View(datt)
lnames=load("RData_files/data4wgcna.RData")
rownames(design)
rownames(traits)
all.equal(colnames(vsd.wg), rownames(design)) #TRUE
library(tidyverse)
library(WGCNA)
library(flashClust)
library(ape)
options(stringsAsFactors=FALSE)
allowWGCNAThreads()
lnames=load("RData_files/data4wgcna.RData")
lnames # "vsd.wg"  "design" # log-transformed variance-stabilized gene expression, and table or experimental conditions
datt=t(vsd.wg)
ncol(datt) #15526
nrow(datt) #44
rownames(design) <- colnames(vsd.wg)
Initial = as.numeric(design$Treatment=="Initial")
Untreated = as.numeric(design$Treatment == "Untreated")
Treated = as.numeric(design$Treatment == "Treated")
traits <- data.frame(cbind(Initial, Untreated, Treated))
rownames(traits) <- rownames(design)
traits
traits %>%
rownames_to_column() %>%
mutate(rowname = str_extract(rowname, "^[^_]*")) %>%
separate(rowname, into = c("Species", "ID"), sep = "\\.") %>%
mutate(Species = "Acropora cervicornis") %>%
mutate(ID = as.double(ID)) -> traits
traits
days_to_removed <- read_csv("physiotraits_for_WGCNA/days_to_removed.csv")
days_to_removed %>%
select(!c("Colony", "Treatment")) %>%
filter(Species == "Acropora cervicornis") -> days_to_removed
phagocytosis <- read_csv("physiotraits_for_WGCNA/phagocytosis_alltimepoints.csv")
phagocytosis %>%
pivot_wider(names_from="TimePoint", values_from="mean_replicate_percent_perID") %>%
dplyr::rename(cells_initial = T0) %>%
dplyr::rename(cells_endoftreatment = T2) %>%
select(!c("Genotype", "Treatment", "num_days")) %>%
filter(Species == "Acer") %>%
mutate(Species = "Acropora cervicornis") %>%
mutate(ID = gsub("[AP]", "", ID)) %>%
mutate(ID = as.double(ID)) -> phagocytosis
Rscore <- read_csv("physiotraits_for_WGCNA/treatment_Rscore.csv")
Rscore %>%
filter(Species == "Acropora cervicornis") %>%
select(!c("Colony", "Treatment")) %>%
mutate(ID = as.double(ID)) -> Rscore
CBASS_fvfm <- read_csv("physiotraits_for_WGCNA/cbass_fvfm_forwgcna.csv")
CBASS_fvfm %>%
filter(Species == "Acervicornis") %>%
mutate(Species = "Acropora cervicornis") %>%
dplyr::rename(ID = Puck) %>%
mutate(ID = gsub("[AP]", "", ID)) %>%
mutate(ID = as.double(ID)) %>%
dplyr::select(!c("Colony", "Treatment")) -> CBASS_fvfm
full_join(traits, days_to_removed, by = c("Species", "ID")) %>%
full_join(., phagocytosis) %>%
full_join(., Rscore) %>%
full_join(., CBASS_fvfm) %>%
drop_na(Initial) %>%
dplyr::select(!c("Species", "ID")) -> traits_withphysio
traits_withphysio %>%
select(!c(1)) -> traits_withphysio
#### OUTLIER DETECTION ####
# identifies outlier genes
gsg = goodSamplesGenes(datt, verbose = 3);
gsg$allOK #if TRUE, no outlier genes
#TRUE!
meanExpressionByArray=apply( datt,1,mean, na.rm=T)
NumberMissingByArray=apply( is.na(data.frame(datt)),1, sum)
NumberMissingByArray
# sample dendrogram and trait heat map showing outliers
A=adjacency(t(datt),type="signed")                 #SELECT SIGNED OR UNSIGNED HERE
# this calculates the whole network connectivity
k=as.numeric(apply(A,2,sum))-1
Z.k=scale(k)
thresholdZ.k=-2.5 # often -2.5
outlierColor=ifelse(Z.k<thresholdZ.k,"red","black")
sampleTree = flashClust(as.dist(1-A), method = "average")
# Convert traits to a color representation where red indicates high values
traitColors=data.frame(numbers2colors(traits_withphysio,signed=FALSE))
dimnames(traitColors)[[2]]=paste(names(traits_withphysio))
datColors=data.frame(outlierC=outlierColor,traitColors)
plotDendroAndColors(sampleTree,groupLabels=names(datColors), colors=datColors,main="Sample dendrogram and trait heatmap")
Z.k=scale(k)
thresholdZ.k=-2.5 # often -2.5
outlierColor=ifelse(Z.k<thresholdZ.k,"red","black")
sampleTree = flashClust(as.dist(1-A), method = "average")
# Convert traits to a color representation where red indicates high values
traitColors=data.frame(numbers2colors(traits_withphysio,signed=TRUE))
dimnames(traitColors)[[2]]=paste(names(traits_withphysio))
datColors=data.frame(outlierC=outlierColor,traitColors)
# Plot the sample dendrogram and the colors underneath.
quartz()
plotDendroAndColors(sampleTree,groupLabels=names(datColors), colors=datColors,main="Sample dendrogram and trait heatmap")
# the resulting plot shows a sample dendrogram and the spread of your traits across the cluster
# outlier samples will show as red in the outlierC row
quartz()
plotDendroAndColors(sampleTree,groupLabels=names(datColors), colors=datColors,main="Sample dendrogram and trait heatmap")
# the resulting plot shows a sample dendrogram and the spread of your traits across the cluster
# scatterplots of gene significance (correlation-based) vs kME
load(file = "RData_files/networkdata_signed.RData")
load(file = "RData_files/wgcnaData.RData");
traits
table(moduleColors)
load(file = "RData_files/networkdata_signed.RData")
load(file = "RData_files/wgcnaData.RData");
# Define numbers of genes and samples
nGenes = ncol(datt); #15526
nSamples = nrow(datt); #43
nSamples
MEs0 = moduleEigengenes(datt, moduleColors)$eigengenes
MEs = orderMEs(MEs0)
# correlations of genes with eigengenes
moduleGeneCor=cor(MEs,datt)
moduleGenePvalue = corPvalueStudent(moduleGeneCor, nSamples);
moduleTraitCor = cor(MEs, traits_withphysio, use = "p");
barplot(mct[rev(modLabels)],horiz=T,las=1,xlim=c(0,16000),col=rev(modLabels))
labelShift=750 # increase to move module size labels to the right
par(mar = c(6, 8.5, 3, 3));
mct=table(moduleColors)
mct[modLabels]
library(RColorBrewer)
modLabels=sub("ME","",names(MEs))
ps=signif(moduleTraitPvalue,1)
MEs0 = moduleEigengenes(datt, moduleColors)$eigengenes
MEs = orderMEs(MEs0)
# correlations of genes with eigengenes
moduleGeneCor=cor(MEs,datt)
moduleGenePvalue = corPvalueStudent(moduleGeneCor, nSamples);
moduleTraitCor = cor(MEs, traits_withphysio, use = "p");
nGenes
nSamples
traits_withphysio
traits_withphysio <- read_csv("WGCNA/traits_withphysio.csv")
traits_withphysio
MEs0 = moduleEigengenes(datt, moduleColors)$eigengenes
MEs = orderMEs(MEs0)
# correlations of genes with eigengenes
moduleGeneCor=cor(MEs,datt)
moduleGenePvalue = corPvalueStudent(moduleGeneCor, nSamples);
moduleTraitCor = cor(MEs, traits_withphysio, use = "p");
moduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples);
textMatrix = paste(signif(moduleTraitCor, 2), "\n(",
signif(moduleTraitPvalue, 1), ")", sep = "");
dim(textMatrix) = dim(moduleTraitCor)
par(mar = c(6, 8.5, 3, 3));
# Display the correlation values within a heatmap plot
labeledHeatmap(
Matrix = moduleTraitCor,
xLabels = names(traits_withphysio),
yLabels = names(MEs),
ySymbols = names(MEs),
colorLabels = FALSE,
colors = blueWhiteRed(50),
textMatrix = textMatrix,
setStdMargins = FALSE,
cex.text = 0.5,
zlim = c(-1, 1),
main = paste("Module-trait relationships")
)
table(moduleColors) # gives numbers of genes in each module
# shows only significant correlations
quartz()
library(RColorBrewer)
modLabels=sub("ME","",names(MEs))
ps=signif(moduleTraitPvalue,1)
cors=signif(moduleTraitCor,2)
textMatrix = cors;
# paste(cors, "\n(",ps, ")", sep = "");
textMatrix[ps>0.05]="-"
dim(textMatrix) = dim(moduleTraitCor)
par(mar = c(6, 8.5, 3, 3));
# Display the correlation values within a heatmap plot
labeledHeatmap(Matrix = moduleTraitCor,
xLabels = names(traits_withphysio),
ySymbols = modLabels,
yLabels = modLabels,
colorLabels = FALSE,
colors = colorRampPalette(c("blue","lightblue","white","coral","red"))(50),
textMatrix = textMatrix,
setStdMargins = FALSE,
cex.text = 0.7,
zlim = c(-0.7,0.7),
main = paste("A.cervicornis Module-Trait correlations"))
# module size barplot
quartz()
labelShift=750 # increase to move module size labels to the right
par(mar = c(6, 8.5, 3, 3));
mct=table(moduleColors)
mct[modLabels]
x=barplot(mct[rev(modLabels)],horiz=T,las=1,xlim=c(0,16000),col=rev(modLabels))
text(mct[rev(modLabels)]+labelShift,y=x,mct[rev(modLabels)],cex=0.9)
barplot(mct[rev(modLabels)],horiz=T,las=1,xlim=c(0,16000),col=rev(modLabels))
text(mct[rev(modLabels)]+labelShift,y=x,mct[rev(modLabels)],cex=0.9)
barplot(mct[rev(modLabels)],horiz=T,las=1,xlim=c(0,16000),col=rev(modLabels))
text(mct[rev(modLabels)]+labelShift,y=x,mct[rev(modLabels)],cex=0.9)
