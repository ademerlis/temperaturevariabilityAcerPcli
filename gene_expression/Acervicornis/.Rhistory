labs(x = "MAP Description", y = "KEGG Term Ratio", title = "Treated vs. Untreated") +
coord_flip() +
scale_colour_gradient(low="blue", high="red") +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
ggsave("TreatedvsUntreated_KEGGenrichment_p0.05.pdf")
blue_to_red <- colorRampPalette(c("blue", "red"))
# Generate n colors from this palette
n_colors <- blue_to_red(2)
# Set pathway of interest from above
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05)
# run pathview on a specific path
pv_path <- pathview(
gene.data = TreatedvUntreated_KEGG_DGEs,
pathway.id = map_id,
species = "ko",
out.suffix = "Pathwaysincancer_TreatedvUntreated",
limit = list(
gene = c(-1, 1), # upper and lower range of log2foldchange values
cpd = c(-4, 4)),
discrete = list(
gene = FALSE, # set this to true when working with discrete data
cpd = FALSE),
low = n_colors[1],
mid = n_colors[4],
high = n_colors[2],
kegg.native = T # T: outputs a traditional KEGG pathway map, F: outputs a different map style
)
map_id <- "05200"
# run pathview on a specific path
pv_path <- pathview(
gene.data = TreatedvUntreated_KEGG_DGEs,
pathway.id = map_id,
species = "ko",
out.suffix = "Pathwaysincancer_TreatedvUntreated",
limit = list(
gene = c(-1, 1), # upper and lower range of log2foldchange values
cpd = c(-4, 4)),
discrete = list(
gene = FALSE, # set this to true when working with discrete data
cpd = FALSE),
low = n_colors[1],
mid = n_colors[4],
high = n_colors[2],
kegg.native = T # T: outputs a traditional KEGG pathway map, F: outputs a different map style
)
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = GeneRatio)) +
geom_point(aes(size = Count, color = p.adjust)) +
theme_minimal() +
labs(x = "MAP Description", y = "KEGG Term Ratio", title = "Treated vs. Untreated") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = GeneRatio)) +
geom_point(aes(size = Count, color = Category)) +
theme_minimal() +
labs(x = "MAP Description", y = "KEGG Term Ratio", title = "Treated vs. Untreated") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point(aes(size = Count, color = GeneRatio)) +
theme_minimal() +
labs(x = "MAP Description", y = "KEGG Term Ratio", title = "Treated vs. Untreated") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point(aes(size = Count, color = GeneRatio)) +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "KEGG Term Ratio") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point(aes(size = Count, color = GeneRatio)) +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "Significant KEGG terms / Total terms") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point()) +
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point() +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "Significant KEGG terms / Total terms") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point(aes(size = GeneRatio, color = GeneRatio)) +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "Significant KEGG terms / Total terms") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
Count
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point(aes(size = Count, color = GeneRatio)) +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "Significant KEGG terms / Total terms") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point(aes(size = Count, color = GeneRatio)) +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "Significant KEGG terms / Total terms", size = "# KEGG Terms") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = p.adjust)) +
geom_point(aes(size = Count, color = GeneRatio)) +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "Significant KEGG terms / Total terms", size = "# KEGG Terms") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point(aes(size = Count, color = GeneRatio)) +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "Significant KEGG terms / Total terms", size = "# KEGG Terms") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point(aes(size = Count)) +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "Significant KEGG terms / Total terms", size = "# KEGG Terms") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
ggsave("TreatedvsUntreated_KEGGenrichment_p0.05.pdf")
ggsave("TreatedvsUntreated_KEGGenrichment_p0.05.png")
knitr::opts_chunk$set(echo = TRUE)
library(KEGGREST)
library(tidyverse)
library(pathview)
library(clusterProfiler)
library(enrichplot)
library(cowplot)
kegg.list <- read.table("bioinformatics/Acervicornis_iso2kegg.tab")
colnames(kegg.list) <- c("TranscriptID","KO")
dim(kegg.list)
kegg.list %>%
mutate(gene = str_replace(TranscriptID, "Acervicornis", "Acropora_")) %>%
select(!TranscriptID) -> kegg.list
load("RData_files/Treated_vs_Untreated_fc.RData")
TreatedvUntreated_DGEs <- read_csv("results_csv/TreatedvUntreated_annotDGEs.csv") #1587 genes
Treated_vs_Untreated.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvUntreated_DGEs, by = "gene") %>%  #narrow down to only the DGEs
select(lfc, KO) %>%
na.omit() %>% #987 genes
distinct(KO, .keep_all = TRUE) %>% #832 distinct KEGG terms
column_to_rownames(var = "KO") -> TreatedvUntreated_KEGG_DGEs
Treated_vs_Untreated.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvUntreated_DGEs, by = "gene") %>%
filter(gene == "Acropora_023112")
Treated_vs_Untreated.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvUntreated_DGEs, by = "gene") %>%
filter(gene == "Acropora_019471")
TreatedvUntreated_DGEs
TreatedvUntreated_KEGG_DGEs
Treated_vs_Untreated.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvUntreated_DGEs, by = "gene") %>%
filter(gene == "Acropora_023112")
KEGG_enrich_TvU <- enrichKEGG(
gene = rownames(TreatedvUntreated_KEGG_DGEs),
organism = "ko",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
universe = kegg.list$KO
)
dotplot(KEGG_enrich_TvU)
length(unique(KEGG_enrich_TvU@result$Description)) #328 unique KEGG terms
KEGG_enrich_TvU@result$Description
KEGG_enrich_TvU@result$geneID
pathway_ids <- rownames(KEGG_enrich_TvU@result)
pathway_info <- lapply(pathway_ids, keggGet)
# Extract pathway names and categories
pathway_details <- sapply(pathway_info, function(x) {
pathway_name <- x[[1]]$NAME
pathway_category <- x[[1]]$CLASS
return(c(Name = pathway_name, Category = pathway_category))
})
# Display the pathway names and categories
print(pathway_details)
pathway_categories_df <- tibble(
Pathway_ID = names(pathway_details),
Details = pathway_details
)
pathway_categories_df <- pathway_categories_df %>%
mutate(Description = sapply(Details, function(x) x[1]),
Category = sapply(Details, function(x) x[2])) %>%
select(-Details)
KEGG_enrich_TvU_categories <- left_join(KEGG_enrich_TvU@result, pathway_categories_df, by = "Description")
length(unique(KEGG_enrich_TvU_categories$Category)) #45 unique categories
KEGG_enrich_TvU_categories
str(KEGG_enrich_TvU_categories) #330 KEGG terms
length(unique(KEGG_enrich_TvU_categories$Category)) #45 categories
KEGG_enrich_TvU_categories$GeneRatio <- sapply(KEGG_enrich_TvU_categories$GeneRatio, function(x) {
eval(parse(text=x))
})
KEGG_enrich_TvU_categories %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, p.adjust), y = p.adjust)) +
geom_point(aes(size = Count)) +
theme_minimal() +
labs(x = "MAP Description", y = "Adjusted p-value", title = "Treated vs. Untreated", color = "Significant KEGG terms / Total terms", size = "# KEGG Terms") +
coord_flip() +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
KEGG_enrich_TvU_categories %>%
filter(p.adjust<0.05) # 4 categories and they all have different descriptions
filtered_KEGG_enrich_CP <- filtered_KEGG_enrich_TvU %>% filter(grepl("Cellular Processes", Category, ignore.case = TRUE))
filtered_KEGG_enrich_CP <- KEGG_enrich_TvU_categories %>% filter(grepl("Cellular Processes", Category, ignore.case = TRUE))
filtered_KEGG_enrich_CP
filtered_KEGG_enrich_CP_cgd <- KEGG_enrich_TvU_categories %>% filter(grepl("Cell growth and death", Category, ignore.case = TRUE))
filtered_KEGG_enrich_CP_cgd %>%
filter(p.adjust < 0.05) # no significant KEGG terms
TreatedvUntreated_KEGG_DGEs
Treated_vs_Untreated.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvUntreated_DGEs, by = "gene")
TreatedvUntreated_KEGG_DGEs
Treated_vs_Untreated.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvUntreated_DGEs, by = "gene")
Treated_vs_Untreated.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvUntreated_DGEs, by = "gene") %>%
arrange(desc(KO))
KEGG_enrich_TvU_categories
Treated_vs_Untreated.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvUntreated_DGEs, by = "gene") -> gene_KEGG_list
TreatedvUntreated_KEGG_DGEs
#pathways in cancer
KEGG_enrich_TvU_categories
#pathways in cancer
KEGG_enrich_TvU_categories %>%
filter(Description == "Pathways in cancer")
#pathways in cancer
KEGG_enrich_TvU_categories %>%
filter(Description == "Pathways in cancer") %>%
select(geneID)
#pathways in cancer
KEGG_enrich_TvU_categories %>%
filter(Description == "Pathways in cancer") %>%
select(geneID) %>%
separate_rows(geneID, sep = "/")
#pathways in cancer
KEGG_enrich_TvU_categories %>%
filter(Description == "Pathways in cancer") %>%
select(Description, geneID) %>%
separate_rows(geneID, sep = "/")
KEGG_enrich_TvU_categories %>%
filter(Description == "Pathways in cancer" | Description == "Protein processing in endoplasmic reticulum" | Description == "Calcium signaling pathway" | Description == "Antigen processing and presentation") %>%
select(Description, geneID) %>%
separate_rows(geneID, sep = "/")
gene_KEGG_list
KEGG_enrich_TvU_categories %>%
filter(Description == "Pathways in cancer" | Description == "Protein processing in endoplasmic reticulum" | Description == "Calcium signaling pathway" | Description == "Antigen processing and presentation") %>%
select(Description, geneID) %>%
separate_rows(geneID, sep = "/") %>%
rename(KO = geneID)
KEGG_enrich_TvU_categories %>%
filter(Description == "Pathways in cancer" | Description == "Protein processing in endoplasmic reticulum" | Description == "Calcium signaling pathway" | Description == "Antigen processing and presentation") %>%
select(Description, geneID) %>%
separate_rows(geneID, sep = "/") %>%
rename(KO = geneID) %>%
full_join(., gene_KEGG_list, by = "KO")
KEGG_enrich_TvU_categories %>%
filter(Description == "Pathways in cancer" | Description == "Protein processing in endoplasmic reticulum" | Description == "Calcium signaling pathway" | Description == "Antigen processing and presentation") %>%
select(Description, geneID) %>%
separate_rows(geneID, sep = "/") %>%
rename(KO = geneID) %>%
inner_join(., gene_KEGG_list, by = "KO")
KEGG_enrich_TvU_categories %>%
filter(Description == "Pathways in cancer" | Description == "Protein processing in endoplasmic reticulum" | Description == "Calcium signaling pathway" | Description == "Antigen processing and presentation") %>%
select(Description, geneID) %>%
separate_rows(geneID, sep = "/") %>%
rename(KO = geneID) %>%
inner_join(., gene_KEGG_list, by = "KO") %>%
write_csv("TvU_KEGGterms_genes_sigpathways.csv")
gene_KEGG_list
KEGG_enrich_TvU_categories %>%
filter(Description == "Pathways in cancer" | Description == "Protein processing in endoplasmic reticulum" | Description == "Calcium signaling pathway" | Description == "Antigen processing and presentation") %>%
select(Description, geneID) %>%
separate_rows(geneID, sep = "/") %>%
rename(KO = geneID)
KEGG_enrich_TvU_categories %>%
filter(Description == "Pathways in cancer" | Description == "Protein processing in endoplasmic reticulum" | Description == "Calcium signaling pathway" | Description == "Antigen processing and presentation") %>%
select(Description, geneID) %>%
separate_rows(geneID, sep = "/") %>%
rename(KO = geneID) %>%
right_join(., gene_KEGG_list, by = "KO") %>%
write_csv("TvU_KEGGterms_genes_sigpathways.csv")
KEGG_enrich_TvU_categories %>%
filter(Description == "Pathways in cancer" | Description == "Protein processing in endoplasmic reticulum" | Description == "Calcium signaling pathway" | Description == "Antigen processing and presentation") %>%
select(Description, geneID) %>%
separate_rows(geneID, sep = "/") %>%
rename(KO = geneID) %>%
right_join(., gene_KEGG_list, by = "KO")
KEGG_enrich_TvU_categories %>%
filter(Description == "Pathways in cancer" | Description == "Protein processing in endoplasmic reticulum" | Description == "Calcium signaling pathway" | Description == "Antigen processing and presentation") %>%
select(Description, geneID) %>%
separate_rows(geneID, sep = "/") %>%
rename(KO = geneID) %>%
left_join(., gene_KEGG_list, by = "KO")
KEGG_enrich_TvU_categories %>%
filter(Description == "Pathways in cancer" | Description == "Protein processing in endoplasmic reticulum" | Description == "Calcium signaling pathway" | Description == "Antigen processing and presentation") %>%
select(Description, geneID) %>%
separate_rows(geneID, sep = "/") %>%
rename(KO = geneID) %>%
left_join(., gene_KEGG_list, by = "KO") %>%
write_csv("TvU_KEGGterms_genes_sigpathways.csv")
knitr::opts_chunk$set(echo = TRUE)
library(KEGGREST)
library(tidyverse)
library(pathview)
library(clusterProfiler)
library(enrichplot)
library(cowplot)
kegg.list <- read.table("bioinformatics/Acervicornis_iso2kegg.tab")
colnames(kegg.list) <- c("TranscriptID","KO")
dim(kegg.list)
kegg.list %>%
mutate(gene = str_replace(TranscriptID, "Acervicornis", "Acropora_")) %>%
select(!TranscriptID) -> kegg.list
load("RData_files/Treated_vs_Untreated_fc.RData")
TreatedvUntreated_DGEs <- read_csv("results_csv/TreatedvUntreated_annotDGEs.csv") #1587 genes
Treated_vs_Untreated.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvUntreated_DGEs, by = "gene") %>%  #narrow down to only the DGEs
select(lfc, KO) %>%
na.omit() %>% #987 genes
distinct(KO, .keep_all = TRUE) %>% #832 distinct KEGG terms
column_to_rownames(var = "KO") -> TreatedvUntreated_KEGG_DGEs
Treated_vs_Untreated.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvUntreated_DGEs, by = "gene") %>%
filter(gene == "Acropora_023112")
Treated_vs_Untreated.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvUntreated_DGEs, by = "gene") %>%
filter(gene == "Acropora_019471")
Treated_vs_Untreated.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvUntreated_DGEs, by = "gene") %>%
arrange(desc(KO))
KEGG_enrich_TvU <- enrichKEGG(
gene = rownames(TreatedvUntreated_KEGG_DGEs),
organism = "ko",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
universe = kegg.list$KO
)
dotplot(KEGG_enrich_TvU)
length(unique(KEGG_enrich_TvU@result$Description)) #328 unique KEGG terms
KEGG_enrich_TvU@result$geneID
pathway_ids <- rownames(KEGG_enrich_TvU@result)
# Retrieve information for each pathway
pathway_info <- lapply(pathway_ids, keggGet)
# Extract pathway names and categories
pathway_details <- sapply(pathway_info, function(x) {
pathway_name <- x[[1]]$NAME
pathway_category <- x[[1]]$CLASS
return(c(Name = pathway_name, Category = pathway_category))
})
# Display the pathway names and categories
print(pathway_details)
pathway_categories_df <- tibble(
Pathway_ID = names(pathway_details),
Details = pathway_details
)
pathway_categories_df <- pathway_categories_df %>%
mutate(Description = sapply(Details, function(x) x[1]),
Category = sapply(Details, function(x) x[2])) %>%
select(-Details)
KEGG_enrich_TvU_categories <- left_join(KEGG_enrich_TvU@result, pathway_categories_df, by = "Description")
length(unique(KEGG_enrich_TvU_categories$Category)) #45 unique categories
save(KEGG_enrich_TvU,kegg.list,pathway_details,pathway_info, file = "KEGGenrichmentanalysisfiles.RDate")
KEGG_enrich_TvU_categories
KEGG_enrich_TvU_categories %>%
filter(p.adjust<0.05)
KEGG_enrich_TvU_categories %>%
filter(p.adjust<0.05) %>%
write_csv("TvU_sigKEGGpathways.csv")# 4 categories and they all have different descriptions
load("Rdata_files/realModels_Acer.RData")
library(DESeq2)
library(tidyverse)
read.table(file = "bioinformatics/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
rename(gene = V1,
annot = V2) -> iso2geneName
# treatment
Treatment=results(dds)
summary(Treatment, alpha = 0.05)
degs_treatment=row.names(Treatment)[Treatment$padj<0.05 & !(is.na(Treatment$padj))]
# Treated vs. Untreated
Treatment_Treated_vs_Untreated=results(dds,contrast=c("Treatment","Treated","Untreated"))
summary(Treatment_Treated_vs_Untreated, alpha = 0.05)
degs_treatment
summary(Treatment, alpha = 0.05)
summary(Treatment_Treated_vs_Untreated, alpha = 0.05)
degs_Treatment_Treated_vs_Untreated=row.names(Treatment_Treated_vs_Untreated)[Treatment_Treated_vs_Untreated$padj<0.05 & !(is.na(Treatment_Treated_vs_Untreated$padj))]
Treatment_Treated_vs_Untreated %>%
as.data.frame() %>%
rownames_to_column(var = "gene") %>%
drop_na(padj) %>%
filter(padj<0.05)
Treatment_Treated_vs_Untreated %>%
as.data.frame() %>%
rownames_to_column(var = "gene") %>%
drop_na(padj) %>%
filter(padj<0.05 & log2FoldChange |>| 1)
Treatment_Treated_vs_Untreated %>%
as.data.frame() %>%
rownames_to_column(var = "gene") %>%
drop_na(padj) %>%
filter(padj<0.05 & |log2FoldChange| > 1)
Treatment_Treated_vs_Untreated %>%
as.data.frame() %>%
rownames_to_column(var = "gene") %>%
drop_na(padj) %>%
filter(padj<0.05 & abs(log2FoldChange) > 1)
Treatment_Treated_vs_Untreated %>%
as.data.frame() %>%
rownames_to_column(var = "gene") %>%
drop_na(padj) %>%
filter(padj<0.05 & abs(log2FoldChange) > 1) %>%
length()
Treatment_Treated_vs_Untreated %>%
as.data.frame() %>%
rownames_to_column(var = "gene") %>%
drop_na(padj) %>%
filter(padj<0.05 & abs(log2FoldChange) > 1) %>%
length()
Treatment_Treated_vs_Untreated %>%
as.data.frame() %>%
rownames_to_column(var = "gene") %>%
drop_na(padj) %>%
filter(padj<0.05 & abs(log2FoldChange) > 1) %>%
str()
