labs(y = "Temperature (°C)",
x = "Date") +
theme(text = element_text(size = 15)) +
geom_point() +
geom_errorbar(aes(fill=Treatment, group = Treatment, ymin = mean_temp - se, ymax = mean_temp + se), alpha = 0.2) +
scale_color_manual(labels=c( "Heat stress"), values = c( "#F54A34"))+
#scale_fill_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))
#ggsave("slowburnheatstress.pdf", width = 9, height = 6)
```
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
filter(!(Time >= "2022-07-14 00:00:00" & Tank == "T8")) %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress")) %>%
group_by(Time, Treatment) %>%
summarise(mean_temp = mean(Temp), se = std.error(Temp)) %>%
filter(!Treatment == "ambient") %>%
ggplot(data = .,
aes(x = Time, y = mean_temp, color = Treatment)) +
geom_point() +
theme_classic() +
labs(y = "Temperature (°C)",
x = "Date") +
theme(text = element_text(size = 15)) +
geom_point() +
geom_errorbar(aes(fill=Treatment, group = Treatment, ymin = mean_temp - se, ymax = mean_temp + se), alpha = 0.2) +
scale_color_manual(labels=c( "Heat stress"), values = c( "#F54A34"))
heatstressassay$Time <- lubridate::round_date(heatstressassay$Time, unit = "60 min")
heatstressassay %>%
dplyr::select(Time, T3, T4, T7, T8) %>%
pivot_longer(T3:T8, names_to="Tank", values_to ="Temp") %>%
filter(!(Time >= "2022-07-14 00:00:00" & Tank == "T8")) %>%
mutate(Treatment = case_when(Tank == "T3" ~ "heatstress",
Tank == "T4" ~ "heatstress",
Tank == "T7" ~ "ambient",
Tank == "T8" ~ "heatstress")) %>%
group_by(Time, Treatment) %>%
summarise(mean_temp = mean(Temp), se = std.error(Temp)) %>%
filter(!Treatment == "ambient") %>%
ggplot(data = .,
aes(x = Time, y = mean_temp, color = Treatment)) +
geom_point() +
theme_classic() +
labs(y = "Temperature (°C)",
x = "Date") +
theme(text = element_text(size = 15)) +
geom_point() +
geom_errorbar(aes(fill=Treatment, group = Treatment, ymin = mean_temp - se, ymax = mean_temp + se), alpha = 0.2) +
scale_color_manual(labels=c( "Heat stress"), values = c( "#F54A34"))
#scale_fill_manual(labels=c("Ambient", "Heat stress"), values = c( "#60DBDB", "#F54A34"))
ggsave("slowburnheatstress.pdf", width = 9, height = 6)
setwd("~/Library/CloudStorage/OneDrive-UniversityofMiami/GitHub/Ch2_temperaturevariability2023/physiology/4_R_intensity")
library(tidyverse)
library(readxl)
library(rstatix)
library(plotrix)
library(ggpubr)
library(cowplot)
library(dunn.test)
Rscoredata <- read_xlsx("data_rscores.xlsx")
Rscoredata %>%
rename(`Photo ID` = `Image #`) %>%
rename(Date = `Date (Folder Name)`) -> Rscoredata
initialphotos <- read_xlsx("photo_metadata.xlsx")
april18 <- read_xlsx("photo_metadata.xlsx", sheet = "april 18")
june21 <- read_xlsx("photo_metadata.xlsx", sheet = "june 21")
july8 <- read_xlsx("photo_metadata.xlsx", sheet = "july 8")
coral_metadata <- readxl::read_xlsx("../metadata.xlsx")
coral_metadata %>%
dplyr::select(Species:CBASS_tank) -> coral_metadata
str(initialphotos)
initialphotos %>%
dplyr::select(`Photo ID`:`Coral Position`) -> initialphotos
str(april18)
april18 %>%
dplyr::select(`Photo ID`:`Coral Position`) -> april18
str(june21)
june21%>%
dplyr::select(`Photo ID`:`Coral Position`) -> june21
str(july8)
july8 %>%
dplyr::select(`Photo ID`:`Coral Position`) -> july8
full_join(initialphotos, april18) %>%
full_join(., june21) %>%
full_join(., july8) -> allRscores
allRscores
#Tank column depends on time point, as the tank assignments changed throughout timeline. But, should be able to use the Puck ID + Species as the unique identifier
allRscores %>%
mutate(Species = case_when(Species == "Acer" ~ "Acropora cervicornis",
Species == "Pcli" ~ "Pseudodiploria clivosa")) -> allRscores
allRscores %>%
rename(ID = `Puck ID`) -> allRscores #821 rows
full_join(allRscores, coral_metadata, by = c("Species", "ID")) %>%
drop_na(`Photo ID`)  -> allmetadata #821 rows
full_join(allmetadata, Rscoredata, by = c("Date", "Photo ID", "Coral Position")) -> Rintensity_withmetadata
Rintensity_withmetadata %>%
dplyr::select(!Genotype) -> Rintensity_withmetadata
Rintensity_withmetadata$month <- format(Rintensity_withmetadata$Date, "%m")
Rintensity_withmetadata$Date <- as.factor(Rintensity_withmetadata$Date)
Rintensity_withmetadata$month <- as.factor(Rintensity_withmetadata$month)
Rintensity_withmetadata %>%
group_by(ID, Species, Colony, Treatment, month) %>%
mutate(mean_Rintensity_percoral = mean(Mean)) -> Rintensity_withmetadata
# Rintensity_withmetadata %>%
#   filter(is.na(Species)) #photo 4709 is a duplicate from photo 4711 so I already have these values in the spreadsheet
Rintensity_withmetadata %>%
drop_na(ID) -> Rintensity_withmetadata
```{r}
ggplot(Rintensity_withmetadata,aes(x = month, y= mean_Rintensity_percoral, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species, scales = "free") +
ylim(0, 255) +
labs(y = "R Intensity") +
theme(text = element_text(size = 13)) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))
Rintensity_withmetadata %>%
ungroup() %>%
filter(month == "03" | month == "04") %>%
dplyr::select(ID, Species, Colony, Treatment, Treatment_Tank, month, mean_Rintensity_percoral) %>%
distinct() %>%
pivot_wider(names_from = "month", values_from = "mean_Rintensity_percoral") %>%
mutate(percent_change = ((`04`-`03`)/`03`)*100) -> percentchange
percentchange %>%
drop_na() -> percentchange #7 corals were not measured in the second time point
percentchange %>%
select(ID:Treatment, percent_change) %>%
write_csv("treatment_Rscore.csv")
#sample sizes
percentchange %>%
group_by(Species, Colony, Treatment) %>%
summarise(count = n())
ggplot(percentchange,aes(x = Treatment, y= percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species, scales = "free") +
labs(y = "Percent Change in R-Intensity") +
theme(text = element_text(size = 15)) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(legend.position="none")
percentchange
Rintensity_withmetadata %>%
ungroup() %>%
filter(month == "03" | month == "04") %>%
dplyr::select(ID, Species, Colony, Treatment, Treatment_Tank, month, mean_Rintensity_percoral) %>%
distinct() %>%
pivot_wider(names_from = "month", values_from = "mean_Rintensity_percoral") %>%
mutate(percent_change = ((`03`-`04`)/`03`)*100) -> percentchange
percentchange %>%
drop_na() -> percentchange #7 corals were not measured in the second time point
ggplot(percentchange,aes(x = Treatment, y= percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species, scales = "free") +
labs(y = "Percent Change in R-Intensity") +
theme(text = element_text(size = 15)) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(legend.position="none")
ggplot(percentchange,aes(x = Treatment, y= percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
facet_wrap(~Species, scales = "free") +
labs(y = "Percent Change in R-Intensity") +
theme(text = element_text(size = 15)) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))
ggplot(percentchange,aes(x = Treatment, y= percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
#facet_wrap(~Species, scales = "free") +
labs(y = "Percent Change in R-Intensity") +
theme(text = element_text(size = 15)) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))
ggplot(percentchange,aes(x = Species, y= percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
#facet_wrap(~Species, scales = "free") +
labs(y = "Percent Change in R-Intensity") +
theme(text = element_text(size = 15)) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))
ggplot(percentchange,aes(x = Species, y= percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
labs(y = "Percent Change in R-Intensity") +
theme(text = element_text(size = 15)) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))
ggplot(percentchange,aes(x = Species, y= percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
labs(y = "Percent Decline in Color Score") +
theme(text = element_text(size = 15)) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))
ggplot(percentchange,aes(x = Species, y= percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
labs(y = "Percent Decline in Color Score") +
theme(text = element_text(size = 15))
ggplot(percentchange,aes(x = Species, y= percent_change, fill = Treatment)) +
geom_boxplot() +
theme_classic() +
labs(y = "Percent Decline in Color Score") +
theme(text = element_text(size = 15)) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))
ggsave("percentdeclinecolorscore_species.pdf")
setwd("~/Library/CloudStorage/OneDrive-UniversityofMiami/GitHub/Ch2_temperaturevariability2023/physiology/3_photosynthetic_efficiency")
library(tidyverse)
library(plotrix)
library(ggpubr)
library(rstatix)
library(cowplot)
ipam_tidy_data <- read.csv("ipam_tidy_data.csv")
treatment_time_bothspecies <- ipam_tidy_data %>%
dplyr::filter(!Treatment_period == "CBASS") %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
dplyr::select(Date, Colony, Puck, Tank, fvfm, Treatment, Species) %>%
mutate(Date = mdy(Date)) %>%
dplyr::filter(Date <= "2022-04-20") %>%
pivot_wider(names_from = Date, values_from = fvfm) %>%
mutate(fvfm_t0 = case_when(Species == "Acervicornis" ~ `2022-03-16`,
Species == "Pclivosa" ~ `2022-03-21`)) %>%
mutate(fvfm_t1 = case_when(Species == "Acervicornis" ~ `2022-04-06`,
Species == "Pclivosa" ~ `2022-04-06`)) %>%
mutate(fvfm_t2 = case_when(Species == "Acervicornis" ~ `2022-04-20`,
Species == "Pclivosa" ~ `2022-04-20`)) %>%
pivot_longer(fvfm_t0:fvfm_t2, names_to = "fvfm_timepoint", values_to = "fvfm") %>%
mutate(numDays = case_when(fvfm_timepoint == "fvfm_t0" ~ 0,
Species == "Pclivosa" & fvfm_timepoint == "fvfm_t1" ~ 16,
Species == "Acervicornis" & fvfm_timepoint == "fvfm_t1" ~ 21,
Species == "Pclivosa" & fvfm_timepoint == "fvfm_t2" ~ 30,
Species == "Acervicornis" & fvfm_timepoint == "fvfm_t2" ~ 35,
Species == "Pclivosa" & fvfm_timepoint == "fvfm_t3" ~ 65,
Species == "Acervicornis" & fvfm_timepoint == "fvfm_t3" ~ 70))
treatment_normalized_bothspecies <- ipam_tidy_data %>%
dplyr::filter(!Treatment_period == "CBASS") %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
dplyr::select(Date, Colony, Puck, Tank, fvfm, Treatment, Species)  %>%
mutate(Date = mdy(Date)) %>%
dplyr::filter(Date <= "2022-04-20") %>% #pre-CBASS time points
pivot_wider(names_from = Date, values_from = fvfm) %>%
mutate(fvfm_loss = case_when(Species == "Acervicornis" ~ `2022-03-16` - `2022-04-20`,
Species == "Pclivosa" ~ `2022-03-21` - `2022-04-20`)) %>%
mutate(fvfm_loss_norm = case_when(Species == "Acervicornis" ~ (fvfm_loss/`2022-03-16`)*100,
Species == "Pclivosa" ~ (fvfm_loss/`2022-03-21`)*100))
#save data for WGCNA
treatment_normalized_bothspecies %>%
select(Colony, Puck, Treatment, Species, fvfm_loss, fvfm_loss_norm) %>%
write_csv("treatment_fvfm.csv")
treatment_normalized_bothspecies%>%
ggplot(., aes(x=Treatment, y= fvfm_loss_norm, fill= Treatment)) +
geom_boxplot() +
theme_classic() +
labs(y = "% Decline in Fv/Fm", x="Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15)) +
facet_wrap(~Species) +
theme(legend.position="none")
treatment_normalized_bothspecies <- ipam_tidy_data %>%
dplyr::filter(!Treatment_period == "CBASS") %>%
drop_na(Colony) %>% #this is because there are some corals that never matched up to IPAM values so they're just NA
dplyr::select(Date, Colony, Puck, Tank, fvfm, Treatment, Species)  %>%
mutate(Date = mdy(Date)) %>%
dplyr::filter(Date <= "2022-04-20") %>% #pre-CBASS time points
pivot_wider(names_from = Date, values_from = fvfm) %>%
mutate(fvfm_loss = case_when(Species == "Acervicornis" ~ `2022-04-20` - `2022-03-16`,
Species == "Pclivosa" ~ `2022-04-20` - `2022-03-21`)) %>%
mutate(fvfm_loss_norm = case_when(Species == "Acervicornis" ~ (fvfm_loss/`2022-03-16`)*100,
Species == "Pclivosa" ~ (fvfm_loss/`2022-03-21`)*100))
treatment_time_bothspecies%>%
dplyr::select(!c(`2022-04-06`:`2022-04-20`)) %>%
mutate(numDays = as.factor(numDays)) %>%
ggplot(., aes(x=numDays, y=fvfm, fill = Treatment)) +
geom_boxplot(color = "black") +
stat_summary(fun=mean, geom="line", aes(group=Treatment, color = Treatment), position = position_dodge(width = 0.5)) +
facet_wrap(~Species + Colony) +
theme_classic() +
labs(y = "Fv/Fm", x = "Days in Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB"))  +
theme(text = element_text(size = 14))
treatment_normalized_bothspecies%>%
ggplot(., aes(x=Treatment, y= fvfm_loss_norm, fill= Treatment)) +
geom_boxplot() +
theme_classic() +
labs(y = "% Decline in Fv/Fm", x="Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15)) +
facet_wrap(~Species) +
theme(legend.position="none")
treatment_normalized_bothspecies%>%
ggplot(., aes(x=Species, y= fvfm_loss_norm, fill= Treatment)) +
geom_boxplot() +
theme_classic() +
labs(y = "% Decline in Fv/Fm", x="Treatment") +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
theme(text = element_text(size = 15)) +
theme(legend.position="none")
ggsave("treatment_normalized_bothspecies_boxplot.pdf")
setwd("~/Library/CloudStorage/OneDrive-UniversityofMiami/GitHub/Ch2_temperaturevariability2023/physiology/5_immune_cell_assay")
library(tidyverse)
library(plotrix)
library(ggpubr)
library(rstatix)
library(cowplot)
library(dunn.test)
library(Rmisc)
library(plyr)
library(dplyr)
percent_cells_df <- read_csv("Grace_percentcells_alldata.csv")
percent_cells_df%>%
mutate(Treatment = case_when(Treatment == "Control" ~ "Untreated",
Treatment == "Variable" ~ "Treated")) -> percent_cells_df
#there's one outlier to remove right off the bat: T1	Pcli	B	P9	r2	Percent=111.50	T1	Untreated
percent_cells_df %>%
filter(!(TimePoint=="T1" & Species == "Pcli" & Genotype == "B" & Treatment == "Untreated" & ID == "P9" & Replicate == "r2")) -> percent_cells_df
#replicates are technical replicates of the same coral fragment
#time points:
#T0 = initial pre-treatment (March 22)
#T1 = one week into treatment (March 30)
#T2 = end of treatment (April 20)
#follow-up = post CBASS and treatment follow-up (June 1)
percent_cells_df %>%
mutate(num_days = case_when(TimePoint == "T0" ~ "0",
TimePoint == "T1" ~ "7",
TimePoint == "T2" ~ "28",
TimePoint == "FollowUp" ~ "71")) %>%
mutate(num_days = as.factor(num_days)) %>%
mutate(num_days = fct_relevel(num_days, "0", "7", "28", "71")) -> percent_cells_df
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent), se_replicate_percent_perID = std.error(Percent)) %>%
ungroup() %>%
select(Species, Genotype, ID, Tank, Treatment, num_days, mean_replicate_percent_perID) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28") -> percent_cells_speciestreatments
percent_cells_speciestreatments
percent_cells_speciestreatments %>%
ggplot(., aes(x=Species, y=mean_replicate_percent_perID, fill= Treatment)) +
geom_boxplot()
percent_cells_speciestreatments %>%
ggplot(., aes(x=num_days, y=mean_replicate_percent_perID, fill= Treatment)) +
geom_boxplot() +
facet_wrap(~Species)
percent_cells_speciestreatments %>%
ggplot(., aes(x=num_days, y=mean_replicate_percent_perID, fill= Treatment)) +
geom_boxplot() +
facet_wrap(~Species)  +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
xlab("Number of Days")+
ylab("% Phagocytic Activity")+
theme(text = element_text(size = 15))
percent_cells_speciestreatments %>%
ggplot(., aes(x=num_days, y=mean_replicate_percent_perID, fill= Treatment)) +
geom_boxplot() +
facet_wrap(~Species)  +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
xlab("Number of Days")+
ylab("% Phagocytic Activity")+
theme(text = element_text(size = 15)) +
theme_classic()
percent_cells_speciestreatments %>%
ggplot(., aes(x=num_days, y=mean_replicate_percent_perID, fill= Treatment)) +
geom_boxplot() +
facet_wrap(~Species)  +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
xlab("Number of Days")+
ylab("% Phagocytic Activity")+
theme_classic() +
theme(text = element_text(size = 15))
percent_cells_speciestreatments
percent_cells_speciestreatments %>%
select(!ID)
percent_cells_speciestreatments %>%
select(!ID) %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_perID")
percent_cells_speciestreatments %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_perID")
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, Tank, Treatment) %>%
dplyr::mutate(mean_replicate_percent_pertank = mean(Percent), se_replicate_percent_pertank = std.error(Percent)) %>%
ungroup() %>%
select(Species, Genotype, ID, Tank, Treatment, num_days, mean_replicate_percent_pertank) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28") %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_pertank")
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, Tank, Treatment) %>%
dplyr::mutate(mean_replicate_percent_pertank = mean(Percent), se_replicate_percent_pertank = std.error(Percent)) %>%
ungroup() %>%
select(Species, Genotype, ID, Tank, Treatment, num_days, mean_replicate_percent_pertank) %>%
distinct()
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, Tank, Treatment) %>%
dplyr::mutate(mean_replicate_percent_pertank = mean(Percent), se_replicate_percent_pertank = std.error(Percent)) %>%
ungroup() %>%
select(Species, Genotype, Tank, Treatment, num_days, mean_replicate_percent_pertank) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28") %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_pertank")
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, Tank, Treatment) %>%
dplyr::mutate(mean_replicate_percent_pertank = mean(Percent), se_replicate_percent_pertank = std.error(Percent)) %>%
ungroup() %>%
select(Species, Genotype, Tank, Treatment, num_days, mean_replicate_percent_pertank) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28") %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_pertank") %>%
mutate(percent_change = ((`28`-`0`)/`0`) *100)
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, Tank, Treatment) %>%
dplyr::mutate(mean_replicate_percent_pertank = mean(Percent), se_replicate_percent_pertank = std.error(Percent)) %>%
ungroup() %>%
select(Species, Genotype, Tank, Treatment, num_days, mean_replicate_percent_pertank) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28") %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_pertank") %>%
mutate(percent_change = ((`28`-`0`)/`0`) *100) %>%
ggplot(., aes(x=Species, y=percent_change, fill= Treatment)) +
geom_boxplot() +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
ylab("% Phagocytic Activity")+
theme_classic() +
theme(text = element_text(size = 15))
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, Tank, Treatment) %>%
dplyr::mutate(mean_replicate_percent_pertank = mean(Percent), se_replicate_percent_pertank = std.error(Percent)) %>%
ungroup() %>%
select(Species, Genotype, Tank, Treatment, num_days, mean_replicate_percent_pertank) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28") %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_pertank") %>%
mutate(percent_change = ((`28`-`0`)/`0`) *100)
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, Tank, Treatment) %>%
dplyr::mutate(mean_replicate_percent_pertank = mean(Percent), se_replicate_percent_pertank = std.error(Percent)) %>%
ungroup() %>%
select(Species, Genotype, Tank, Treatment, num_days, mean_replicate_percent_pertank) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28") %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_pertank") %>%
mutate(percent_change = ((`28`-`0`)/`0`) *100) %>%
ggplot(., aes(x=Species, y=percent_change, fill= Treatment)) +
geom_point() +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
ylab("% Phagocytic Activity")+
theme_classic() +
theme(text = element_text(size = 15))
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, Tank, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent)) %>%
ungroup() %>%
select(Species, Genotype, Tank, Treatment, num_days, mean_replicate_percent_perID) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28")
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent)) %>%
ungroup() %>%
select(Species, Genotype, Tank, Treatment, num_days, mean_replicate_percent_perID) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28") %>%
pivot_wider(names_from = "num_days", values_from = "mean_replicate_percent_pertank") %>%
mutate(percent_change = ((`28`-`0`)/`0`) *100) %>%
ggplot(., aes(x=Species, y=percent_change, fill= Treatment)) +
geom_point() +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
ylab("% Phagocytic Activity")+
theme_classic() +
theme(text = element_text(size = 15))
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent)) %>%
ungroup() %>%
select(Species, Genotype, Tank, Treatment, num_days, mean_replicate_percent_perID) %>%
distinct() %>%
filter(num_days == "0" | num_days == "28")
percent_cells_df %>%
drop_na() %>% #one technical replicate is NA for one coral ID
dplyr::filter(TimePoint == "T0" | TimePoint == "T2") %>%
dplyr::group_by(num_days, Species, ID, Treatment) %>%
dplyr::mutate(mean_replicate_percent_perID = mean(Percent), se_replicate_percent_perID = std.error(Percent)) %>%
ungroup() %>%
ggplot(., aes(x = num_days, y = mean_replicate_percent_perID, fill = Treatment))+
geom_boxplot() +
facet_wrap(~Species) +
theme_classic()+
scale_color_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
scale_fill_manual(labels=c("Treated", "Untreated"), values = c("#F54A34", "#60DBDB")) +
xlab("Day")+
ylab("% Phagocytic Activity")+
theme(text = element_text(size = 15))
ggsave("percentcells_species_boxplots.pdf")
load("RData_files/wgcnaData.RData")
setwd("~/Library/CloudStorage/OneDrive-UniversityofMiami/GitHub/Ch2_temperaturevariability2023/gene_expression/Acervicornis")
load("RData_files/wgcnaData.RData")
View(traits)
View(datt)
lnames=load("RData_files/data4wgcna.RData")
rownames(design)
rownames(traits)
all.equal(colnames(vsd.wg), rownames(design)) #TRUE
