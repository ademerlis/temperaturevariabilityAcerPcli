) %>%
mutate(direction = case_when(delta.rank > 0 ~ "Up-Regulated",
delta.rank < 0 ~ "Down-Regulated")) %>%
ggplot(., aes(x = reorder(name, delta.rank), y = delta.rank)) +
geom_point(aes(size = p.adj, color = direction)) +
theme_bw() +
labs(x = "BP GO Term Description", y = "MWU Delta Rank", title = "Acer Unqiue Treated vs. Initial BP GO Terms") +
coord_flip() +
scale_size_continuous(range = c(6, 1)) +
scale_color_manual(values = c("Up-Regulated" = "red", "Down-Regulated" = "blue"))
#filter for top 10 based on delta-rank = top 5 negative and top 5 positive
unique_Untreated_vs_Initial %>%
top_n(5, wt = delta.rank) %>%
bind_rows(
unique_Untreated_vs_Initial %>%
# Get top 5 negative by sorting on absolute values
filter(delta.rank < 0) %>%
top_n(5, wt = abs(delta.rank))
) %>%
mutate(direction = case_when(delta.rank > 0 ~ "Up-Regulated",
delta.rank < 0 ~ "Down-Regulated")) %>%
ggplot(., aes(x = reorder(name, delta.rank), y = delta.rank)) +
geom_point(aes(size = p.adj, color = direction)) +
theme_bw() +
labs(x = "BP GO Term Description", y = "MWU Delta Rank", title = "Acer Unqiue Untreated vs. Initial BP GO Terms") +
coord_flip() +
scale_size_continuous(range = c(6, 1)) +
scale_color_manual(values = c("Up-Regulated" = "red", "Down-Regulated" = "blue"))
#filter for top 10 based on delta-rank = top 5 negative and top 5 positive
p1 <- unique_Treated_vs_Untreated %>%
top_n(5, wt = delta.rank) %>%
bind_rows(
unique_Treated_vs_Untreated %>%
# Get top 5 negative by sorting on absolute values
filter(delta.rank < 0) %>%
top_n(5, wt = abs(delta.rank))
) %>%
mutate(direction = case_when(delta.rank > 0 ~ "Up-Regulated",
delta.rank < 0 ~ "Down-Regulated")) %>%
ggplot(., aes(x = reorder(name, delta.rank), y = delta.rank)) +
geom_point(aes(size = p.adj, color = direction)) +
theme_bw() +
labs(x = "BP GO Term Description", y = "MWU Delta Rank", title = "Acer Unqiue Treated vs. Untreated BP GO Terms") +
coord_flip() +
scale_size_continuous(range = c(6, 1)) +
scale_color_manual(values = c("Up-Regulated" = "red", "Down-Regulated" = "blue"))
#filter for top 10 based on delta-rank = top 5 negative and top 5 positive
p2<-unique_Treated_vs_Initial %>%
top_n(5, wt = delta.rank) %>%
bind_rows(
unique_Treated_vs_Initial %>%
# Get top 5 negative by sorting on absolute values
filter(delta.rank < 0) %>%
top_n(5, wt = abs(delta.rank))
) %>%
mutate(direction = case_when(delta.rank > 0 ~ "Up-Regulated",
delta.rank < 0 ~ "Down-Regulated")) %>%
ggplot(., aes(x = reorder(name, delta.rank), y = delta.rank)) +
geom_point(aes(size = p.adj, color = direction)) +
theme_bw() +
labs(x = "BP GO Term Description", y = "MWU Delta Rank", title = "Acer Unqiue Treated vs. Initial BP GO Terms") +
coord_flip() +
scale_size_continuous(range = c(6, 1)) +
scale_color_manual(values = c("Up-Regulated" = "red", "Down-Regulated" = "blue"))
#filter for top 10 based on delta-rank = top 5 negative and top 5 positive
p3<- unique_Untreated_vs_Initial %>%
top_n(5, wt = delta.rank) %>%
bind_rows(
unique_Untreated_vs_Initial %>%
# Get top 5 negative by sorting on absolute values
filter(delta.rank < 0) %>%
top_n(5, wt = abs(delta.rank))
) %>%
mutate(direction = case_when(delta.rank > 0 ~ "Up-Regulated",
delta.rank < 0 ~ "Down-Regulated")) %>%
ggplot(., aes(x = reorder(name, delta.rank), y = delta.rank)) +
geom_point(aes(size = p.adj, color = direction)) +
theme_bw() +
labs(x = "BP GO Term Description", y = "MWU Delta Rank", title = "Acer Unqiue Untreated vs. Initial BP GO Terms") +
coord_flip() +
scale_size_continuous(range = c(6, 1)) +
scale_color_manual(values = c("Up-Regulated" = "red", "Down-Regulated" = "blue"))
library(cowplot)
plot_grid(p1, p2, p3, nrow = 1, ncol = 3)
plot_grid(p1, p2, p3, nrow = 3, ncol = 1)
#filter for top 10 based on delta-rank = top 5 negative and top 5 positive
p1 <- unique_Treated_vs_Untreated %>%
top_n(5, wt = delta.rank) %>%
bind_rows(
unique_Treated_vs_Untreated %>%
# Get top 5 negative by sorting on absolute values
filter(delta.rank < 0) %>%
top_n(5, wt = abs(delta.rank))
) %>%
mutate(direction = case_when(delta.rank > 0 ~ "Up-Regulated",
delta.rank < 0 ~ "Down-Regulated")) %>%
ggplot(., aes(x = reorder(name, delta.rank), y = delta.rank)) +
geom_point(aes(size = p.adj, color = direction)) +
theme_bw() +
labs(x = "BP GO Term Description", y = "MWU Delta Rank", title = "Acer Unqiue Treated vs. Untreated BP GO Terms") +
coord_flip() +
scale_size_continuous(range = c(6, 1)) +
scale_color_manual(values = c("Up-Regulated" = "red", "Down-Regulated" = "blue")) +
coord_cartesian(xlim = c(-4000, -1500)) +  # Set the first segment of x-axis visual limits to exclude zero
coord_cartesian(xlim = c(1500, 4000))
unique_Treated_vs_Untreated %>%
top_n(5, wt = delta.rank) %>%
bind_rows(
unique_Treated_vs_Untreated %>%
# Get top 5 negative by sorting on absolute values
filter(delta.rank < 0) %>%
top_n(5, wt = abs(delta.rank))
) %>%
mutate(direction = case_when(delta.rank > 0 ~ "Up-Regulated",
delta.rank < 0 ~ "Down-Regulated")) %>%
ggplot(., aes(x = reorder(name, delta.rank), y = delta.rank)) +
geom_point(aes(size = p.adj, color = direction)) +
theme_bw() +
labs(x = "BP GO Term Description", y = "MWU Delta Rank", title = "Acer Unqiue Treated vs. Untreated BP GO Terms") +
coord_flip() +
scale_size_continuous(range = c(6, 1)) +
scale_color_manual(values = c("Up-Regulated" = "red", "Down-Regulated" = "blue")) +
coord_cartesian(xlim = c(-4000, -1500)) +  # Set the first segment of x-axis visual limits to exclude zero
coord_cartesian(xlim = c(1500, 4000))
unique_Treated_vs_Untreated %>%
top_n(5, wt = delta.rank) %>%
bind_rows(
unique_Treated_vs_Untreated %>%
# Get top 5 negative by sorting on absolute values
filter(delta.rank < 0) %>%
top_n(5, wt = abs(delta.rank))
) %>%
mutate(direction = case_when(delta.rank > 0 ~ "Up-Regulated",
delta.rank < 0 ~ "Down-Regulated")) %>%
ggplot(., aes(x = reorder(name, delta.rank), y = delta.rank)) +
geom_point(aes(size = p.adj, color = direction)) +
theme_bw() +
labs(x = "BP GO Term Description", y = "MWU Delta Rank", title = "Acer Unqiue Treated vs. Untreated BP GO Terms") +
scale_size_continuous(range = c(6, 1)) +
scale_color_manual(values = c("Up-Regulated" = "red", "Down-Regulated" = "blue")) +
coord_cartesian(xlim = c(-4000, -1500)) +  # Set the first segment of x-axis visual limits to exclude zero
coord_cartesian(xlim = c(1500, 4000)) +
coord_flip()
#filter for top 10 based on delta-rank = top 5 negative and top 5 positive
p1 <- unique_Treated_vs_Untreated %>%
top_n(5, wt = delta.rank) %>%
bind_rows(
unique_Treated_vs_Untreated %>%
# Get top 5 negative by sorting on absolute values
filter(delta.rank < 0) %>%
top_n(5, wt = abs(delta.rank))
) %>%
mutate(direction = case_when(delta.rank > 0 ~ "Up-Regulated",
delta.rank < 0 ~ "Down-Regulated")) %>%
ggplot(., aes(x = reorder(name, delta.rank), y = delta.rank)) +
geom_point(aes(size = p.adj, color = direction)) +
theme_bw() +
labs(x = "BP GO Term Description", y = "MWU Delta Rank", title = "Acer Unqiue Treated vs. Untreated BP GO Terms") +
coord_flip() +
scale_size_continuous(range = c(6, 1)) +
scale_color_manual(values = c("Up-Regulated" = "red", "Down-Regulated" = "blue"))
plot_grid(p1, p2, p3, nrow = 3, ncol = 1)
ggsave("unique_GO_BP_terms_allcontrasts.pdf", width = 10, height = 20)
plot_grid(p1, p2, p3, nrow = 1, ncol = 3)
ggsave("unique_GO_BP_terms_allcontrasts.pdf", width = 10, height = 5)
plot_grid(p1, p2, p3, nrow = 1, ncol = 3)
ggsave("unique_GO_BP_terms_allcontrasts.pdf", width = 20, height = 5)
plot_grid(p1, p2, p3, nrow = 1, ncol = 3)
ggsave("unique_GO_BP_terms_allcontrasts.pdf", width = 22, height = 5)
unique_Treated_vs_Untreated %>%
top_n(5, wt = delta.rank) %>%
bind_rows(
unique_Treated_vs_Untreated %>%
# Get top 5 negative by sorting on absolute values
filter(delta.rank < 0) %>%
top_n(5, wt = abs(delta.rank))
) %>%
mutate(direction = case_when(delta.rank > 0 ~ "Up-Regulated",
delta.rank < 0 ~ "Down-Regulated"))
library(DESeq2)
library(arrayQualityMetrics)
library(tidyverse)
load("RData_files/initial_fullddsdesigncountsVsdcountsWGCNA.RData")
pca <- prcomp(t(assay(Vsd)))
summary(pca)
fviz_eig(pca)
vsd2 <- removeBatchEffect(assay(Vsd), batch = Vsd$Genotype)
library(limma)
vsd2 <- removeBatchEffect(assay(Vsd), batch = Vsd$Genotype)
# formal analysis of variance in distance matricies:
ad=adonis2(t(vsd2)~Genotype + Treatment,data=conditions,method="manhattan",permutations=1e6)
library(vegan)
# formal analysis of variance in distance matricies:
ad=adonis2(t(vsd2)~Genotype + Treatment,data=conditions,method="manhattan",permutations=1e6)
# formal analysis of variance in distance matricies:
ad=adonis2(t(vsd2)~Genotype + Treatment,data=design,method="manhattan",permutations=1e6)
summary(ad)
as.data.frame(ad)
knitr::opts_chunk$set(echo = TRUE)
library(KEGGREST)
library(tidyverse)
library(pathview)
library(clusterProfiler)
library(enrichplot)
library(KEGGREST)
library(tidyverse)
library(pathview)
library(clusterProfiler)
library(enrichplot)
kegg.list <- read.table("bioinformatics/Acervicornis_iso2kegg.tab")
colnames(kegg.list) <- c("TranscriptID","KO")
dim(kegg.list)
kegg.list %>%
mutate(gene = str_replace(TranscriptID, "Acervicornis", "Acropora_")) %>%
select(!TranscriptID) -> kegg.list
load("RData_files/Treated_vs_Initial_fc.RData")
TreatedvInitial_DGEs <- read_csv("results_csv/TreatedvInitial_annotDGEs.csv") #5,733 genes
Treated_vs_Initial.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvInitial_DGEs, by = "gene") %>%  #narrow down to only the DGEs
select(lfc, KO) %>%
na.omit() %>% #3,472 genes
distinct(KO, .keep_all = TRUE) %>% #2,578 distinct KEGG terms
column_to_rownames(var = "KO") -> TreatedvInitial_KEGG_DGEs
KEGG_enrich_TvI <- enrichKEGG(
gene = rownames(TreatedvInitial_KEGG_DGEs),
organism = "ko",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
universe = kegg.list$KO
)
dotplot(KEGG_enrich_TvI)
length(unique(KEGG_enrich_TvI@result$Description)) #333 unique KEGG terms
unique(KEGG_enrich@result$category)
length(unique(KEGG_enrich_TvI@result$Description)) #333 unique KEGG terms
KEGG_enrich_TvI@result$geneID
pathway_ids <- rownames(KEGG_enrich_TvI@result)
# Retrieve information for each pathway
pathway_info <- lapply(pathway_ids, keggGet)
# Extract pathway names and categories
pathway_details <- sapply(pathway_info, function(x) {
pathway_name <- x[[1]]$NAME
pathway_category <- x[[1]]$CLASS
return(c(Name = pathway_name, Category = pathway_category))
})
# Display the pathway names and categories
print(pathway_details)
pathway_categories_df <- tibble(
Pathway_ID = names(pathway_details),
Details = pathway_details
)
pathway_categories_df <- pathway_categories_df %>%
mutate(Description = sapply(Details, function(x) x[1]),
Category = sapply(Details, function(x) x[2])) %>%
select(-Details)
KEGG_enrich_TvI_categories <- left_join(KEGG_enrich_TvI@result, pathway_categories_df, by = "Description")
length(unique(KEGG_enrich_TvI_categories$Category)) #45 unique categories
filtered_KEGG_enrich_TvI <- KEGG_enrich_TvI_categories %>% filter(!grepl("Human Diseases", Category, ignore.case = TRUE))
str(filtered_KEGG_enrich_TvI) #247 KEGG terms
length(unique(filtered_KEGG_enrich_TvI$Category)) #34 categories
filtered_KEGG_enrich_TvI$GeneRatio <- sapply(filtered_KEGG_enrich_TvI$GeneRatio, function(x) {
eval(parse(text=x))
})
filtered_KEGG_enrich_TvI %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = GeneRatio)) +
geom_point(aes(size = Count, color = p.adjust)) +
theme_minimal() +
labs(x = "MAP Description", y = "Gene Ratio", title = "Treated vs. Initial") +
coord_flip() +
scale_colour_gradient(low="blue", high="red")
#ggsave("TreatedvsInitial_KEGGenrichment_p0.05.pdf")
ggsave("TreatedvsInitial_KEGGenrichment_p0.05.pdf")
library(cowplot)
p1<- filtered_KEGG_enrich_TvI %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = GeneRatio)) +
geom_point(aes(size = Count, color = p.adjust)) +
theme_minimal() +
labs(x = "MAP Description", y = "Gene Ratio", title = "Treated vs. Initial") +
coord_flip() +
scale_colour_gradient(low="blue", high="red")
load("RData_files/Treated_vs_Untreated_fc.RData")
TreatedvUntreated_DGEs <- read_csv("results_csv/TreatedvUntreated_annotDGEs.csv") #1587 genes
Treated_vs_Untreated.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvUntreated_DGEs, by = "gene") %>%  #narrow down to only the DGEs
select(lfc, KO) %>%
na.omit() %>% #987 genes
distinct(KO, .keep_all = TRUE) %>% #832 distinct KEGG terms
column_to_rownames(var = "KO") -> TreatedvUntreated_KEGG_DGEs
Treated_vs_Untreated.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvUntreated_DGEs, by = "gene") %>%
filter(gene == "Acropora_023112")
Treated_vs_Untreated.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., TreatedvUntreated_DGEs, by = "gene") %>%
filter(gene == "Acropora_019471")
KEGG_enrich_TvU <- enrichKEGG(
gene = rownames(TreatedvUntreated_KEGG_DGEs),
organism = "ko",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
universe = kegg.list$KO
)
dotplot(KEGG_enrich_TvU)
length(unique(KEGG_enrich_TvU@result$Description)) #328 unique KEGG terms
KEGG_enrich_TvU@result$geneID
pathway_ids <- rownames(KEGG_enrich_TvU@result)
# Retrieve information for each pathway
pathway_info <- lapply(pathway_ids, keggGet)
# Extract pathway names and categories
pathway_details <- sapply(pathway_info, function(x) {
pathway_name <- x[[1]]$NAME
pathway_category <- x[[1]]$CLASS
return(c(Name = pathway_name, Category = pathway_category))
})
# Display the pathway names and categories
print(pathway_details)
pathway_categories_df <- tibble(
Pathway_ID = names(pathway_details),
Details = pathway_details
)
pathway_categories_df <- pathway_categories_df %>%
mutate(Description = sapply(Details, function(x) x[1]),
Category = sapply(Details, function(x) x[2])) %>%
select(-Details)
KEGG_enrich_TvU_categories <- left_join(KEGG_enrich_TvU@result, pathway_categories_df, by = "Description")
length(unique(KEGG_enrich_TvU_categories$Category)) #45 unique categories
filtered_KEGG_enrich_TvU <- KEGG_enrich_TvU_categories %>% filter(!grepl("Human Diseases", Category, ignore.case = TRUE))
str(filtered_KEGG_enrich_TvU) #242 KEGG terms
length(unique(filtered_KEGG_enrich_TvU$Category)) #34 categories
filtered_KEGG_enrich_TvU$GeneRatio <- sapply(filtered_KEGG_enrich_TvU$GeneRatio, function(x) {
eval(parse(text=x))
})
p2<-filtered_KEGG_enrich_TvU %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = GeneRatio)) +
geom_point(aes(size = Count, color = p.adjust)) +
theme_minimal() +
labs(x = "MAP Description", y = "Gene Ratio", title = "Treated vs. Untreated") +
coord_flip() +
scale_colour_gradient(low="blue", high="red") +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
#ggsave("TreatedvsUntreated_KEGGenrichment_p0.05.pdf")
load("RData_files/Untreated_vs_Initial.fc.RData")
UntreatedvInitial_DGEs <- read_csv("results_csv/UntreatedvInitial_annotDGEs.csv") #5,733 genes
Untreated_vs_Initial.fc %>% right_join(kegg.list, by = "gene") %>%
right_join(., UntreatedvInitial_DGEs, by = "gene") %>%  #narrow down to only the DGEs
select(lfc, KO) %>%
na.omit() %>% #4,344 genes
distinct(KO, .keep_all = TRUE) %>% #3,182 distinct KEGG terms
column_to_rownames(var = "KO") -> UntreatedvInitial_KEGG_DGEs
KEGG_enrich_UvI <- enrichKEGG(
gene = rownames(UntreatedvInitial_KEGG_DGEs),
organism = "ko",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
universe = kegg.list$KO
)
dotplot(KEGG_enrich_UvI)
length(unique(KEGG_enrich_UvI@result$Description)) #333 unique KEGG terms
KEGG_enrich_UvI@result$geneID
pathway_ids <- rownames(KEGG_enrich_UvI@result)
# Retrieve information for each pathway
pathway_info <- lapply(pathway_ids, keggGet)
filtered_KEGG_enrich_UvI <- KEGG_enrich_UvI_categories %>% filter(!grepl("Human Diseases", Category, ignore.case = TRUE))
KEGG_enrich_UvI_categories <- left_join(KEGG_enrich_UvI@result, pathway_categories_df, by = "Description")
KEGG_enrich_UvI_categories
# Retrieve information for each pathway
pathway_info <- lapply(pathway_ids, keggGet)
KEGG_enrich_UvI@result
# Retrieve information for each pathway
pathway_info <- lapply(pathway_ids, keggGet)
pathway_details <- sapply(pathway_info, function(x) {
pathway_name <- x[[1]]$NAME
pathway_category <- x[[1]]$CLASS
return(c(Name = pathway_name, Category = pathway_category))
})
# Display the pathway names and categories
print(pathway_details)
pathway_categories_df <- tibble(
Pathway_ID = names(pathway_details),
Details = pathway_details
)
pathway_categories_df <- pathway_categories_df %>%
mutate(Description = sapply(Details, function(x) x[1]),
Category = sapply(Details, function(x) x[2])) %>%
select(-Details)
KEGG_enrich_UvI_categories <- left_join(KEGG_enrich_UvI@result, pathway_categories_df, by = "Description")
length(unique(KEGG_enrich_UvI_categories$Category)) #45 unique categories
filtered_KEGG_enrich_UvI <- KEGG_enrich_UvI_categories %>% filter(!grepl("Human Diseases", Category, ignore.case = TRUE))
str(filtered_KEGG_enrich_UvI) #247 KEGG terms
length(unique(filtered_KEGG_enrich_UvI$Category)) #34 categories
filtered_KEGG_enrich_UvI$GeneRatio <- sapply(filtered_KEGG_enrich_UvI$GeneRatio, function(x) {
eval(parse(text=x))
})
p3<-filtered_KEGG_enrich_UvI %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = GeneRatio)) +
geom_point(aes(size = Count, color = p.adjust)) +
theme_minimal() +
labs(x = "MAP Description", y = "Gene Ratio", title = "Untreated vs. Initial") +
coord_flip() +
scale_colour_gradient(low="blue", high="red")
#ggsave("UntreatedvsInitial_KEGGenrichment_p0.05.pdf")
plot_grid(p1, p2, p3, ncol = 1)
p2<-filtered_KEGG_enrich_TvU %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = GeneRatio)) +
geom_point(aes(size = Count, color = p.adjust)) +
theme_minimal() +
labs(x = "MAP Description", y = "Gene Ratio", title = "Treated vs. Untreated") +
coord_flip() +
scale_colour_gradient(low="blue", high="red")
plot_grid(p1, p2, p3, ncol = 1)
p1<- filtered_KEGG_enrich_TvI %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = GeneRatio)) +
geom_point(aes(size = Count, color = p.adjust)) +
theme_minimal() +
labs(x = "MAP Description", y = "Gene Ratio", title = "Treated vs. Initial") +
coord_flip() +
scale_colour_gradient(low="blue", high="red") +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
p2<-filtered_KEGG_enrich_TvU %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = GeneRatio)) +
geom_point(aes(size = Count, color = p.adjust)) +
theme_minimal() +
labs(x = "MAP Description", y = "Gene Ratio", title = "Treated vs. Untreated") +
coord_flip() +
scale_colour_gradient(low="blue", high="red") +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
p3<-filtered_KEGG_enrich_UvI %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = GeneRatio)) +
geom_point(aes(size = Count, color = p.adjust)) +
theme_minimal() +
labs(x = "MAP Description", y = "Gene Ratio", title = "Untreated vs. Initial") +
coord_flip() +
scale_colour_gradient(low="blue", high="red") +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
plot_grid(p1, p2, p3, ncol = 1)
ggsave("all_KEGG_plots.pdf", width = 7, height = 10)
p3<-filtered_KEGG_enrich_UvI %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = GeneRatio)) +
geom_point(aes(size = Count, color = p.adjust)) +
theme_classic() +
labs(x = "MAP Description", y = "Gene Ratio", title = "Untreated vs. Initial") +
coord_flip() +
scale_colour_gradient(low="blue", high="red") +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
p2<-filtered_KEGG_enrich_TvU %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = GeneRatio)) +
geom_point(aes(size = Count, color = p.adjust)) +
theme_classic() +
labs(x = "MAP Description", y = "Gene Ratio", title = "Treated vs. Untreated") +
coord_flip() +
scale_colour_gradient(low="blue", high="red") +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
p1<- filtered_KEGG_enrich_TvI %>%
drop_na(Category) %>%
filter(p.adjust < 0.05) %>%
ggplot(., aes(x = reorder(Description, GeneRatio), y = GeneRatio)) +
geom_point(aes(size = Count, color = p.adjust)) +
theme_classic() +
labs(x = "MAP Description", y = "Gene Ratio", title = "Treated vs. Initial") +
coord_flip() +
scale_colour_gradient(low="blue", high="red") +
theme(plot.title = element_text(size=15),  # Increase plot title text size
axis.title = element_text(size=13),  # Increase axis titles text size
axis.text = element_text(size=12),
legend.text = element_text(size=12))
plot_grid(p1, p2, p3, ncol = 1)
knitr::opts_chunk$set(echo = TRUE)
library(KEGGREST)
library(tidyverse)
library(pathview)
library(clusterProfiler)
library(enrichplot)
library(cowplot)
