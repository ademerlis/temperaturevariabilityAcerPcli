library(car)
Anova(glmm_AcerCBASS_full, type = "II")
Acer_CBASS_emm <- emmeans(glmm_AcerCBASS_full, specs = ~ Treatment*CBASS_temp)
as.data.frame(pairs(Acer_CBASS_emm)) %>%
filter(p.value < 0.05)
Anova(glmm_AcerCBASS_full, type = "II")
ipam_CBASS_normalized %>%
filter(Species == "Acervicornis") -> Acer_ipam_CBASS
ipam_tidy_data %>%
filter(Date < "2022-03-22") %>%
select(fvfm, Puck, Colony, Date, Treatment,Species) %>%
mutate(fvfm_T0 = fvfm) %>%
select(!fvfm) -> preCBASSfvfm
ipam_tidy_data %>%
filter(Date < "2022-03-22") %>%
dplyr::select(fvfm, Puck, Colony, Date, Treatment,Species) %>%
mutate(fvfm_T0 = fvfm) %>%
dplyr::select(!fvfm) -> preCBASSfvfm
ipam_tidy_data %>%
dplyr::filter(Treatment_period == "CBASS") %>%
dplyr::select(fvfm, Puck:Date, CBASS_temp, Species) %>%
mutate(fvfm_T1 = fvfm) %>%
dplyr::select(!fvfm) %>%
left_join(preCBASSfvfm, by = c("Puck", "Colony", "Species")) %>%
dplyr::select(!Date.x) %>%
dplyr::select(!Date.y) %>%
filter(fvfm_T0 < 0.75) %>% #there were some weird outliers where the fvfm = 2.00
filter(fvfm_T1 < 0.75) %>%
mutate(CBASS_normalize_fvfm = fvfm_T1/fvfm_T0) %>%
filter(CBASS_normalize_fvfm > 0) %>%
filter(CBASS_normalize_fvfm < 1) -> ipam_CBASS_normalized
ggplot(ipam_CBASS_normalized, aes(x=CBASS_temp, y = CBASS_normalize_fvfm, fill=Treatment)) +
geom_boxplot() +
facet_wrap(~Species) +
scale_fill_manual(labels=c("Control", "Variable"), values = c( "#60DBDB", "#F54A34")) +
theme_classic()
ggplot(ipam_CBASS_normalized, aes(x=as.factor(CBASS_temp), y = CBASS_normalize_fvfm, fill=Treatment)) +
geom_boxplot() +
facet_wrap(~Species) +
scale_fill_manual(labels=c("Control", "Variable"), values = c( "#60DBDB", "#F54A34")) +
theme_classic()
ipam_CBASS_normalized %>%
filter(Species == "Acervicornis") -> Acer_ipam_CBASS
#model 1 = full model
glmm_AcerCBASS_full <- glmmTMB(CBASS_normalize_fvfm ~ Treatment*CBASS_temp + (1|Colony), family=beta_family(link = "logit"), data=Acer_ipam_CBASS)
summary(glmm_AcerCBASS_full)
qqnorm(resid(glmm_AcerCBASS_full))
qqline(resid(glmm_AcerCBASS_full))
boxplot(resid(glmm_AcerCBASS_full)~Acer_ipam_CBASS$Treatment)
boxplot(resid(glmm_AcerCBASS_full)~Acer_ipam_CBASS$CBASS_temp)
boxplot(resid(glmm_AcerCBASS_full)~Acer_ipam_CBASS$Colony)
#model 2
AcerCBASS_GLMM <- glmmTMB::glmmTMB(CBASS_normalize_fvfm ~ Treatment*CBASS_temp, family=beta_family(link = "logit"), data=Acer_ipam_CBASS)
summary(AcerCBASS_GLMM)
#need to check normality and variance visually (boxplots of fixed effects only)
qqnorm(resid(AcerCBASS_GLMM))
qqline(resid(AcerCBASS_GLMM))
boxplot(resid(AcerCBASS_GLMM)~Acer_ipam_CBASS$Treatment)
boxplot(resid(AcerCBASS_GLMM)~Acer_ipam_CBASS$CBASS_temp)
lrt(AcerCBASS_GLMM, glmm_AcerCBASS_full)
lrt(Acer_CBASS_GLMM_Tank, glmm_AcerCBASS_full)
# GLMM Acer Full: AIC =  -323.6
# GLMM Acer no Colony: AIC =  -324.1
# no colony is better based on AIC, and lrt p-value is not significant
Anova(AcerCBASS_GLMM, type = "II")
lrt(AcerCBASS_GLMM, glmm_AcerCBASS_full)
lrt(Acer_CBASS_GLMM_Tank, glmm_AcerCBASS_full)
ipam_CBASS_normalized %>%
filter(Species == "Acervicornis") -> Acer_ipam_CBASS
Acer_ipam_CBASS
ipam_tidy_data %>%
dplyr::filter(Treatment_period == "CBASS") %>%
dplyr::select(fvfm, Puck:Date, CBASS_temp, Species) %>%
mutate(fvfm_T1 = fvfm) %>%
dplyr::select(!fvfm) %>%
left_join(preCBASSfvfm, by = c("Puck", "Colony", "Species")) %>%
dplyr::select(!Date.x) %>%
dplyr::select(!Date.y) %>%
filter(fvfm_T0 < 0.75) %>% #there were some weird outliers where the fvfm = 2.00
filter(fvfm_T1 < 0.75) %>%
mutate(CBASS_normalize_fvfm = fvfm_T1/fvfm_T0) %>%
filter(CBASS_normalize_fvfm > 0) %>%
filter(CBASS_normalize_fvfm < 1) %>%
mutate(CBASS_normalize_fvfm = as.factor(CBASS_normalize_fvfm))-> ipam_CBASS_normalized
ipam_CBASS_normalized %>%
mutate(CBASS_temp=as.numeric(CBASS_temp)) %>%
ggplot(., aes(x=CBASS_temp, y = CBASS_normalize_fvfm, color = Treatment)) +
geom_point() +
scale_color_manual(labels=c("Control", "Variable"), values = c( "#60DBDB", "#F54A34")) +
geom_smooth(formula = y ~ x, method = "loess", span = 0.9)  +
facet_wrap(~Species) +
theme_classic() +
labs(x="Temperature (ºC)", y = "Normalized Fv/Fm")
ipam_tidy_data %>%
dplyr::filter(Treatment_period == "CBASS") %>%
dplyr::select(fvfm, Puck:Date, CBASS_temp, Species) %>%
mutate(fvfm_T1 = fvfm) %>%
dplyr::select(!fvfm) %>%
left_join(preCBASSfvfm, by = c("Puck", "Colony", "Species")) %>%
dplyr::select(!Date.x) %>%
dplyr::select(!Date.y) %>%
filter(fvfm_T0 < 0.75) %>% #there were some weird outliers where the fvfm = 2.00
filter(fvfm_T1 < 0.75) %>%
mutate(CBASS_normalize_fvfm = fvfm_T1/fvfm_T0) %>%
filter(CBASS_normalize_fvfm > 0) %>%
filter(CBASS_normalize_fvfm < 1) %>%
mutate(CBASS_temp = as.factor(CBASS_temp))-> ipam_CBASS_normalized
ggplot(ipam_CBASS_normalized, aes(x=CBASS_temp, y = CBASS_normalize_fvfm, fill=Treatment)) +
geom_boxplot() +
facet_wrap(~Species) +
scale_fill_manual(labels=c("Control", "Variable"), values = c( "#60DBDB", "#F54A34")) +
theme_classic()
ipam_CBASS_normalized %>%
mutate(CBASS_temp=as.numeric(CBASS_temp)) %>%
ggplot(., aes(x=CBASS_temp, y = CBASS_normalize_fvfm, color = Treatment)) +
geom_point() +
scale_color_manual(labels=c("Control", "Variable"), values = c( "#60DBDB", "#F54A34")) +
geom_smooth(formula = y ~ x, method = "loess", span = 0.9)  +
facet_wrap(~Species) +
theme_classic() +
labs(x="Temperature (ºC)", y = "Normalized Fv/Fm")
ipam_CBASS_normalized %>%
filter(Species == "Acervicornis") -> Acer_ipam_CBASS
#model 1 = full model
glmm_AcerCBASS_full <- glmmTMB(CBASS_normalize_fvfm ~ Treatment*CBASS_temp + (1|Colony), family=beta_family(link = "logit"), data=Acer_ipam_CBASS)
summary(glmm_AcerCBASS_full)
qqnorm(resid(glmm_AcerCBASS_full))
qqline(resid(glmm_AcerCBASS_full))
boxplot(resid(glmm_AcerCBASS_full)~Acer_ipam_CBASS$Treatment)
boxplot(resid(glmm_AcerCBASS_full)~Acer_ipam_CBASS$CBASS_temp)
boxplot(resid(glmm_AcerCBASS_full)~Acer_ipam_CBASS$Colony)
#model 2
AcerCBASS_GLMM <- glmmTMB::glmmTMB(CBASS_normalize_fvfm ~ Treatment*CBASS_temp, family=beta_family(link = "logit"), data=Acer_ipam_CBASS)
summary(AcerCBASS_GLMM)
#need to check normality and variance visually (boxplots of fixed effects only)
qqnorm(resid(AcerCBASS_GLMM))
qqline(resid(AcerCBASS_GLMM))
boxplot(resid(AcerCBASS_GLMM)~Acer_ipam_CBASS$Treatment)
boxplot(resid(AcerCBASS_GLMM)~Acer_ipam_CBASS$CBASS_temp)
lrt(AcerCBASS_GLMM, glmm_AcerCBASS_full)
lrt(Acer_CBASS_GLMM_Tank, glmm_AcerCBASS_full)
# GLMM Acer Full: AIC =  -323.6
# GLMM Acer no Colony: AIC =  -324.1
# no colony is better based on AIC, and lrt p-value is not significant
lrt(AcerCBASS_GLMM, glmm_AcerCBASS_full)
lrt(Acer_CBASS_GLMM_Tank, glmm_AcerCBASS_full)
lrt(AcerCBASS_GLMM, glmm_AcerCBASS_full)
lrt(Acer_CBASS_GLMM_Tank, glmm_AcerCBASS_full)
summary(AcerCBASS_GLMM)
summary(glmm_AcerCBASS_full)
Anova(AcerCBASS_GLMM, type = "II")
ipam_CBASS_normalized %>%
filter(Species == "Pclivosa") -> Pcli_ipam_CBASS
#model 1 = full model
glmm_PcliCBASS_full <- glmmTMB(CBASS_normalize_fvfm ~ Treatment*CBASS_temp + (1|Colony), family=beta_family(link = "logit"), data=Pcli_ipam_CBASS)
summary(glmm_PcliCBASS_full)
qqnorm(resid(glmm_PcliCBASS_full))
qqline(resid(glmm_PcliCBASS_full))
boxplot(resid(glmm_PcliCBASS_full)~Pcli_ipam_CBASS$Treatment)
boxplot(resid(glmm_PcliCBASS_full)~Pcli_ipam_CBASS$CBASS_temp)
boxplot(resid(glmm_PcliCBASS_full)~Pcli_ipam_CBASS$Colony)
#model 2
PcliCBASS_GLMM <- glmmTMB::glmmTMB(CBASS_normalize_fvfm ~ Treatment*CBASS_temp, family=beta_family(link = "logit"), data=Pcli_ipam_CBASS)
summary(PcliCBASS_GLMM)
#need to check normality and variance visually (boxplots of fixed effects only)
qqnorm(resid(PcliCBASS_GLMM))
qqline(resid(PcliCBASS_GLMM))
boxplot(resid(PcliCBASS_GLMM)~Pcli_ipam_CBASS$Treatment)
boxplot(resid(PcliCBASS_GLMM)~Pcli_ipam_CBASS$CBASS_temp)
lrt(PcliCBASS_GLMM, glmm_PcliCBASS_full)
# GLMM Pcli Full: AIC =  -355.8
# GLMM Pcli no Colony: AIC =  -344.3  , LRT p-value = 0.0002403821
# full model is better based on AIC and p-value
lrt(PcliCBASS_GLMM, glmm_PcliCBASS_full)
Anova(glmm_PcliCBASS_full, type = "II")
library(DESeq2)
library(tidyverse)
library(factoextra)
load("RData_files/initial_fullddsdesigncountsVsdcountsWGCNA.RData")
pca <- prcomp(t(assay(Vsd)))
summary(pca)
fviz_eig(pca)
plotPCA(Vsd, intgroup = c("Treatment"))
plotPCA(Vsd, intgroup = c("Genotype"))
plotPCA(Vsd, intgroup = c("time_point"))
plotPCA(Vsd, intgroup = c("Treatment", "Genotype", "time_point"))
vst_PCAdata <- plotPCA(Vsd, intgroup = c("Treatment", "Genotype", "time_point"), returnData = TRUE)
percentVar <- round(100*attr(vst_PCAdata, "percentVar"))
ggplot(vst_PCAdata, aes(PC1, PC2, color=Treatment, shape=Genotype)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("P. clivosa") +
theme_bw() + #Set background color
theme(panel.border = element_blank(), # Set border
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) +
stat_ellipse(aes(PC1, PC2, group=time_point, lty = time_point), type = "norm")
plotPCA(Vsd, intgroup = c("Treatment","time_point"))
vst_nogeno_PCAdata <- plotPCA(Vsd, intgroup = c("Treatment","time_point"), returnData = TRUE)
percentVar <- round(100*attr(vst_nogeno_PCAdata, "percentVar"))
ggplot(vst_nogeno_PCAdata, aes(PC1, PC2, color=group, shape=Treatment)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("A. cervicornis") +
theme_bw() +
stat_ellipse(aes(PC1, PC2, group=group, lty = time_point), type = "norm") +
scale_color_manual(values = c("#00CCCC","#33CCCC", "#FF6633", "#FF3333"))
ggplot(vst_nogeno_PCAdata, aes(PC1, PC2, color=group, shape=Treatment)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("P. clivosa,") +
theme_bw() +
stat_ellipse(aes(PC1, PC2, group=group, lty = time_point), type = "norm") +
scale_color_manual(values = c("#00CCCC","#33CCCC", "#FF6633", "#FF3333"))
ggplot(vst_nogeno_PCAdata, aes(PC1, PC2, color=group, shape=Treatment)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("P. clivosa") +
theme_bw() +
stat_ellipse(aes(PC1, PC2, group=group, lty = time_point), type = "norm") +
scale_color_manual(values = c("#00CCCC","#33CCCC", "#FF6633", "#FF3333"))
ggplot(vst_nogeno_PCAdata, aes(PC1, PC2, color=group)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("P. clivosa") +
theme_bw() +
scale_color_manual(values = c("#00CCCC","#33CCCC", "#FF6633", "#FF3333"))
ggplot(vst_nogeno_PCAdata, aes(PC1, PC2, color=group, shape=Treatment)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("P. clivosa") +
theme_bw() +
stat_ellipse(aes(PC1, PC2, group=group, lty = time_point), type = "norm") +
scale_color_manual(values = c("#00CCCC","#33CCCC", "#FF6633", "#FF3333"))
library(WGCNA)
library(flashClust)
library(ape)
options(stringsAsFactors=FALSE)
allowWGCNAThreads()
load("wgcnaData.RData")
#### DESEQ IMPORT ####
setwd("OneDrive - University of Miami/GitHub/Ch2_temperaturevariability2023/gene_expression/MS_bioinformatics/Acer_Rmd/")
load("RData_files/control0_control29_lpv.RData")
View(control0_control29.p)
load("RData_files/variable0_control0_lpv.RData")
load("RData_files/variable0_variable29_lpv.RData")
load("RData_files/variable29_control29_lpv.RData")
control0_control29.p
control0_control29.p <- control0_control29.p %>% rename("lpv_c0c29" = lpv)
library(tidyverse)
library(VennDiagram)
library(pheatmap)
library(reshape2)
library(RColorBrewer)
control0_control29.p <- control0_control29.p %>% rename("lpv_c0c29" = lpv)
variable0_control0.p <- variable0_control0.p %>% rename("lpv_v0c0" = lpv)
variable0_variable29.p <- variable0_variable29.p %>% rename("lpv_v0v29" = lpv)
variable29_control29.p <- variable29_control29.p %>% rename("lpv_v29c29" = lpv)
# first see if there are any shared genes with control0vs29 and variable0vs29
control0_control29.p %>%
inner_join(variable0_variable29.p, by = "gene") %>%
filter(abs(lpv_c0c29) >= 1 & abs(lpv_v0v29) >= 1) %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = "gene") %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2kogClass.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> c0c29_v0v29
View(c0c29_v0v29)
# next look at variable0vscontrol0 and variable29vscontrol29
variable0_control0.p %>%
inner_join(variable29_control29.p, by = "gene") %>%
filter(abs(lpv_v0c0) >= 1 & abs(lpv_v29c29) >= 1) %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = "gene") %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2kogClass.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> v0c0_v29c29
View(v0c0_v29c29)
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA))
# filtering and summarizing DEGs by KOG class for high-level comparisons
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v0c0 >= 1) %>%
count(KOG) %>%
rename("KOG" = KOG, "v0c0_up" = n) -> KOG_v0c0_up
View(KOG_v0c0_up)
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v0c0 <= -1) %>%
count(KOG) %>%
rename("KOG" = KOG, "v0c0_down" = n) -> KOG_v0c0_down
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v29c29 >= 1) %>%
count(KOG) %>%
rename("KOG" = KOG, "v29c29_up" = n) -> KOG_v29c29_up
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v29c29 <= -1) %>%
count(KOG) %>%
rename("KOG" = KOG, "v29c29_down" = n) -> KOG_v29c29_down
c0c29_v0v29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_c0c29 <= -1) %>%
count(KOG) %>%
rename("KOG" = KOG, "c0c29_down" = n) -> KOG_c0c29_down
c0c29_v0v29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_c0c29 >= 1) %>%
count(KOG) %>%
rename("KOG" = KOG, "c0c29_up" = n) -> KOG_c0c29_up
c0c29_v0v29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v0v29 >= 1) %>%
count(KOG) %>%
rename("KOG" = KOG, "v0v29_up" = n) -> KOG_v0v29_up
c0c29_v0v29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v0v29 <= -1) %>%
count(KOG) %>%
rename("KOG" = KOG, "v0v29_down" = n) -> KOG_v0v29_down
#v0c0 vs. v29c29
KOG_v0c0_up %>%
inner_join(KOG_v0c0_down, by = "KOG") %>%
inner_join(KOG_v29c29_down, by = "KOG") %>%
inner_join(KOG_v29c29_up, by = "KOG") -> KOG_v0c0_v29c29_match
#c0c29 vs v0v29
KOG_c0c29_down %>%
inner_join(KOG_c0c29_up, by = "KOG") %>%
inner_join(KOG_v0v29_up, by = "KOG") %>%
inner_join(KOG_v0v29_down, by = "KOG") -> KOG_c0c29_v0v29_match
# melting dataframe for plotting
KOG_v0c0_v29c29_match %>%
melt(id = "KOG") %>%
rename(comparison = variable, sum = value) -> KOG_v0c0_v29c29_melt
KOG_c0c29_v0v29_match %>%
melt(id = "KOG") %>%
rename(comparison = variable, sum = value) -> KOG_c0c29_v0v29_melt
# creating a custom color palette
colorCount = length(unique(KOG_v0c0_v29c29_match$KOG))
getPalette = colorRampPalette(brewer.pal(8, "Accent"))
# relative abundance plot
KOG_v0c0_v29c29_sum <- ggplot(KOG_v0c0_v29c29_melt, aes(fill = KOG, y = sum, x = comparison)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Accent"))(colorCount)) +
labs(x = "Comparison",
y = "Proportion of DEGs") +
theme_classic()
KOG_v0c0_v29c29_sum
# relative abundance plot
KOG_v0c0_v29c29_sum <- ggplot(KOG_v0c0_v29c29_melt, aes(fill = KOG, y = sum, x = comparison)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Accent"))(colorCount)) +
labs(x = "Comparison",
y = "Proportion of DEGs") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
KOG_v0c0_v29c29_sum
# relative abundance plot
KOG_v0c0_v29c29_sum <- ggplot(KOG_v0c0_v29c29_melt, aes(fill = KOG, y = sum, x = comparison)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Accent"))(colorCount)) +
labs(x = "Comparison",
y = "Proportion of DEGs") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
KOG_v0c0_v29c29_sum
ggsave("common genes KOG v0c0_v29c29 abundance.pdf", plot= KOG_v0c0_v29c29_sum, width=8, height=6, units="in", dpi=300)
KOG_c0c29_up %>%
inner_join(KOG_c0c29_down, by = "KOG") %>%
inner_join(KOG_v0v29_down, by = "KOG") %>%
inner_join(KOG_v0v29_up, by = "KOG") -> KOG_c0c29_v0v29_match
# creating a custom color palette
colorCount = length(unique(KOG_c0c29_v0v29_match$KOG))
getPalette = colorRampPalette(brewer.pal(8, "Accent"))
# relative abundance plot
KOG_c0c29_v0v29_sum <- ggplot(KOG_c0c29_v0v29_melt, aes(fill = KOG, y = sum, x = comparison)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Accent"))(colorCount)) +
labs(x = "Comparison",
y = "Proportion of DEGs") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
KOG_c0c29_v0v29_sum
ggsave("common genes KOG c0c29_v0v29 abundance.pdf", plot= KOG_c0c29_v0v29_sum, width=8, height=6, units="in", dpi=300)
# first creating a set of up/downregulated DEGs by v0c0 and v29c29
v0c0_v29c29 %>%
filter(lpv_v0c0 >= 1) %>%
pull(gene) -> v0c0_up
v0c0_v29c29 %>%
filter(lpv_v0c0 <= -1) %>%
pull(gene) -> v0c0_down
v0c0_v29c29 %>%
filter(lpv_v29c29 <= -1) %>%
pull(gene) -> v29c29_down
# v0c0 vs v29c29
venn_v0c0v29c29=h=venn.diagram(
x = list("V0/C0 up"=v0c0_up, "V0/C0 down"=v0c0_down,"V29/C29 up"=v29c29_up, "V29/C29 down"=v29c29_down),
filename=NULL,
col = "transparent",
fill = c("#ca0020", "#0571b0", "#f4a582", "#92c5de"),
alpha = 0.5,
label.col = c("red3","white","cornflowerblue","black","white","white","white", "black","darkred","grey25","white","white","grey25","darkblue","white"),
cex = 3.5,
fontfamily = "sans",
fontface = "bold",
cat.default.pos = "text",
cat.col =c("darkred", "darkblue", "red3", "cornflowerblue"),
cat.cex = 3.5,
cat.fontfamily = "sans",
cat.just = list(c(0,0.5),c(0.75,0.5),c(0.5,0.5),c(0.5,0.5))
)
v0c0_v29c29 %>%
filter(lpv_v29c29 >= 1) %>%
pull(gene) -> v29c29_up
v0c0_v29c29 %>%
filter(lpv_v29c29 <= -1) %>%
pull(gene) -> v29c29_down
# v0c0 vs v29c29
venn_v0c0v29c29=h=venn.diagram(
x = list("V0/C0 up"=v0c0_up, "V0/C0 down"=v0c0_down,"V29/C29 up"=v29c29_up, "V29/C29 down"=v29c29_down),
filename=NULL,
col = "transparent",
fill = c("#ca0020", "#0571b0", "#f4a582", "#92c5de"),
alpha = 0.5,
label.col = c("red3","white","cornflowerblue","black","white","white","white", "black","darkred","grey25","white","white","grey25","darkblue","white"),
cex = 3.5,
fontfamily = "sans",
fontface = "bold",
cat.default.pos = "text",
cat.col =c("darkred", "darkblue", "red3", "cornflowerblue"),
cat.cex = 3.5,
cat.fontfamily = "sans",
cat.just = list(c(0,0.5),c(0.75,0.5),c(0.5,0.5),c(0.5,0.5))
)
venn_v0c0v29c29
# v0c0 vs v29c29
venn_v0c0v29c29=venn.diagram(
x = list("V0/C0 up"=v0c0_up, "V0/C0 down"=v0c0_down,"V29/C29 up"=v29c29_up, "V29/C29 down"=v29c29_down),
filename=NULL,
col = "transparent",
fill = c("#ca0020", "#0571b0", "#f4a582", "#92c5de"),
alpha = 0.5,
label.col = c("red3","white","cornflowerblue","black","white","white","white", "black","darkred","grey25","white","white","grey25","darkblue","white"),
cex = 3.5,
fontfamily = "sans",
fontface = "bold",
cat.default.pos = "text",
cat.col =c("darkred", "darkblue", "red3", "cornflowerblue"),
cat.cex = 3.5,
cat.fontfamily = "sans",
cat.just = list(c(0,0.5),c(0.75,0.5),c(0.5,0.5),c(0.5,0.5))
)
venn_v0c0v29c29
pdf(file="venn_v0c0v29c29.pdf", height=10, width=12)
pdf(file="venn_v0c0v29c29.pdf", height=10, width=12)
grid.draw(venn_v0c0v29c29)
dev.off()
# then creating a second set for c0c29_v0v29
c0c29_v0v29 %>%
filter(lpv_c0c29 >= 1) %>%
pull(gene) -> c0c29_up
c0c29_v0v29 %>%
filter(lpv_c0c29 <= -1) %>%
pull(gene) -> c0c29_down
c0c29_v0v29 %>%
filter(lpv_v0v29 >= 1) %>%
pull(gene) -> v0v29_up
c0c29_v0v29 %>%
filter(lpv_v0v29 <= -1) %>%
pull(gene) -> v0v29_down
# c0c29_v0v29
venn_c0c29_v0v29=venn.diagram(
x = list("C0/C29 up"=c0c29_up, "C0/C29 down"=c0c29_down,"V0/V29 up"=v0v29_up, "V0/V29 down"=v0v29_down),
filename=NULL,
col = "transparent",
fill = c("#ca0020", "#0571b0", "#f4a582", "#92c5de"),
alpha = 0.5,
label.col = c("red3","white","cornflowerblue","black","white","white","white", "black","darkred","grey25","white","white","grey25","darkblue","white"),
cex = 3.5,
fontfamily = "sans",
fontface = "bold",
cat.default.pos = "text",
cat.col =c("darkred", "darkblue", "red3", "cornflowerblue"),
cat.cex = 3.5,
cat.fontfamily = "sans",
cat.just = list(c(0,0.5),c(0.75,0.5),c(0.5,0.5),c(0.5,0.5))
)
pdf(file="venn_c0c29_v0v29.pdf", height=10, width=12)
grid.draw(venn_c0c29_v0v29)
dev.off()
