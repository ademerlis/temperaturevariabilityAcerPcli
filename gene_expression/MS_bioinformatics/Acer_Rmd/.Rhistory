mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = c("gene" = "gene"))
keyvals <- ifelse(
variable0_control0_annotated$log2FoldChange < -2 & variable0_control0_annotated$padj < 0.05, 'royalblue',
ifelse(variable0_control0_annotated$log2FoldChange > 2 & variable0_control0_annotated$padj < 0.05, 'red',
'grey'))
keyvals[is.na(keyvals)] <- 'grey'
names(keyvals)[keyvals == 'red'] <- 'significantly high (padj < 0.05 and L2FC > 2)'
names(keyvals)[keyvals == 'grey'] <- '-2 < L2FC < 2 and padj > 0.05'
names(keyvals)[keyvals == 'royalblue'] <- 'significantly low (padj < 0.05 and L2FC < -2)'
pdf(file="volcano_variable0control0.pdf", width = 12, height = 6)
EnhancedVolcano(variable0_control0_annotated,
lab = NA,
title = "Variable Day 0 vs. Control Day 0",
x = 'log2FoldChange',
y = 'padj',
legendPosition = 'right',
pCutoff = 10e-2,
FCcutoff = 2.0,
legendIconSize = 5.0,
labSize = 6.0,
colCustom = keyvals,
colAlpha = 0.5)
variable0_variable29_annotated <- as.data.frame(variable0_variable29) %>%
rownames_to_column(var="gene") %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = c("gene" = "gene"))
keyvals <- ifelse(
variable0_variable29_annotated$log2FoldChange < -2 & variable0_variable29_annotated$padj < 0.05, 'royalblue',
ifelse(variable0_variable29_annotated$log2FoldChange > 2 & variable0_variable29_annotated$padj < 0.05, 'red',
'grey'))
keyvals[is.na(keyvals)] <- 'grey'
names(keyvals)[keyvals == 'red'] <- 'significantly high (padj < 0.05 and L2FC > 2)'
names(keyvals)[keyvals == 'grey'] <- '-2 < L2FC < 2 and padj > 0.05'
names(keyvals)[keyvals == 'royalblue'] <- 'significantly low (padj < 0.05 and L2FC < -2)'
pdf(file="volcano_variable0variable29.pdf", width = 12, height = 6)
EnhancedVolcano(variable0_variable29_annotated,
lab = NA,
title = "Variable Day 0 vs. Variable Day 29",
x = 'log2FoldChange',
y = 'padj',
legendPosition = 'right',
pCutoff = 10e-2,
FCcutoff = 2.0,
legendIconSize = 5.0,
labSize = 6.0,
colCustom = keyvals,
colAlpha = 0.5)
variable29_control29_annotated <- as.data.frame(variable29_control29) %>%
rownames_to_column(var="gene") %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = c("gene" = "gene"))
keyvals <- ifelse(
variable29_control29_annotated$log2FoldChange < -2 & variable29_control29_annotated$padj < 0.05, 'royalblue',
ifelse(variable29_control29_annotated$log2FoldChange > 2 & variable29_control29_annotated$padj < 0.05, 'red',
'grey'))
keyvals[is.na(keyvals)] <- 'grey'
names(keyvals)[keyvals == 'red'] <- 'significantly high (padj < 0.05 and L2FC > 2)'
names(keyvals)[keyvals == 'grey'] <- '-2 < L2FC < 2 and padj > 0.05'
names(keyvals)[keyvals == 'royalblue'] <- 'significantly low (padj < 0.05 and L2FC < -2)'
pdf(file="volcano_variable29control29.pdf", width = 12, height = 6)
EnhancedVolcano(variable29_control29_annotated,
title = "Variable Day 29 vs. Control Day 29",
lab = NA,
x = 'log2FoldChange',
y = 'padj',
legendPosition = 'right',
pCutoff = 10e-2,
FCcutoff = 2.0,
legendIconSize = 5.0,
labSize = 6.0,
colCustom = keyvals,
colAlpha = 0.5)
#install.packages("KOGMWU")
library(KOGMWU)
# loading KOG annotations
gene2kog=read.table("~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2kogClass.tab",sep="\t", fill=T) #iso2kogClass.tab not iso2kogClass1.tab because that file has an "error" when you try to view it using the terminal
head(gene2kog)
setwd("OneDrive - University of Miami/GitHub/Ch2_temperaturevariability2023/gene_expression/MS_bioinformatics/Acer_Rmd")
#setwd("OneDrive - University of Miami/GitHub/Ch2_temperaturevariability2023/gene_expression/MS_bioinformatics/Acer_Rmd")
load("RData_files/pvals.RData")
control0_control29 # names of datasets in the package
control0_control29=load('RData_files/control0_control29_lpv.RData')
control0_control29 # names of datasets in the package
lpv.control0_control29=kog.mwu(control0_control29.p,gene2kog)
lpv.control0_control29
variable0_control0=load('RData_files/variable0_control0_lpv.RData')
variable0_control0 # names of datasets in the package
lpv.variable0_control0=kog.mwu(variable0_control0.p,gene2kog)
lpv.variable0_control0
variable29_control29=load('RData_files/variable29_control29_lpv.RData')
variable29_control29 # names of datasets in the package
lpv.variable29_control29=kog.mwu(variable29_control29.p,gene2kog)
lpv.variable29_control29
variable0_variable29=load('RData_files/variable0_variable29_lpv.RData')
variable0_variable29 # names of datasets in the package
lpv.variable0_variable29=kog.mwu(variable0_variable29.p,gene2kog)
lpv.variable0_variable29
# compiling a table of delta-ranks to compare these results:
ktable=makeDeltaRanksTable(list("control0_control29"=lpv.control0_control29,"variable0_control0"=lpv.variable0_control0,"variable0_variable29"=lpv.variable0_variable29,"variable29_control29"=lpv.variable29_control29))
library(RColorBrewer)
color = colorRampPalette(rev(c(brewer.pal(n = 7, name ="RdBu"),"royalblue","darkblue")))(100)
pdf(file="KOG_Acer_host_lpv.pdf", width=7, height=8)
pheatmap(as.matrix(ktable),clustering_distance_cols="correlation",color=color, cellwidth=15, cellheight=15, border_color="white")
while (!is.null(dev.list()))  dev.off()
pairs(ktable, lower.panel = panel.smooth, upper.panel = panel.cor)
#scatterplots between pairs
# p-values of these correlations in the upper panel:
pairs(ktable, lower.panel = panel.smooth, upper.panel = panel.cor.pval)
# creating a pub-ready corr plot
pdf(file="KOG_intervention_Acer_corr_lpv.pdf", width=10, height=10)
par(mfrow=c(4,4))
corrPlot(x="control0_control29",y="variable0_control0",ktable)
corrPlot(x="control0_control29",y="variable0_variable29",ktable)
corrPlot(x="control0_control29",y="variable29_control29",ktable)
corrPlot(x="variable0_control0",y="variable0_variable29",ktable)
corrPlot(x="variable0_control0",y="variable29_control29",ktable)
corrPlot(x="variable0_variable29",y="variable29_control29",ktable)
dev.off()
variable0_control0=load('RData_files/variable0_control0_fc.RData')
variable0_control0 # names of datasets in the package
fc.variable0_control0=kog.mwu(variable0_control0.fc,gene2kog)
fc.variable0_control0
control0_control29=load('RData_files/control0_control29_fc.RData')
control0_control29 # names of datasets in the package
fc.control0_control29=kog.mwu(control0_control29.fc,gene2kog)
fc.control0_control29
variable0_variable29=load('RData_files/variable0_variable29_fc.RData')
variable0_variable29 # names of datasets in the package
fc.variable0_variable29=kog.mwu(variable0_variable29.fc,gene2kog)
fc.variable0_variable29
variable29_control29=load('RData_files/variable29_control29_fc.RData')
variable29_control29 # names of datasets in the package
fc.variable29_control29=kog.mwu(variable29_control29.fc,gene2kog)
fc.variable29_control29
# compiling a table of delta-ranks to compare these results:
ktable=makeDeltaRanksTable(list("variable0_control0"=fc.variable0_control0,"control0_control29"=fc.control0_control29,
"variable0_variable29"=fc.variable0_variable29,"variable29_control29"=fc.variable29_control29))
library(RColorBrewer)
color = colorRampPalette(rev(c(brewer.pal(n = 7, name ="RdBu"),"royalblue","darkblue")))(100)
# Making a heatmap with hierarchical clustering trees:
pdf(file="KOG_Acer_host_fc.pdf")
pheatmap(as.matrix(ktable),clustering_distance_cols="correlation",color=color, cellwidth=15, cellheight=15, border_color="white")
while (!is.null(dev.list()))  dev.off()
#this wasn't working so I manually saved it as a PDF by right clicking it in the R plot panel
# exploring correlations between datasets
pairs(ktable, lower.panel = panel.smooth, upper.panel = panel.cor)
#scatterplots between pairs
# p-values of these correlations in the upper panel:
pairs(ktable, lower.panel = panel.smooth, upper.panel = panel.cor.pval)
# creating a pub-ready corr plot
pdf(file="KOG_Acer_host_corr_fc.pdf", width=10, height=10)
par(mfrow=c(2,3))
corrPlot(x="control0_control29",y="variable0_control0",ktable)
corrPlot(x="control0_control29",y="variable0_variable29",ktable)
corrPlot(x="control0_control29",y="variable29_control29",ktable)
corrPlot(x="variable0_control0",y="variable0_variable29",ktable)
corrPlot(x="variable0_control0",y="variable29_control29",ktable)
corrPlot(x="variable0_variable29",y="variable29_control29",ktable)
dev.off()
library(DESeq2)
library(arrayQualityMetrics)
library(tidyverse)
# heatmap and hierarchical clustering:
load("~/OneDrive - University of Miami/GitHub/Ch2_temperaturevariability2023/gene_expression/MS_bioinformatics/Acer_Rmd/RData_files/vsd.RData")
library(pheatmap)
library(vegan)
# library(rgl)
library(ape)
conditions=design
conditions$group <- factor(conditions$group, levels = c("control_Day_0","control_Day_29","variable_Day_0","variable_Day_29"))
# creating a PCoA eigenvalue matrix
dds.pcoa=pcoa(dist(t(vsd),method="manhattan")/1000)
scores=dds.pcoa$vectors
pdf(file="PCoA_axes23.pdf", width=12, height=6)
par(mfrow=c(1,2))
plot(scores[,2], scores[,3],col=c("red","blue")[as.numeric(as.factor(conditions$Treatment))],pch=c(1,19)[as.numeric(as.factor(conditions$time_point))], xlab="Coordinate 2", ylab="Coordinate 3", main="Treatment")
ordispider(scores, conditions$Treatment, label=F, col=c("red","blue"))
legend("topright", legend=c("Control", "Variable"), fill = c("red","blue"), bty="n")
legend("topleft", legend=c("Day_0", "Day_29"), pch=c(1,19), bty="n")
plot(scores[,2], scores[,3],col=c("grey","black")[as.numeric(as.factor(conditions$time_point))],pch=c(15,17,25)[as.numeric((as.factor(conditions$Treatment)))], xlab="Coordinate 2", ylab="Coordinate 3", main="Time")
ordispider(scores, conditions$time, label=F, col=c("grey","black"))
legend("topleft", legend=c("Day_0", "Day_29"), fill = c("grey","black"), bty="n")
legend("topright", legend=c("Control", "Variable"), pch=c(15,17,25), bty="n")
dev.off()
scores
plot(scores[,2], scores[,3],col=c("grey","black")[as.numeric(as.factor(conditions$time_point))],pch=c(15,17)[as.numeric((as.factor(conditions$Treatment)))], xlab="Coordinate 2", ylab="Coordinate 3", main="Time")
,25
plot(scores[,2], scores[,3],col=c("grey","black")[as.numeric(as.factor(conditions$time_point))],pch=c(15,17,25)[as.numeric((as.factor(conditions$Treatment)))], xlab="Coordinate 2", ylab="Coordinate 3", main="Time")
plot(scores[,2], scores[,3],col=c("grey","black")[as.numeric(as.factor(conditions$time_point))],pch=c(15,17,25)[as.numeric((as.factor(conditions$Treatment)))], xlab="Coordinate 2", ylab="Coordinate 3", main="Time")
plot(scores[,2], scores[,3],col=c("grey","black")[as.numeric(as.factor(conditions$time_point))],pch=c(15,25)[as.numeric((as.factor(conditions$Treatment)))], xlab="Coordinate 2", ylab="Coordinate 3", main="Time")
plot(scores[,2], scores[,3],col=c("grey","black")[as.numeric(as.factor(conditions$time_point))],pch=c(15,17,25)[as.numeric((as.factor(conditions$Treatment)))], xlab="Coordinate 2", ylab="Coordinate 3", main="Time")
ordispider(scores, conditions$time, label=F, col=c("grey","black"))
ordispider(scores[2,3], conditions$time, label=F, col=c("grey","black"))
ordispider(scores[,3], conditions$time, label=F, col=c("grey","black"))
ordispider(scores, conditions$time, label=T, col=c("grey","black"))
ordispider(scores[,2:3], conditions$time, label=T, col=c("grey","black"))
plot(scores[,2], scores[,3],col=c("grey","black")[as.numeric(as.factor(conditions$time_point))],pch=c(15,17,25)[as.numeric((as.factor(conditions$Treatment)))], xlab="Coordinate 2", ylab="Coordinate 3", main="Time")
ordispider(scores[,2:3], conditions$time, label=T, col=c("grey","black"))
pdf(file="PCoA_axes23.pdf", width=12, height=6)
par(mfrow=c(1,2))
plot(scores[,2], scores[,3],col=c("red","blue")[as.numeric(as.factor(conditions$Treatment))],pch=c(1,19)[as.numeric(as.factor(conditions$time_point))], xlab="Coordinate 2", ylab="Coordinate 3", main="Treatment")
ordispider(scores[,2:3], conditions$Treatment, label=F, col=c("red","blue"))
legend("topright", legend=c("Control", "Variable"), fill = c("red","blue"), bty="n")
legend("topleft", legend=c("Day_0", "Day_29"), pch=c(1,19), bty="n")
plot(scores[,2], scores[,3],col=c("grey","black")[as.numeric(as.factor(conditions$time_point))],pch=c(15,17,25)[as.numeric((as.factor(conditions$Treatment)))], xlab="Coordinate 2", ylab="Coordinate 3", main="Time")
ordispider(scores[,2:3], conditions$time, label=F, col=c("grey","black"))
legend("topleft", legend=c("Day_0", "Day_29"), fill = c("grey","black"), bty="n")
legend("topright", legend=c("Control", "Variable"), pch=c(15,17,25), bty="n")
dev.off()
# copy this table for % variation explained by each axis (Relative_eig column)
dds.pcoa$values
load("RData_files/control0_control29_lpv.RData")
control0_control29.p <- control0_control29.p %>% rename("lpv_c0c29" = lpv)
load("RData_files/variable0_control0_lpv.RData")
variable0_control0.p <- variable0_control0.p %>% rename("lpv_v0c0" = lpv)
load("RData_files/variable0_variable29_lpv.RData")
variable0_variable29.p <- variable0_variable29.p %>% rename("lpv_v0v29" = lpv)
load("RData_files/variable29_control29_lpv.RData")
variable29_control29.p <- variable29_control29.p %>% rename("lpv_v29c29" = lpv)
control0_control29.p %>%
inner_join(variable0_variable29.p, by = "gene") %>%
filter(abs(lpv_c0c29) >= 1 & abs(lpv_v0v29) >= 1) %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = "gene") %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2kogClass.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> c0c29_v0v29
control0_control29.p
View(c0c29_v0v29)
variable0_control0.p %>%
inner_join(variable29_control29.p, by = "gene") %>%
filter(abs(lpv_v0c0) >= 1 & abs(lpv_v29c29) >= 1) %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = "gene") %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2kogClass.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> v0c0_v29c29
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v0c0 >= 1) %>%
count(KOG) %>%
rename("KOG" = KOG, "v0c0_up" = n) -> KOG_v0c0_up
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v0c0 <= -1) %>%
count(KOG) %>%
rename("KOG" = KOG, "v0c0_down" = n) -> KOG_v0c0_down
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v29c29 >= 1) %>%
count(KOG) %>%
rename("KOG" = KOG, "v29c29_up" = n) -> KOG_v29c29_up
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v29c29 <= -1) %>%
count(KOG) %>%
rename("KOG" = KOG, "v29c29_down" = n) -> KOG_v29c29_down
c0c29_v0v29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_c0c29 >= 1) %>%
count(KOG) %>%
rename("KOG" = KOG, "c0c29_up" = n) -> KOG_c0c29_up
c0c29_v0v29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_c0c29 <= -1) %>%
count(KOG) %>%
rename("KOG" = KOG, "c0c29_down" = n) -> KOG_c0c29_down
c0c29_v0v29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v0v29 >= 1) %>%
count(KOG) %>%
rename("KOG" = KOG, "v0v29_up" = n) -> KOG_v0v29_up
c0c29_v0v29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v0v29 <= -1) %>%
count(KOG) %>%
rename("KOG" = KOG, "v0v29_down" = n) -> KOG_v0v29_down
KOG_v0c0_up %>%
inner_join(KOG_v0c0_down, by = "KOG") %>%
inner_join(KOG_v29c29_down, by = "KOG") %>%
inner_join(KOG_v29c29_up, by = "KOG") -> KOG_v0c0_v29c29_match
#c0c29 vs v0v29
KOG_c0c29_down %>%
inner_join(KOG_c0c29_up, by = "KOG") %>%
inner_join(KOG_v0v29_up, by = "KOG") %>%
inner_join(KOG_v0v29_down, by = "KOG") -> KOG_c0c29_v0v29_match
KOG_v0c0_v29c29_match %>%
melt(id = "KOG") %>%
rename(comparison = variable, sum = value) -> KOG_v0c0_v29c29_melt
colorCount = length(unique(KOG_v0c0_v29c29_match$KOG))
getPalette = colorRampPalette(brewer.pal(8, "Accent"))
KOG_v0c0_v29c29_sum <- ggplot(KOG_v0c0_v29c29_melt, aes(fill = KOG, y = sum, x = comparison)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Accent"))(colorCount)) +
labs(x = "Comparison",
y = "Proportion of DEGs") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
# melting dataframe for plotting
KOG_v0c0_v29c29_match %>%
melt(id = "KOG") %>%
rename(comparison = variable, sum = value) -> KOG_v0c0_v29c29_melt
library(tidyverse)
library(VennDiagram)
library(pheatmap)
library(reshape2)
library(RColorBrewer)
# melting dataframe for plotting
KOG_v0c0_v29c29_match %>%
melt(id = "KOG") %>%
rename(comparison = variable, sum = value) -> KOG_v0c0_v29c29_melt
KOG_c0c29_v0v29_match %>%
melt(id = "KOG") %>%
rename(comparison = variable, sum = value) -> KOG_c0c29_v0v29_melt
colorCount = length(unique(KOG_v0c0_v29c29_match$KOG))
getPalette = colorRampPalette(brewer.pal(8, "Accent"))
# relative abundance plot
KOG_v0c0_v29c29_sum <- ggplot(KOG_v0c0_v29c29_melt, aes(fill = KOG, y = sum, x = comparison)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Accent"))(colorCount)) +
labs(x = "Comparison",
y = "Proportion of DEGs") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
KOG_v0c0_v29c29_sum
colorCount = length(unique(KOG_c0c29_v0v29_match$KOG))
getPalette = colorRampPalette(brewer.pal(8, "Accent"))
# relative abundance plot
KOG_c0c29_v0v29_sum <- ggplot(KOG_c0c29_v0v29_melt, aes(fill = KOG, y = sum, x = comparison)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Accent"))(colorCount)) +
labs(x = "Comparison",
y = "Proportion of DEGs") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
KOG_c0c29_v0v29_sum
v0c0_v29c29 %>%
filter(lpv_v0c0 >= 1) %>%
pull(gene) -> v0c0_up
v0c0_v29c29 %>%
filter(lpv_v0c0 <= -1) %>%
pull(gene) -> v0c0_down
v0c0_v29c29 %>%
filter(lpv_v29c29 >= 1) %>%
pull(gene) -> v29c29_up
v0c0_v29c29 %>%
filter(lpv_v29c29 <= -1) %>%
pull(gene) -> v29c29_down
c0c29_v0v29 %>%
filter(lpv_c0c29 >= 1) %>%
pull(gene) -> c0c29_up
c0c29_v0v29 %>%
filter(lpv_c0c29 <= -1) %>%
pull(gene) -> c0c29_down
c0c29_v0v29 %>%
filter(lpv_v0v29 >= 1) %>%
pull(gene) -> v0v29_up
c0c29_v0v29 %>%
filter(lpv_v0v29 <= -1) %>%
pull(gene) -> v0v29_down
# v0c0_v29c29
venn_v0c0v29c29=venn.diagram(
x = list("V0/C0 up"=v0c0_up, "V0/C0 down"=v0c0_down,"V29/C29 up"=v29c29_up, "V29/C29 down"=v29c29_down),
filename=NULL,
col = "transparent",
fill = c("#ca0020", "#0571b0", "#f4a582", "#92c5de"),
alpha = 0.5,
label.col = c("red3","white","cornflowerblue","black","white","white","white", "black","darkred","grey25","white","white","grey25","darkblue","white"),
cex = 3.5,
fontfamily = "sans",
fontface = "bold",
cat.default.pos = "text",
cat.col =c("darkred", "darkblue", "red3", "cornflowerblue"),
cat.cex = 3.5,
cat.fontfamily = "sans",
cat.just = list(c(0,0.5),c(0.75,0.5),c(0.5,0.5),c(0.5,0.5))
)
grid.draw(venn_v0c0v29c29)
View(KOG_c0c29_v0v29_match)
View(v0c0_v29c29)
View(KOG_v0c0_up)
View(KOG_v0c0_v29c29_match)
View(KOG_v0c0_v29c29_melt)
control0_control29.p %>%
inner_join(variable0_variable29.p, by = "gene")
View(c0c29_v0v29)
variable0_control0.p %>%
inner_join(variable29_control29.p, by = "gene")
str(control0_control29.p)
str(variable0_variable29.p)
View(control0_control29.p)
load("RData_files/realModels_Acer.RData")
load("RData_files/pvals.RData")
source=variable29_control29[!is.na(variable29_control29$pvalue),]
variable29_control29.fc=data.frame("gene"=row.names(source))
variable29_control29.fc$lfc=source[,"log2FoldChange"]
head(variable29_control29.fc)
variable29_control29.p=data.frame("gene"=row.names(source))
variable29_control29.p$lpv=-log(source[,"pvalue"],10)
variable29_control29.p$lpv[source$stat<0]=variable29_control29.p$lpv[source$stat<0]*-1
head(variable29_control29.p)
source=variable0_control0[!is.na(variable0_control0$pvalue),]
variable0_control0.fc=data.frame("gene"=row.names(source))
variable0_control0.fc$lfc=source[,"log2FoldChange"]
head(variable0_control0.fc)
variable0_control0.p=data.frame("gene"=row.names(source))
variable0_control0.p$lpv=-log(source[,"pvalue"],10)
variable0_control0.p$lpv[source$stat<0]=variable0_control0.p$lpv[source$stat<0]*-1
head(variable0_control0.p)
source=variable0_variable29[!is.na(variable0_variable29$pvalue),]
variable0_variable29.fc=data.frame("gene"=row.names(source))
variable0_variable29.fc$lfc=source[,"log2FoldChange"]
head(variable0_variable29.fc)
# signed log FDR adjusted p-value: -log(padj)* direction:
variable29_control29.p=data.frame("gene"=row.names(source))
variable29_control29.p$lpadj=-log(source[,"padj"],10)
variable29_control29.p$lpadj[source$stat<0]=variable29_control29.p$lpadj[source$stat<0]*-1
head(variable29_control29.p)
# signed log FDR adjusted p-value: -log(padj)* direction:
source=variable29_control29[!is.na(variable29_control29$padj),]
variable29_control29.p=data.frame("gene"=row.names(source))
variable29_control29.p$lpadj=-log(source[,"padj"],10)
variable29_control29.p$lpadj[source$stat<0]=variable29_control29.p$lpadj[source$stat<0]*-1
head(variable29_control29.p)
# signed log FDR adjusted p-value: -log(padj)* direction:
source=variable29_control29[variable29_control29$padj,]
variable29_control29.p=data.frame("gene"=row.names(source))
variable29_control29.p$lpadj=-log(source[,"padj"],10)
variable29_control29.p$lpadj[source$stat<0]=variable29_control29.p$lpadj[source$stat<0]*-1
# signed log FDR adjusted p-value: -log(padj)* direction:
source=variable29_control29[variable29_control29$padj,]
View(source)
variable29_control29$padj
variable29_control29.p=data.frame("gene"=row.names(source))
View(variable29_control29.p)
variable29_control29=results(dds,contrast=c("group","variable_Day_29","control_Day_29"))
summary(variable29_control29)
degs_variable29_control29=row.names(variable29_control29)[variable29_control29$padj<0.1 & !(is.na(variable29_control29$padj))]
View(c0c29_v0v29)
control0_control29.p
control0_control29.p
#### DESEQ IMPORT ####
load("RData_files/pvals.RData")
degs_control0_control29 %>%
inner_join(degs_variable0_variable29, by = "gene")
library(tidyverse)
library(VennDiagram)
library(pheatmap)
library(reshape2)
library(RColorBrewer)
degs_control0_control29
control0_control29$padj
rownames(control0_control29)
as.data.frame(control0_control29)
as.data.frame(control0_control29) %>%
mutate(contrast = "control0_control29")
as.data.frame(control0_control29) %>%
mutate(contrast = "control0_control29") -> df_C0C29
as.data.frame(variable0_variable29) %>%
mutate(contrast = "variable0_variable29") -> df_V0V29
df_C0C29 %>% inner_join(df_V0V29)
df_C0C29 %>% inner_join(df_V0V29, by = rownames())
df_C0C29 %>% inner_join(df_V0V29, by = row.names())
as.data.frame(control0_control29) %>%
mutate(contrast = "control0_control29") %>%
rownames_to_column("gene")-> df_C0C29
as.data.frame(variable0_variable29) %>%
mutate(contrast = "variable0_variable29") %>%
rownames_to_column("gene") -> df_V0V29
df_C0C29 %>% inner_join(df_V0V29)
df_C0C29 %>% inner_join(df_V0V29, by = "gene")
df_C0C29
as.data.frame(control0_control29) %>%
mutate(contrast = "control0_control29") %>%
rownames_to_column("gene") %>%
filter(abs(padj) > 1) -> df_C0C29
df_C0C29
as.data.frame(control0_control29) %>%
mutate(contrast = "control0_control29") %>%
rownames_to_column("gene") %>%
filter(abs(padj) >= 1) -> df_C0C29
View(df_C0C29)
View(df_V0V29)
as.data.frame(control0_control29) %>%
mutate(contrast = "control0_control29") %>%
rownames_to_column("gene") %>%
filter(padj < 0.1) -> df_C0C29
df_C0C29
