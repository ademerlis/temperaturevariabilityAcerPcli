theme_bw() +
scale_color_manual(values = c("#00CCCC", "#FF3333"))
# MB-B
ggplot(vst_PCA_MBB, aes(PC1, PC2, color=Treatment, shape=time_point)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("Acer genotype MB-B") +
theme_bw() +
scale_color_manual(values = c("#00CCCC", "#FF3333"))
# SI-C
ggplot(vst_PCA_SIC, aes(PC1, PC2, color=Treatment, shape=time_point)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("Acer genotype SI-C") +
theme_bw() +
scale_color_manual(values = c("#00CCCC", "#FF3333")) +
stat_ellipse(aes(PC1, PC2, group= group), type = "norm")
# SI-C
ggplot(vst_PCA_SIC, aes(PC1, PC2, color=Treatment, shape=time_point)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("Acer genotype SI-C") +
theme_bw() +
scale_color_manual(values = c("#00CCCC", "#FF3333")) +
stat_ellipse(aes(PC1, PC2, group= Treatment), type = "norm")
# SI-C
ggplot(vst_PCA_SIC, aes(PC1, PC2, color=Treatment, shape=time_point)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("Acer genotype SI-C") +
theme_bw() +
scale_color_manual(values = c("#00CCCC", "#FF3333")) +
stat_ellipse(aes(PC1, PC2, group= time_point), type = "norm")
# BC-8b
ggplot(vst_PCA_BC8b, aes(PC1, PC2, color=Treatment, shape=time_point)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("Acer genotype BC-8b") +
theme_bw() +
scale_color_manual(values = c("#00CCCC", "#FF3333"))
ggplot(vst_PCA_SIC, aes(PC1, PC2, color=group)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("Acer genotype SI-C") +
theme_bw() +
scale_color_manual(values = c("lightblue", "darkblue", "red", "darkred")) +
stat_ellipse(aes(PC1, PC2, group= group), type = "norm")
ggplot(vst_PCA_MBB, aes(PC1, PC2, color=group)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("Acer genotype MB-B") +
theme_bw() +
scale_color_manual(values = c("lightblue", "darkblue", "red", "darkred")) +
stat_ellipse(aes(PC1, PC2, group= group), type = "norm")
ggplot(vst_PCA_BC8b, aes(PC1, PC2, color=group)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("Acer genotype Bc=8b") +
theme_bw() +
scale_color_manual(values = c("lightblue", "darkblue", "red", "darkred")) +
stat_ellipse(aes(PC1, PC2, group= group), type = "norm")
pca_data<- pca%>%
group_by(Treatment, time_point)%>%
mutate(PC1.mean = mean(.fittedPC1),
PC2.mean = mean(.fittedPC2))
pca <- prcomp(t(assay(Vsd)), scale = TRUE, center=TRUE)
summary(pca)
fviz_eig(pca)
View(pca)
pca_data<- pca%>%
group_by(Treatment, time_point)%>%
mutate(PC1.mean = mean(.fittedPC1),
PC2.mean = mean(.fittedPC2))
pca_data<- as.data.frame(pca)%>%
group_by(Treatment, time_point)%>%
mutate(PC1.mean = mean(.fittedPC1),
PC2.mean = mean(.fittedPC2))
t(assay(Vsd))
Vsd
plotPCA(Vsd, intgroup = c("Treatment"))
plotPCA(Vsd, intgroup = c("Genotype"))
plotPCA(Vsd, intgroup = c("time_point"))
plotPCA(Vsd, intgroup = c("Treatment", "Genotype", "time_point"))
vst_PCAdata <- plotPCA(Vsd, intgroup = c("Treatment", "Genotype", "time_point"), returnData = TRUE)
percentVar <- round(100*attr(vst_PCAdata, "percentVar"))
ggplot(vst_PCAdata, aes(PC1, PC2, color=Treatment, shape=Genotype)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("A. cervicornis") +
theme_bw() + #Set background color
theme(panel.border = element_blank(), # Set border
axis.line = element_line(colour = "black"), #Set axes color
plot.background=element_blank()) +
stat_ellipse(aes(PC1, PC2, group=time_point, lty = time_point), type = "norm")
vst_PCA_SIC <- vst_PCAdata %>%
filter(Genotype == "SI-C")
vst_PCA_MBB <- vst_PCAdata %>%
filter(Genotype == "MB-B")
vst_PCA_BC8b <- vst_PCAdata %>%
filter(Genotype == "BC-8b")
# SI-C
ggplot(vst_PCA_SIC, aes(PC1, PC2, color=Treatment, shape=time_point)) +
geom_point(size=3) +
xlab(paste0("PC1: ",percentVar[1],"% variance")) +
ylab(paste0("PC2: ",percentVar[2],"% variance")) +
ggtitle("Acer genotype SI-C") +
theme_bw() +
scale_color_manual(values = c("#00CCCC", "#FF3333"))
## functions for PCA axes 2 and 3
#PCA 2 and 3 axis creation
pcaaxes23 = function (object, intgroup = "condition", ntop = 500, returnData = FALSE)
{
rv <- rowVars(assay(object))
select <- order(rv, decreasing = TRUE)[seq_len(min(ntop,
length(rv)))]
pca <- prcomp(t(assay(object)[select, ]))
percentVar <- pca$sdev^2/sum(pca$sdev^2)
if (!all(intgroup %in% names(colData(object)))) {
stop("the argument 'intgroup' should specify columns of colData(dds)")
}
intgroup.df <- as.data.frame(colData(object)[, intgroup,
drop = FALSE])
group <- if (length(intgroup) > 1) {
factor(apply(intgroup.df, 1, paste, collapse = ":"))
}
else {
colData(object)[[intgroup]]
}
d <- data.frame(PC2 = pca$x[, 2], PC3 = pca$x[, 3], group = group,
intgroup.df, name = colnames(object))
if (returnData) {
attr(d, "percentVar") <- percentVar[2:3]
return(d)
}
ggplot(data = d, aes_string(x = "PC2", y = "PC3", color = "group")) +
geom_point(size = 3) + xlab(paste0("PC2: ", round(percentVar[2] *
100), "% variance")) + ylab(paste0("PC3: ", round(percentVar[3] *
100), "% variance")) + coord_fixed()
}
pca23 <- pcaaxes23(Vsd, intgroup=c("Treatment", "Genotype", "time_point"), returnData = TRUE)
pcaaxes23(Vsd, intgroup=c("Genotype"), returnData = F)
pcaaxes23(Vsd, intgroup=c("time_point"), returnData = F) #clearer separation of time point
pcaaxes23(Vsd, intgroup=c("Treatment"), returnData = F)
percentVar_pc23 <- round(100*attr(pca23, "percentVar"))
ggplot(pca23, aes(PC2, PC3, color=Treatment, shape = time_point)) +
geom_point(size=3) +
xlab(paste0("PC2: ",percentVar_pc23[1],"% variance")) +
ylab(paste0("PC3: ",percentVar_pc23[2],"% variance")) +
ggtitle("A. cervicornis") +
theme_bw() +
stat_ellipse(aes(PC2, PC3, group=time_point, lty=time_point), type = "norm") +
#facet_wrap(~time_point) +
scale_color_manual(values = c("#00CCCC", "#FF3333"))
load("RData_files/realModels_Acer.RData")
load("RData_files/pvals.RData")
source=variable29_control29[!is.na(variable29_control29$pvalue),]
variable29_control29.fc=data.frame("gene"=row.names(source))
variable29_control29.fc$lfc=source[,"log2FoldChange"]
head(variable29_control29.fc)
write.csv(variable29_control29.fc,file="variable29_control29_fc.csv",row.names=F,quote=F)
save(variable29_control29.fc,file="variable29_control29_fc.RData")
variable29_control29.p=data.frame("gene"=row.names(source))
variable29_control29.p$lpv=-log(source[,"pvalue"],10)
variable29_control29.p$lpv[source$stat<0]=variable29_control29.p$lpv[source$stat<0]*-1
head(variable29_control29.p)
write.csv(variable29_control29.p,file="variable29_control29_lpv.csv",row.names=F,quote=F)
save(variable29_control29.p,file="variable29_control29_lpv.RData")
source=variable0_control0[!is.na(variable0_control0$pvalue),]
variable0_control0.fc=data.frame("gene"=row.names(source))
variable0_control0.fc$lfc=source[,"log2FoldChange"]
head(variable0_control0.fc)
write.csv(variable0_control0.fc,file="variable0_control0_fc.csv",row.names=F,quote=F)
save(variable0_control0.fc,file="variable0_control0_fc.RData")
variable0_control0.p=data.frame("gene"=row.names(source))
variable0_control0.p$lpv=-log(source[,"pvalue"],10)
variable0_control0.p$lpv[source$stat<0]=variable0_control0.p$lpv[source$stat<0]*-1
head(variable0_control0.p)
write.csv(variable0_control0.p,file="variable0_control0_lpv.csv",row.names=F,quote=F)
save(variable0_control0.p,file="variable0_control0_lpv.RData")
source=variable0_variable29[!is.na(variable0_variable29$pvalue),]
variable0_variable29.fc=data.frame("gene"=row.names(source))
variable0_variable29.fc$lfc=source[,"log2FoldChange"]
head(variable0_variable29.fc)
write.csv(variable0_variable29.fc,file="variable0_variable29_fc.csv",row.names=F,quote=F)
save(variable0_variable29.fc,file="variable0_variable29_fc.RData")
variable0_variable29.p=data.frame("gene"=row.names(source))
variable0_variable29.p$lpv=-log(source[,"pvalue"],10)
variable0_variable29.p$lpv[source$stat<0]=variable0_variable29.p$lpv[source$stat<0]*-1
head(variable0_variable29.p)
write.csv(variable0_variable29.p,file="variable0_variable29_lpv.csv",row.names=F,quote=F)
save(variable0_variable29.p,file="variable0_variable29_lpv.RData")
source=control0_control29[!is.na(control0_control29$pvalue),]
control0_control29.fc=data.frame("gene"=row.names(source))
control0_control29.fc$lfc=source[,"log2FoldChange"]
head(control0_control29.fc)
write.csv(control0_control29.fc,file="control0_control29_fc.csv",row.names=F,quote=F)
save(control0_control29.fc,file="control0_control29_fc.RData")
# signed log p-values: -log(pvalue)* direction:
control0_control29.p=data.frame("gene"=row.names(source))
control0_control29.p$lpv=-log(source[,"pvalue"],10)
control0_control29.p$lpv[source$stat<0]=control0_control29.p$lpv[source$stat<0]*-1
head(control0_control29.p)
write.csv(control0_control29.p,file="control0_control29_lpv.csv",row.names=F,quote=F)
save(control0_control29.p,file="control0_control29_lpv.RData")
as.data.frame(control0_control29) %>%
rownames_to_column(var="gene") %>%
filter(padj < 0.05 & abs(log2FoldChange) >= 2) %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = c("gene" = "gene")) %>%
write_csv("control0_control29_annotatedDGEs.csv")
as.data.frame(variable29_control29) %>%
rownames_to_column(var="gene") %>%
filter(padj < 0.05 & abs(log2FoldChange) >= 2) %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = c("gene" = "gene")) %>%
write_csv("variable29_control29_annotatedDGEs.csv")
as.data.frame(variable0_control0) %>%
rownames_to_column(var="gene") %>%
filter(padj < 0.05 & abs(log2FoldChange) >= 2) %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = c("gene" = "gene")) %>%
write_csv("variable0_control0_annotatedDGEs.csv")
as.data.frame(variable0_variable29) %>%
rownames_to_column(var="gene") %>%
filter(padj < 0.05 & abs(log2FoldChange) >= 2) %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = c("gene" = "gene")) %>%
write_csv("variable0_variable29_annotatedDGEs.csv")
load("RData_files/variable0_control0_lpv.RData")
variable0_control0.p %>%
filter(abs(lpv) >= 1) %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = c("gene" = "gene")) %>%
filter(str_detect(annot, 'NF-kappaB|peroxidas|TGF-beta|protein tyrosine kinase|fibrinogen|WD repeat-containing protein|apoptosis|extracellular matrix')) %>%
write.csv("variable0control0_cherrypicking.csv")
variable29_control29.p %>%
filter(abs(lpv) >= 1) %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = c("gene" = "gene")) %>%
filter(str_detect(annot, 'NF-kappaB|peroxidas|TGF-beta|protein tyrosine kinase|fibrinogen|WD repeat-containing protein|apoptosis|extracellular matrix')) %>%
write.csv("variable29control29_cherrypicking.csv")
library(EnhancedVolcano)
library(tidyverse)
load("RData_files/pvals.RData")
control0_control29_annotated <- as.data.frame(control0_control29) %>%
rownames_to_column(var="gene") %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = c("gene" = "gene"))
keyvals <- ifelse(
control0_control29_annotated$log2FoldChange < -2 & control0_control29_annotated$padj < 0.05, 'royalblue',
ifelse(control0_control29_annotated$log2FoldChange > 2 & control0_control29_annotated$padj < 0.05, 'red',
'grey'))
keyvals[is.na(keyvals)] <- 'grey'
names(keyvals)[keyvals == 'red'] <- 'significantly high (padj < 0.05 and L2FC > 2)'
names(keyvals)[keyvals == 'grey'] <- '-2 < L2FC < 2 and padj > 0.05'
names(keyvals)[keyvals == 'royalblue'] <- 'significantly low (padj < 0.05 and L2FC < -2)'
pdf(file="volcano_control0control29.pdf", width = 12, height = 6)
EnhancedVolcano(control0_control29_annotated,
lab = control0_control29_annotated$gene,
title = "Control Day 0 vs. Control Day 29",
x = 'log2FoldChange',
y = 'padj',
ylab = bquote(~-Log[10]~ 'FDR P-adjusted'),
legendPosition = 'right',
pCutoff = 10e-2,
FCcutoff = 2.0,
legendIconSize = 5.0,
labSize = 6.0,
colCustom = keyvals,
colAlpha = 0.5,
drawConnectors = TRUE,
widthConnectors = 1.0,
colConnectors = 'black',
max.overlaps = 10)
pdf(file="volcano_control0control29.pdf", width = 12, height = 6)
EnhancedVolcano(control0_control29_annotated,
title = "Control Day 0 vs. Control Day 29",
x = 'log2FoldChange',
y = 'padj',
ylab = bquote(~-Log[10]~ 'FDR P-adjusted'),
legendPosition = 'right',
pCutoff = 10e-2,
FCcutoff = 2.0,
legendIconSize = 5.0,
labSize = 6.0,
colCustom = keyvals,
colAlpha = 0.5)
pdf(file="volcano_control0control29.pdf", width = 12, height = 6)
EnhancedVolcano(control0_control29_annotated,
lab = NA,
title = "Control Day 0 vs. Control Day 29",
x = 'log2FoldChange',
y = 'padj',
ylab = bquote(~-Log[10]~ 'FDR P-adjusted'),
legendPosition = 'right',
pCutoff = 10e-2,
FCcutoff = 2.0,
legendIconSize = 5.0,
labSize = 6.0,
colCustom = keyvals,
colAlpha = 0.5)
variable0_control0_annotated <- as.data.frame(variable0_control0) %>%
rownames_to_column(var="gene") %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = c("gene" = "gene"))
keyvals <- ifelse(
variable0_control0_annotated$log2FoldChange < -2 & variable0_control0_annotated$padj < 0.05, 'royalblue',
ifelse(variable0_control0_annotated$log2FoldChange > 2 & variable0_control0_annotated$padj < 0.05, 'red',
'grey'))
keyvals[is.na(keyvals)] <- 'grey'
names(keyvals)[keyvals == 'red'] <- 'significantly high (padj < 0.05 and L2FC > 2)'
names(keyvals)[keyvals == 'grey'] <- '-2 < L2FC < 2 and padj > 0.05'
names(keyvals)[keyvals == 'royalblue'] <- 'significantly low (padj < 0.05 and L2FC < -2)'
pdf(file="volcano_variable0control0.pdf", width = 12, height = 6)
EnhancedVolcano(variable0_control0_annotated,
lab = NA,
title = "Variable Day 0 vs. Control Day 0",
x = 'log2FoldChange',
y = 'padj',
legendPosition = 'right',
pCutoff = 10e-2,
FCcutoff = 2.0,
legendIconSize = 5.0,
labSize = 6.0,
colCustom = keyvals,
colAlpha = 0.5)
variable0_variable29_annotated <- as.data.frame(variable0_variable29) %>%
rownames_to_column(var="gene") %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = c("gene" = "gene"))
keyvals <- ifelse(
variable0_variable29_annotated$log2FoldChange < -2 & variable0_variable29_annotated$padj < 0.05, 'royalblue',
ifelse(variable0_variable29_annotated$log2FoldChange > 2 & variable0_variable29_annotated$padj < 0.05, 'red',
'grey'))
keyvals[is.na(keyvals)] <- 'grey'
names(keyvals)[keyvals == 'red'] <- 'significantly high (padj < 0.05 and L2FC > 2)'
names(keyvals)[keyvals == 'grey'] <- '-2 < L2FC < 2 and padj > 0.05'
names(keyvals)[keyvals == 'royalblue'] <- 'significantly low (padj < 0.05 and L2FC < -2)'
pdf(file="volcano_variable0variable29.pdf", width = 12, height = 6)
EnhancedVolcano(variable0_variable29_annotated,
lab = NA,
title = "Variable Day 0 vs. Variable Day 29",
x = 'log2FoldChange',
y = 'padj',
legendPosition = 'right',
pCutoff = 10e-2,
FCcutoff = 2.0,
legendIconSize = 5.0,
labSize = 6.0,
colCustom = keyvals,
colAlpha = 0.5)
variable29_control29_annotated <- as.data.frame(variable29_control29) %>%
rownames_to_column(var="gene") %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = c("gene" = "gene"))
keyvals <- ifelse(
variable29_control29_annotated$log2FoldChange < -2 & variable29_control29_annotated$padj < 0.05, 'royalblue',
ifelse(variable29_control29_annotated$log2FoldChange > 2 & variable29_control29_annotated$padj < 0.05, 'red',
'grey'))
keyvals[is.na(keyvals)] <- 'grey'
names(keyvals)[keyvals == 'red'] <- 'significantly high (padj < 0.05 and L2FC > 2)'
names(keyvals)[keyvals == 'grey'] <- '-2 < L2FC < 2 and padj > 0.05'
names(keyvals)[keyvals == 'royalblue'] <- 'significantly low (padj < 0.05 and L2FC < -2)'
pdf(file="volcano_variable29control29.pdf", width = 12, height = 6)
EnhancedVolcano(variable29_control29_annotated,
title = "Variable Day 29 vs. Control Day 29",
lab = NA,
x = 'log2FoldChange',
y = 'padj',
legendPosition = 'right',
pCutoff = 10e-2,
FCcutoff = 2.0,
legendIconSize = 5.0,
labSize = 6.0,
colCustom = keyvals,
colAlpha = 0.5)
#install.packages("KOGMWU")
library(KOGMWU)
# loading KOG annotations
gene2kog=read.table("~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2kogClass.tab",sep="\t", fill=T) #iso2kogClass.tab not iso2kogClass1.tab because that file has an "error" when you try to view it using the terminal
head(gene2kog)
setwd("OneDrive - University of Miami/GitHub/Ch2_temperaturevariability2023/gene_expression/MS_bioinformatics/Acer_Rmd")
#setwd("OneDrive - University of Miami/GitHub/Ch2_temperaturevariability2023/gene_expression/MS_bioinformatics/Acer_Rmd")
load("RData_files/pvals.RData")
control0_control29 # names of datasets in the package
control0_control29=load('RData_files/control0_control29_lpv.RData')
control0_control29 # names of datasets in the package
lpv.control0_control29=kog.mwu(control0_control29.p,gene2kog)
lpv.control0_control29
variable0_control0=load('RData_files/variable0_control0_lpv.RData')
variable0_control0 # names of datasets in the package
lpv.variable0_control0=kog.mwu(variable0_control0.p,gene2kog)
lpv.variable0_control0
variable29_control29=load('RData_files/variable29_control29_lpv.RData')
variable29_control29 # names of datasets in the package
lpv.variable29_control29=kog.mwu(variable29_control29.p,gene2kog)
lpv.variable29_control29
variable0_variable29=load('RData_files/variable0_variable29_lpv.RData')
variable0_variable29 # names of datasets in the package
lpv.variable0_variable29=kog.mwu(variable0_variable29.p,gene2kog)
lpv.variable0_variable29
# compiling a table of delta-ranks to compare these results:
ktable=makeDeltaRanksTable(list("control0_control29"=lpv.control0_control29,"variable0_control0"=lpv.variable0_control0,"variable0_variable29"=lpv.variable0_variable29,"variable29_control29"=lpv.variable29_control29))
library(RColorBrewer)
color = colorRampPalette(rev(c(brewer.pal(n = 7, name ="RdBu"),"royalblue","darkblue")))(100)
pdf(file="KOG_Acer_host_lpv.pdf", width=7, height=8)
pheatmap(as.matrix(ktable),clustering_distance_cols="correlation",color=color, cellwidth=15, cellheight=15, border_color="white")
while (!is.null(dev.list()))  dev.off()
pairs(ktable, lower.panel = panel.smooth, upper.panel = panel.cor)
#scatterplots between pairs
# p-values of these correlations in the upper panel:
pairs(ktable, lower.panel = panel.smooth, upper.panel = panel.cor.pval)
# creating a pub-ready corr plot
pdf(file="KOG_intervention_Acer_corr_lpv.pdf", width=10, height=10)
par(mfrow=c(4,4))
corrPlot(x="control0_control29",y="variable0_control0",ktable)
corrPlot(x="control0_control29",y="variable0_variable29",ktable)
corrPlot(x="control0_control29",y="variable29_control29",ktable)
corrPlot(x="variable0_control0",y="variable0_variable29",ktable)
corrPlot(x="variable0_control0",y="variable29_control29",ktable)
corrPlot(x="variable0_variable29",y="variable29_control29",ktable)
dev.off()
variable0_control0=load('RData_files/variable0_control0_fc.RData')
variable0_control0 # names of datasets in the package
fc.variable0_control0=kog.mwu(variable0_control0.fc,gene2kog)
fc.variable0_control0
control0_control29=load('RData_files/control0_control29_fc.RData')
control0_control29 # names of datasets in the package
fc.control0_control29=kog.mwu(control0_control29.fc,gene2kog)
fc.control0_control29
variable0_variable29=load('RData_files/variable0_variable29_fc.RData')
variable0_variable29 # names of datasets in the package
fc.variable0_variable29=kog.mwu(variable0_variable29.fc,gene2kog)
fc.variable0_variable29
variable29_control29=load('RData_files/variable29_control29_fc.RData')
variable29_control29 # names of datasets in the package
fc.variable29_control29=kog.mwu(variable29_control29.fc,gene2kog)
fc.variable29_control29
# compiling a table of delta-ranks to compare these results:
ktable=makeDeltaRanksTable(list("variable0_control0"=fc.variable0_control0,"control0_control29"=fc.control0_control29,
"variable0_variable29"=fc.variable0_variable29,"variable29_control29"=fc.variable29_control29))
library(RColorBrewer)
color = colorRampPalette(rev(c(brewer.pal(n = 7, name ="RdBu"),"royalblue","darkblue")))(100)
# Making a heatmap with hierarchical clustering trees:
pdf(file="KOG_Acer_host_fc.pdf")
pheatmap(as.matrix(ktable),clustering_distance_cols="correlation",color=color, cellwidth=15, cellheight=15, border_color="white")
while (!is.null(dev.list()))  dev.off()
#this wasn't working so I manually saved it as a PDF by right clicking it in the R plot panel
# exploring correlations between datasets
pairs(ktable, lower.panel = panel.smooth, upper.panel = panel.cor)
#scatterplots between pairs
# p-values of these correlations in the upper panel:
pairs(ktable, lower.panel = panel.smooth, upper.panel = panel.cor.pval)
# creating a pub-ready corr plot
pdf(file="KOG_Acer_host_corr_fc.pdf", width=10, height=10)
par(mfrow=c(2,3))
corrPlot(x="control0_control29",y="variable0_control0",ktable)
corrPlot(x="control0_control29",y="variable0_variable29",ktable)
corrPlot(x="control0_control29",y="variable29_control29",ktable)
corrPlot(x="variable0_control0",y="variable0_variable29",ktable)
corrPlot(x="variable0_control0",y="variable29_control29",ktable)
corrPlot(x="variable0_variable29",y="variable29_control29",ktable)
dev.off()
