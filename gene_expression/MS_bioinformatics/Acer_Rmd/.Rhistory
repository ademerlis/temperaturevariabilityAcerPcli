pheatmap(as.matrix(ktable),clustering_distance_cols="correlation",color=color, cellwidth=15, cellheight=15, border_color="white")
while (!is.null(dev.list()))  dev.off()
pairs(ktable, lower.panel = panel.smooth, upper.panel = panel.cor)
#scatterplots between pairs
# p-values of these correlations in the upper panel:
pairs(ktable, lower.panel = panel.smooth, upper.panel = panel.cor.pval)
# creating a pub-ready corr plot
pdf(file="KOG_intervention_Acer_corr_lpv.pdf", width=10, height=10)
par(mfrow=c(4,4))
corrPlot(x="control0_control29",y="variable0_control0",ktable)
corrPlot(x="control0_control29",y="variable0_variable29",ktable)
corrPlot(x="control0_control29",y="variable29_control29",ktable)
corrPlot(x="variable0_control0",y="variable0_variable29",ktable)
corrPlot(x="variable0_control0",y="variable29_control29",ktable)
corrPlot(x="variable0_variable29",y="variable29_control29",ktable)
dev.off()
variable0_control0=load('RData_files/variable0_control0_fc.RData')
variable0_control0 # names of datasets in the package
fc.variable0_control0=kog.mwu(variable0_control0.fc,gene2kog)
fc.variable0_control0
control0_control29=load('RData_files/control0_control29_fc.RData')
control0_control29 # names of datasets in the package
fc.control0_control29=kog.mwu(control0_control29.fc,gene2kog)
fc.control0_control29
variable0_variable29=load('RData_files/variable0_variable29_fc.RData')
variable0_variable29 # names of datasets in the package
fc.variable0_variable29=kog.mwu(variable0_variable29.fc,gene2kog)
fc.variable0_variable29
variable29_control29=load('RData_files/variable29_control29_fc.RData')
variable29_control29 # names of datasets in the package
fc.variable29_control29=kog.mwu(variable29_control29.fc,gene2kog)
fc.variable29_control29
# compiling a table of delta-ranks to compare these results:
ktable=makeDeltaRanksTable(list("variable0_control0"=fc.variable0_control0,"control0_control29"=fc.control0_control29,
"variable0_variable29"=fc.variable0_variable29,"variable29_control29"=fc.variable29_control29))
library(RColorBrewer)
color = colorRampPalette(rev(c(brewer.pal(n = 7, name ="RdBu"),"royalblue","darkblue")))(100)
# Making a heatmap with hierarchical clustering trees:
pdf(file="KOG_Acer_host_fc.pdf")
pheatmap(as.matrix(ktable),clustering_distance_cols="correlation",color=color, cellwidth=15, cellheight=15, border_color="white")
while (!is.null(dev.list()))  dev.off()
pairs(ktable, lower.panel = panel.smooth, upper.panel = panel.cor)
#scatterplots between pairs
# p-values of these correlations in the upper panel:
pairs(ktable, lower.panel = panel.smooth, upper.panel = panel.cor.pval)
# creating a pub-ready corr plot
pdf(file="KOG_Acer_host_corr_fc.pdf", width=10, height=10)
par(mfrow=c(2,3))
corrPlot(x="control0_control29",y="variable0_control0",ktable)
corrPlot(x="control0_control29",y="variable0_variable29",ktable)
corrPlot(x="control0_control29",y="variable29_control29",ktable)
corrPlot(x="variable0_control0",y="variable0_variable29",ktable)
corrPlot(x="variable0_control0",y="variable29_control29",ktable)
corrPlot(x="variable0_variable29",y="variable29_control29",ktable)
dev.off()
pheatmap(as.matrix(ktable),clustering_distance_cols="correlation",color=color, cellwidth=15, cellheight=15, border_color="white")
library(tidyverse)
library(VennDiagram)
library(pheatmap)
library(reshape2)
library(RColorBrewer)
#### DESEQ IMPORT ####
load("RData_files/pvals.RData")
load("RData_files/control0_control29_lpv.RData")
control0_control29.p <- control0_control29.p %>% rename("lpv_c0c29" = lpv)
control0_control29.p
control0_control29.p %>% rename("lpv_c0c29" = lpv)
control0_control29.p %>% rename("lpv_c0c29" = "lpv")
control0_control29.p <- control0_control29.p %>% dplyr::rename("lpv_c0c29" = lpv)
control0_control29.p
load("RData_files/variable0_control0_lpv.RData")
variable0_control0.p <- variable0_control0.p %>% dplyr::rename("lpv_v0c0" = lpv)
load("RData_files/variable0_variable29_lpv.RData")
variable0_variable29.p <- variable0_variable29.p %>% dplyr::rename("lpv_v0v29" = lpv)
load("RData_files/variable29_control29_lpv.RData")
variable29_control29.p <- variable29_control29.p %>% dplyr::rename("lpv_v29c29" = lpv)
# first see if there are any shared genes with control0vs29 and variable0vs29
control0_control29.p %>%
inner_join(variable0_variable29.p, by = "gene") %>%
filter(abs(lpv_c0c29) >= 1 & abs(lpv_v0v29) >= 1) %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = "gene") %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2kogClass.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> c0c29_v0v29 #there are ~11,000 shared genes (cut-off is p-adj of 0.1)
c0c29_v0v29
str(control0_control29.p) #47866 isogroups
anti_join(control0_control29.p, variable0_variable29.p)
str(variable0_variable29.p)
anti_join(control0_control29.p, variable0_variable29.p)
str(anti_join(control0_control29.p, variable0_variable29.p))
unique_C0C29 <- anti_join(control0_control29.p, variable0_variable29.p) #3712 genes
unique(V0V29) <- anti_join(variable0_variable29.p, control0_control29.p)
unique_V0V29 <- anti_join(variable0_variable29.p, control0_control29.p)
unique_V0V29 <-
anti_join(variable0_variable29.p, control0_control29.p)
unique_V0V29 <-
str(anti_join(variable0_variable29.p, control0_control29.p))
control0_control29.p %>% filter(abs(lpv_c0c29) >= 1)
str(control0_control29.p %>% filter(abs(lpv_c0c29) >= 1))
str(control0_control29.p %>% filter(lpv_c0c29 >= 1)) #16,022 genes significant at level of padj 0.1
str(variable0_variable29.p %>% filter(abs(lpv_v0v29) >= 1))
unique_sig_C0C29 <- control0_control29.p %>% filter(abs(lpv_c0c29) >= 1) %>% anti_join(., variable0_variable29.p) #3712 genes
unique_sig_V0V29 <- variable0_variable29.p %>% filter(abs(lpv_v0v29) >= 1) %>% anti_join(., control0_control29.p)
View(unique_sig_V0V29)
unique_C0C29 <- anti_join(control0_control29.p, variable0_variable29.p)
# next look at variable0vscontrol0 and variable29vscontrol29
variable0_control0.p %>%
inner_join(variable29_control29.p, by = "gene") %>%
filter(abs(lpv_v0c0) >= 1 & abs(lpv_v29c29) >= 1) %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = "gene") %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2kogClass.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> v0c0_v29c29 #~1500 shared genes
View(v0c0_v29c29)
# variable 29 vs control 29
# log2 fold changes:
source=variable29_control29[!is.na(variable29_control29$padj),]
source
variable29_control29.p$lpv[source$stat<0]=variable29_control29.p$lpv[source$stat<0]*-1
head(variable29_control29.p)
# signed log FDR-adjusted p-values: -log(p-adj)* direction:
variable29_control29.p=data.frame("gene"=row.names(source))
variable29_control29.p
variable29_control29.p$lpv=-log(source[,"padj"],10)
variable29_control29.p
variable29_control29.p$lpv[source$stat<0]=variable29_control29.p$lpv[source$stat<0]*-1
variable29_control29.p
#### DESEQ IMPORT ####
load("RData_files/pvals.RData")
load("RData_files/control0_control29_lpv.RData")
control0_control29.p <- control0_control29.p %>% dplyr::rename("lpv_c0c29" = lpv) #40,443 genes
load("RData_files/variable0_control0_lpv.RData")
variable0_control0.p <- variable0_control0.p %>% dplyr::rename("lpv_v0c0" = lpv) #20,952 genes
load("RData_files/variable0_variable29_lpv.RData")
variable0_variable29.p <- variable0_variable29.p %>% dplyr::rename("lpv_v0v29" = lpv) #36,731 genes
load("RData_files/variable29_control29_lpv.RData")
variable29_control29.p <- variable29_control29.p %>% dplyr::rename("lpv_v29c29" = lpv) #30,233 genes
# first see if there are any shared genes with control0vs29 and variable0vs29
control0_control29.p %>%
inner_join(variable0_variable29.p, by = "gene") %>%
filter(abs(lpv_c0c29) >= 1 & abs(lpv_v0v29) >= 1) %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = "gene") %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2kogClass.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> c0c29_v0v29 #there are ~7,527 shared genes (cut-off is p-adj of 0.1)
unique_sig_C0C29 <- control0_control29.p %>% filter(abs(lpv_c0c29) >= 1) %>% anti_join(., variable0_variable29.p) #273 genes
unique_sig_V0V29 <- variable0_variable29.p %>% filter(abs(lpv_v0v29) >= 1) %>% anti_join(., control0_control29.p) #0 genes
unique_C0C29 <- anti_join(control0_control29.p, variable0_variable29.p) #3712 genes
# next look at variable0vscontrol0 and variable29vscontrol29
variable0_control0.p %>%
inner_join(variable29_control29.p, by = "gene") %>%
filter(abs(lpv_v0c0) >= 1 & abs(lpv_v29c29) >= 1) %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2geneName.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
annot = V2) %>%
dplyr::select(-V1, -V2), by = "gene") %>%
left_join(read.table(file = "~/OneDrive - University of Miami/NOAA ERL/stress hardening 2022/gene expression/Acervicornis_annotatedTranscriptome/Acervicornis_iso2kogClass.tab",
sep = "\t",
quote="", fill=FALSE) %>%
mutate(gene = V1,
KOG = V2) %>%
dplyr::select(-V1, -V2), by = "gene") -> v0c0_v29c29 #47 shared genes
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v0c0 >= 1) %>%
count(KOG) %>%
rename("KOG" = KOG, "v0c0_up" = n) -> KOG_v0c0_up
# filtering and summarizing DEGs by KOG class for high-level comparisons
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v0c0 >= 1) %>%
count(KOG) %>%
dplyr::rename("KOG" = KOG, "v0c0_up" = n) -> KOG_v0c0_up
v0c0_v29c29
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA))
v0c0_v29c29
View(v0c0_v29c29)
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA))
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v0c0 >= 1) %>%
count(KOG)
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v0c0 >= 1)
# filtering and summarizing DEGs by KOG class for high-level comparisons
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v0c0 >= 1) %>%
dplyr::count(KOG) %>%
dplyr::rename("KOG" = KOG, "v0c0_up" = n) -> KOG_v0c0_up
View(KOG_v0c0_up)
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v29c29 >= 1) %>%
dplyr::count(KOG) %>%
dplyr::rename("KOG" = KOG, "v29c29_up" = n) -> KOG_v29c29_up
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v29c29 <= -1) %>%
dplyr::count(KOG) %>%
dplyr::rename("KOG" = KOG, "v29c29_down" = n) -> KOG_v29c29_down
c0c29_v0v29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_c0c29 >= 1) %>%
dplyr::count(KOG) %>%
dplyr::rename("KOG" = KOG, "c0c29_up" = n) -> KOG_c0c29_up
c0c29_v0v29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_c0c29 <= -1) %>%
dplyr::count(KOG) %>%
dplyr::rename("KOG" = KOG, "c0c29_down" = n) -> KOG_c0c29_down
c0c29_v0v29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v0v29 >= 1) %>%
dplyr::count(KOG) %>%
dplyr::rename("KOG" = KOG, "v0v29_up" = n) -> KOG_v0v29_up
c0c29_v0v29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v0v29 <= -1) %>%
dplyr::count(KOG) %>%
dplyr::rename("KOG" = KOG, "v0v29_down" = n) -> KOG_v0v29_down
#v0c0 vs. v29c29
KOG_v0c0_up %>%
inner_join(KOG_v0c0_down, by = "KOG") %>%
inner_join(KOG_v29c29_down, by = "KOG") %>%
inner_join(KOG_v29c29_up, by = "KOG") -> KOG_v0c0_v29c29_match
v0c0_v29c29 %>%
mutate(KOG = replace(KOG, KOG == "", NA)) %>%
filter(lpv_v0c0 <= -1) %>%
dplyr::count(KOG) %>%
dplyr::rename("KOG" = KOG, "v0c0_down" = n) -> KOG_v0c0_down
#v0c0 vs. v29c29
KOG_v0c0_up %>%
inner_join(KOG_v0c0_down, by = "KOG") %>%
inner_join(KOG_v29c29_down, by = "KOG") %>%
inner_join(KOG_v29c29_up, by = "KOG") -> KOG_v0c0_v29c29_match
#c0c29 vs v0v29
KOG_c0c29_down %>%
inner_join(KOG_c0c29_up, by = "KOG") %>%
inner_join(KOG_v0v29_up, by = "KOG") %>%
inner_join(KOG_v0v29_down, by = "KOG") -> KOG_c0c29_v0v29_match
# melting dataframe for plotting
KOG_v0c0_v29c29_match %>%
melt(id = "KOG") %>%
rename(comparison = variable, sum = value) -> KOG_v0c0_v29c29_melt
# melting dataframe for plotting
KOG_v0c0_v29c29_match %>%
melt(id = "KOG") %>%
dplyr::rename(comparison = variable, sum = value) -> KOG_v0c0_v29c29_melt
KOG_c0c29_v0v29_match %>%
melt(id = "KOG") %>%
dplyr::rename(comparison = variable, sum = value) -> KOG_c0c29_v0v29_melt
colorCount = length(unique(KOG_v0c0_v29c29_match$KOG))
getPalette = colorRampPalette(brewer.pal(8, "Accent"))
KOG_v0c0_v29c29_sum <- ggplot(KOG_v0c0_v29c29_melt, aes(fill = KOG, y = sum, x = comparison)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Accent"))(colorCount)) +
labs(x = "Comparison",
y = "Proportion of DEGs") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
KOG_v0c0_v29c29_sum
colorCount = length(unique(KOG_c0c29_v0v29_match$KOG))
getPalette = colorRampPalette(brewer.pal(8, "Accent"))
KOG_c0c29_v0v29_sum <- ggplot(KOG_c0c29_v0v29_melt, aes(fill = KOG, y = sum, x = comparison)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = colorRampPalette(brewer.pal(8, "Accent"))(colorCount)) +
labs(x = "Comparison",
y = "Proportion of DEGs") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
KOG_c0c29_v0v29_sum
ggsave("common genes KOG c0c29_v0v29 abundance.pdf", plot= KOG_c0c29_v0v29_sum, width=8, height=6, units="in", dpi=300)
ggsave("common genes KOG v0c0_v29c29 abundance.pdf", plot= KOG_v0c0_v29c29_sum, width=8, height=6, units="in", dpi=300)
ggsave("common genes KOG v0c0_v29c29 abundance.pdf", plot= KOG_v0c0_v29c29_sum, width=8, height=6, units="in", dpi=300)
ggsave("common genes KOG c0c29_v0v29 abundance.pdf", plot= KOG_c0c29_v0v29_sum, width=8, height=6, units="in", dpi=300)
ggsave("common genes KOG c0c29_v0v29 abundance.pdf", plot= KOG_c0c29_v0v29_sum, width=12, height=6, units="in", dpi=300)
v0c0_v29c29 %>%
filter(lpv_v0c0 >= 1) %>%
pull(gene) -> v0c0_up
v0c0_v29c29 %>%
filter(lpv_v0c0 <= -1) %>%
pull(gene) -> v0c0_down
v0c0_v29c29 %>%
filter(lpv_v29c29 >= 1) %>%
pull(gene) -> v29c29_up
v0c0_v29c29 %>%
filter(lpv_v29c29 <= -1) %>%
pull(gene) -> v29c29_down
# then creating a second set for c0c29_v0v29
c0c29_v0v29 %>%
filter(lpv_c0c29 >= 1) %>%
pull(gene) -> c0c29_up
c0c29_v0v29 %>%
filter(lpv_c0c29 <= -1) %>%
pull(gene) -> c0c29_down
c0c29_v0v29 %>%
filter(lpv_v0v29 >= 1) %>%
pull(gene) -> v0v29_up
c0c29_v0v29 %>%
filter(lpv_v0v29 <= -1) %>%
pull(gene) -> v0v29_down
# v0c0_v29c29
venn_v0c0v29c29=venn.diagram(
x = list("V0/C0 up"=v0c0_up, "V0/C0 down"=v0c0_down,"V29/C29 up"=v29c29_up, "V29/C29 down"=v29c29_down),
filename=NULL,
col = "transparent",
fill = c("#ca0020", "#0571b0", "#f4a582", "#92c5de"),
alpha = 0.5,
label.col = c("red3","white","cornflowerblue","black","white","white","white", "black","darkred","grey25","white","white","grey25","darkblue","white"),
cex = 3.5,
fontfamily = "sans",
fontface = "bold",
cat.default.pos = "text",
cat.col =c("darkred", "darkblue", "red3", "cornflowerblue"),
cat.cex = 3.5,
cat.fontfamily = "sans",
cat.just = list(c(0,0.5),c(0.75,0.5),c(0.5,0.5),c(0.5,0.5))
)
venn_v0c0v29c29=venn.diagram(
x = list("V0/C0 up"=v0c0_up, "V0/C0 down"=v0c0_down,"V29/C29 up"=v29c29_up, "V29/C29 down"=v29c29_down),
filename=NULL,
col = "transparent",
fill = c("#ca0020", "#0571b0", "#f4a582", "#92c5de"),
alpha = 0.5,
label.col = c("red3","white","cornflowerblue","black","white","white","white", "black","darkred","grey25","white","white","grey25","darkblue","white"),
cex = 3.5,
fontfamily = "sans",
fontface = "bold",
cat.default.pos = "text",
cat.col =c("darkred", "darkblue", "red3", "cornflowerblue"),
cat.cex = 3.5,
cat.fontfamily = "sans",
cat.just = list(c(0,0.5),c(0.75,0.5),c(0.5,0.5),c(0.5,0.5))
)
pdf(file="venn_v0c0v29c29.pdf", height=10, width=12)
grid.draw(venn_v0c0v29c29)
dev.off()
venn_c0c29_v0v29=venn.diagram(
x = list("C0/C29 up"=c0c29_up, "C0/C29 down"=c0c29_down,"V0/V29 up"=v0v29_up, "V0/V29 down"=v0v29_down),
filename=NULL,
col = "transparent",
fill = c("#ca0020", "#0571b0", "#f4a582", "#92c5de"),
alpha = 0.5,
label.col = c("red3","white","cornflowerblue","black","white","white","white", "black","darkred","grey25","white","white","grey25","darkblue","white"),
cex = 3.5,
fontfamily = "sans",
fontface = "bold",
cat.default.pos = "text",
cat.col =c("darkred", "darkblue", "red3", "cornflowerblue"),
cat.cex = 3.5,
cat.fontfamily = "sans",
cat.just = list(c(0,0.5),c(0.75,0.5),c(0.5,0.5),c(0.5,0.5))
)
pdf(file="venn_c0c29_v0v29.pdf", height=10, width=12)
grid.draw(venn_c0c29_v0v29)
dev.off()
list("C0/C29 up"=c0c29_up, "C0/C29 down"=c0c29_down,"V0/V29 up"=v0v29_up, "V0/V29 down"=v0v29_down)
v0c0_up
venn_v0c0v29c29=venn.diagram(
x = list("V0/C0 up"=v0c0_up, "V0/C0 down"=v0c0_down,"V29/C29 up"=v29c29_up, "V29/C29 down"=v29c29_down),
category.names = c("V0/C0 up", "V0/C0 down", "V29/C29 up", "V29/C29 down"),
filename=NULL,
col = "transparent",
fill = c("#ca0020", "#0571b0", "#f4a582", "#92c5de"),
alpha = 0.5,
label.col = c("red3","white","cornflowerblue","black","white","white","white", "black","darkred","grey25","white","white","grey25","darkblue","white"),
cex = 3.5,
fontfamily = "sans",
fontface = "bold",
cat.default.pos = "text",
cat.col =c("darkred", "darkblue", "red3", "cornflowerblue"),
cat.cex = 3.5,
cat.fontfamily = "sans",
cat.just = list(c(0,0.5),c(0.75,0.5),c(0.5,0.5),c(0.5,0.5))
)
pdf(file="venn_v0c0v29c29.pdf", height=10, width=12)
grid.draw(venn_v0c0v29c29)
dev.off()
v0v29_down
# first loading variance stabilized arrays of gene counts, then replacing species-specific gene IDs with orthogroup IDs, then removing NAI samples
load("RData_files/vsd.RData")
library(tidyverse)
library(WGCNA)
library(flashClust)
library(ape)
options(stringsAsFactors=FALSE)
allowWGCNAThreads()
setwd("OneDrive - University of Miami/GitHub/Ch2_temperaturevariability2023/gene_expression/MS_bioinformatics/Acer_Rmd/")
lnames=load("RData_files/data4wgcna.RData")
lnames # "vsd.wg"  "design" # log-transformed variance-stabilized gene expression, and table or experimental conditions
datt=t(vsd.wg)
ncol(datt) #27829
nrow(datt) #45
head(design)
str(design)
all.equal(colnames(vsd.wg), rownames(design))
str(design)
head(design)
colnames(vsd.wg)
rownames(design) <- colnames(vsd.wg)
head(design)
all.equal(colnames(vsd.wg), rownames(design))
variable = as.numeric(design$Treatment=="variable")
control = as.numeric(design$Treatment == "control")
SI_C = as.numeric(design$Genotype == "SI-C")
BC_8b = as.numeric(design$Genotype == "BC-8b")
MB_B = as.numeric(design$Genotype == "MB-B")
Day0 = as.numeric(design$time_point=="Day_0")
Day29 =as.numeric(design$time_point=="Day_29")
control_Day0 = as.numeric(design$group=="control_Day_0")
control_Day29 = as.numeric(design$group=="control_Day_29")
variable_Day0 = as.numeric(design$group=="variable_Day_0")
variable_Day29 = as.numeric(design$group=="variable_Day_29")
traits <- data.frame(cbind(variable, control, SI_C,BC_8b, MB_B, Day0, Day29, control_Day0, control_Day29, variable_Day0, variable_Day29))
head(traits)
table(rownames(traits)==rownames(datt))
rownames(datt)
#change treatment to be binary (control = 0, variable = 1)
variable = as.numeric(design$Treatment=="variable")
View(traits)
View(design)
SI_C = as.numeric(design$Genotype == "SI-C")
traits <- data.frame(cbind(variable, control, Day0, Day29, control_Day0, control_Day29, variable_Day0, variable_Day29))
head(traits)
# identifies outlier genes
gsg = goodSamplesGenes(datt, verbose = 3);
head(datt)
gsg$allOK #if TRUE, no outlier genes
# calculates mean expression per array, then the number of missing values per array
meanExpressionByArray=apply( datt,1,mean, na.rm=T)
NumberMissingByArray=apply( is.na(data.frame(datt)),1, sum)
NumberMissingByArray
pdf("~/OneDrive - University of Miami/GitHub/Ch2_temperaturevariability2023/gene_expression/MS_bioinformatics/Acer_Rmd/WGCNA/sample_mean_expression.pdf",height=4, width=8)
barplot(meanExpressionByArray,
xlab = "Sample", ylab = "Mean expression",
main ="Mean expression across samples",
names.arg = c(1:45), cex.names = 0.7)
dev.off()
# sample dendrogram and trait heat map showing outliers
A=adjacency(t(datt),type="signed")                 #SELECT SIGNED OR UNSIGNED HERE
# this calculates the whole network connectivity
k=as.numeric(apply(A,2,sum))-1
Z.k=scale(k)
thresholdZ.k=-2.5 # often -2.5
outlierColor=ifelse(Z.k<thresholdZ.k,"red","black")
sampleTree = flashClust(as.dist(1-A), method = "average")
# Convert traits to a color representation where red indicates high values
traitColors=data.frame(numbers2colors(traits,signed=FALSE))
dimnames(traitColors)[[2]]=paste(names(traits))
datColors=data.frame(outlierC=outlierColor,traitColors)
# Plot the sample dendrogram and the colors underneath.
quartz()
plotDendroAndColors(sampleTree,groupLabels=names(datColors), colors=datColors,main="Sample dendrogram and trait heatmap")
remove.samples= Z.k<thresholdZ.k | is.na(Z.k)
datt=datt[!remove.samples,]
traits=traits[!remove.samples,] #1 sample removed
write.csv(traits, file="traits.csv")
save(datt,traits,file="wgcnaData.RData")
# Try different betas ("soft threshold") - power factor for calling connections between genes
powers = c(seq(from = 2, to=26, by=1))
# Call the network topology analysis function
sft = pickSoftThreshold(datt, powerVector = powers, verbose = 8,networkType="signed")
# importing data generated from DESeq2 script
lnames=load("RData_files/data4wgcna.RData")
lnames # "vsd.wg"  "design" # log-transformed variance-stabilized gene expression, and table or experimental conditions
datt=t(vsd.wg)
head(design)
all.equal(colnames(vsd.wg), rownames(design)) #FALSE
rownames(design) <- colnames(vsd.wg)
head(design)
all.equal(colnames(vsd.wg), rownames(design)) #TRUE
variable = as.numeric(design$Treatment=="variable")
control = as.numeric(design$Treatment == "control")
SI_C = as.numeric(design$Genotype == "SI_C")
BC_8b = as.numeric(design$Genotype == "BC_8b")
MB_B = as.numeric(design$Genotype == "MB_B")
Day0 = as.numeric(design$time_point=="Day_0")
Day29 =as.numeric(design$time_point=="Day_29")
control_Day0 = as.numeric(design$group=="control_Day_0")
control_Day29 = as.numeric(design$group=="control_Day_29")
variable_Day0 = as.numeric(design$group=="variable_Day_0")
variable_Day29 = as.numeric(design$group=="variable_Day_29")
